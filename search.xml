<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Ansible Detailed Tutorial I</title>
    <url>/2023/01/31-Ansible-Detailed-Tutorial-I/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=400 height=86 src="//music.163.com/outchain/player?type=2&id=5113327&auto=1&height=66"></iframe>
---

<h2 id="ansible-简介"><a href="#ansible-简介" class="headerlink" title="ansible 简介"></a>ansible 简介</h2><h3 id="ansible-是什么？"><a href="#ansible-是什么？" class="headerlink" title="ansible 是什么？"></a>ansible 是什么？</h3><p>　　ansible是新出现的自动化运维工具，基于Python开发，集合了众多运维工具（puppet、chef、func、fabric）的优点，实现了批量系统配置、批量程序部署、批量运行命令等功能。<br>　　ansible是基于 paramiko 开发的,并且基于模块化工作，本身没有批量部署的能力。真正具有批量部署的是ansible所运行的模块，ansible只是提供一种框架。ansible不需要在远程主机上安装client&#x2F;agents，因为它们是基于ssh来和远<br>程主机通讯的。ansible目前已经已经被红帽官方收购，是自动化运维工具中大家认可度最高的，并且上手容易，学习简单。是每位运维工程师必须掌握的技能之一。</p>
<h3 id="ansible-特点"><a href="#ansible-特点" class="headerlink" title="ansible 特点"></a>ansible 特点</h3><ol>
<li>部署简单，只需在主控端部署Ansible环境，被控端无需做任何操作；</li>
<li>默认使用SSH协议对设备进行管理；</li>
<li>有大量常规运维操作模块，可实现日常绝大部分操作；</li>
<li>配置简单、功能强大、扩展性强；</li>
<li>支持API及自定义模块，可通过Python轻松扩展；</li>
<li>通过Playbooks来定制强大的配置、状态管理；</li>
<li>轻量级，无需在客户端安装agent，更新时，只需在操作机上进行一次更新即可；</li>
<li>提供一个功能强大、操作性强的Web管理界面和REST API接口——AWX平台。</li>
</ol>
<h3 id="ansible-架构图"><a href="#ansible-架构图" class="headerlink" title="ansible 架构图"></a>ansible 架构图</h3><p><img src="/" alt="img"><br>　　上图中我们看到的主要模块如下：</p>
<blockquote>
<p><code>Ansible</code>：Ansible核心程序。<br><code>HostInventory</code>：记录由Ansible管理的主机信息，包括端口、密码、ip等。<br><code>Playbooks</code>：“剧本”YAML格式文件，多个任务定义在一个文件中，定义主机需要调用哪些模块来完成的功能。<br><code>CoreModules</code>：<strong>核心模块</strong>，主要操作是通过调用核心模块来完成管理任务。<br><code>CustomModules</code>：自定义模块，完成核心模块无法完成的功能，支持多种语言。<br><code>ConnectionPlugins</code>：连接插件，Ansible和Host通信使用</p>
</blockquote>
<h2 id="ansible-任务执行"><a href="#ansible-任务执行" class="headerlink" title="ansible 任务执行"></a>ansible 任务执行</h2><h3 id="ansible-任务执行模式"><a href="#ansible-任务执行模式" class="headerlink" title="ansible 任务执行模式"></a>ansible 任务执行模式</h3><p>　　Ansible 系统由控制主机对被管节点的操作方式可分为两类，即<code>adhoc</code>和<code>playbook</code>：</p>
<ul>
<li>ad-hoc模式(点对点模式)<br>　　使用单个模块，支持批量执行单条命令。ad-hoc 命令是一种可以快速输入的命令，而且不需要保存起来的命令。<strong>就相当于bash中的一句话shell。</strong></li>
<li>playbook模式(剧本模式)<br>　　是Ansible主要管理方式，也是Ansible功能强大的关键所在。<strong>playbook通过多个task集合完成一类功能</strong>，如Web服务的安装部署、数据库服务器的批量备份等。可以简单地把playbook理解为通过组合多条ad-hoc操作的配置文件。</li>
</ul>
<h3 id="ansible-执行流程"><a href="#ansible-执行流程" class="headerlink" title="ansible 执行流程"></a>ansible 执行流程</h3><p><img src="/../images/1204916-20171205162615738-1292598736.png" alt="img"><br>　　简单理解就是Ansible在运行时， 首先读取<code>ansible.cfg</code>中的配置， 根据规则获取<code>Inventory</code>中的管理主机列表， 并行的在这些主机中执行配置的任务， 最后等待执行返回的结果。</p>
<h3 id="ansible-命令执行过程"><a href="#ansible-命令执行过程" class="headerlink" title="ansible 命令执行过程"></a>ansible 命令执行过程</h3><ol>
<li>加载自己的配置文件，默认<code>/etc/ansible/ansible.cfg</code>；</li>
<li>查找对应的主机配置文件，找到要执行的主机或者组；</li>
<li>加载自己对应的模块文件，如 command；</li>
<li>通过ansible将模块或命令生成对应的临时py文件(python脚本)， 并将该文件传输至远程服务器；</li>
<li>对应执行用户的家目录的<code>.ansible/tmp/XXX/XXX.PY</code>文件；</li>
<li>给文件 +x 执行权限；</li>
<li>执行并返回结果；</li>
<li>删除临时py文件，<code>sleep 0</code>退出；</li>
</ol>
<h2 id="ansible-配置详解"><a href="#ansible-配置详解" class="headerlink" title="ansible 配置详解"></a>ansible 配置详解</h2><h3 id="ansible-安装方式"><a href="#ansible-安装方式" class="headerlink" title="ansible 安装方式"></a>ansible 安装方式</h3><p>　　ansible安装常用两种方式，<code>yum安装</code>和<code>pip程序安装</code>。下面我们来详细介绍一下这两种安装方式。</p>
<h4 id="使用-pip（python的包管理模块）安装"><a href="#使用-pip（python的包管理模块）安装" class="headerlink" title="使用 pip（python的包管理模块）安装"></a>使用 pip（python的包管理模块）安装</h4><p>　　首先，我们需要安装一个<code>python-pip</code>包，安装完成以后，则直接使用<code>pip</code>命令来安装我们的包，具体操作过程如下：</p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><code class="hljs mipsasm">yum <span class="hljs-keyword">install </span>python-pip<br>pip <span class="hljs-keyword">install </span>ansible<br></code></pre></td></tr></table></figure>

<h4 id="使用-yum-安装"><a href="#使用-yum-安装" class="headerlink" title="使用 yum 安装"></a>使用 yum 安装</h4><p>　　yum 安装是我们很熟悉的安装方式了。我们需要先安装一个<code>epel-release</code>包，然后再安装我们的 ansible 即可。</p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><code class="hljs mipsasm">yum <span class="hljs-keyword">install </span>epel-release -y<br>yum <span class="hljs-keyword">install </span>ansible –y<br></code></pre></td></tr></table></figure>

<h3 id="ansible-程序结构"><a href="#ansible-程序结构" class="headerlink" title="ansible 程序结构"></a>ansible 程序结构</h3><p>安装目录如下(yum安装)：<br>　　配置文件目录：&#x2F;etc&#x2F;ansible&#x2F;<br>　　执行文件目录：&#x2F;usr&#x2F;bin&#x2F;<br>　　Lib库依赖目录：&#x2F;usr&#x2F;lib&#x2F;pythonX.X&#x2F;site-packages&#x2F;ansible&#x2F;<br>　　Help文档目录：&#x2F;usr&#x2F;share&#x2F;doc&#x2F;ansible-X.X.X&#x2F;<br>　　Man文档目录：&#x2F;usr&#x2F;share&#x2F;man&#x2F;man1&#x2F;</p>
<h3 id="ansible配置文件查找顺序"><a href="#ansible配置文件查找顺序" class="headerlink" title="ansible配置文件查找顺序"></a>ansible配置文件查找顺序</h3><p>　　ansible与我们其他的服务在这一点上有很大不同，这里的配置文件查找是从多个地方找的，顺序如下：</p>
<ol>
<li>检查环境变量<code>ANSIBLE_CONFIG</code>指向的路径文件(export ANSIBLE_CONFIG&#x3D;&#x2F;etc&#x2F;ansible.cfg)；</li>
<li><code>~/.ansible.cfg</code>，检查当前目录下的ansible.cfg配置文件；</li>
<li><code>/etc/ansible.cfg</code>检查etc目录的配置文件。</li>
</ol>
<h3 id="ansible配置文件"><a href="#ansible配置文件" class="headerlink" title="ansible配置文件"></a>ansible配置文件</h3><p>　　ansible 的配置文件为<code>/etc/ansible/ansible.cfg</code>，ansible 有许多参数，下面我们列出一些常见的参数：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">inventory</span> = /etc/ansible/hosts		<span class="hljs-comment">#这个参数表示资源清单inventory文件的位置</span><br><span class="hljs-attr">library</span> = /usr/share/ansible		<span class="hljs-comment">#指向存放Ansible模块的目录，支持多个目录方式，只要用冒号（：）隔开就可以</span><br><span class="hljs-attr">forks</span> = <span class="hljs-number">5</span>		<span class="hljs-comment">#并发连接数，默认为5</span><br><span class="hljs-attr">sudo_user</span> = root		<span class="hljs-comment">#设置默认执行命令的用户</span><br><span class="hljs-attr">remote_port</span> = <span class="hljs-number">22</span>		<span class="hljs-comment">#指定连接被管节点的管理端口，默认为22端口，建议修改，能够更加安全</span><br><span class="hljs-attr">host_key_checking</span> = <span class="hljs-literal">False</span>		<span class="hljs-comment">#设置是否检查SSH主机的密钥，值为True/False。关闭后第一次连接不会提示配置实例</span><br><span class="hljs-attr">timeout</span> = <span class="hljs-number">60</span>		<span class="hljs-comment">#设置SSH连接的超时时间，单位为秒</span><br><span class="hljs-attr">log_path</span> = /var/log/ansible.log		<span class="hljs-comment">#指定一个存储ansible日志的文件（默认不记录日志）</span><br></code></pre></td></tr></table></figure>

<h3 id="ansuble主机清单"><a href="#ansuble主机清单" class="headerlink" title="ansuble主机清单"></a>ansuble主机清单</h3><p>　　在配置文件中，我们提到了资源清单，这个清单就是我们的主机清单，里面保存的是一些 ansible 需要连接管理的主机列表。我们可以来看看他的定义方式：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">1、正常写法,name1为别名：<br>[test1]<br>name1 ansible_ssh_host=192.168.1.111 ansible_ssh_user=&quot;root&quot; ansible_ssh_pass=&quot;1234&quot; ansible_ssh_port=22<br>name2 ansible_ssh_host=192.168.1.222 ansible_ssh_user=&quot;root&quot; ansible_ssh_pass=&quot;1234&quot; ansible_ssh_port=22<br><br>2、连续的IP写法,表示192.168.1.20到192.168.1.50，共31台主机：<br>[test1]<br>name1 ansible_ssh_host=192.168.1.[20:50] ansible_ssh_user=&quot;root&quot; ansible_ssh_pass=&quot;1234&quot; ansible_ssh_port=22<br><br>3、带参数的群组，vars底下为群组共同便变量，包括已定义变量和自定义变量：<br>[test1]<br>name1 ansible_ssh_host=192.168.1.[20:50]<br>[test1:vars]<br>ansible_ssh_user=root<br>ansible_ssh_pass=&quot;1234&quot;<br>testvar=&quot;test&quot;<br><br>4、群组整合，children底下为父群组test的子群组，调用方式为ansible test -m ping：<br>[dbtest]<br>name1 ansible_ssh_host=192.168.1.[20:50] ansible_ssh_user=&quot;root&quot; ansible_ssh_pass=&quot;1234&quot; ansible_ssh_port=22<br>[webtest]<br>name2 ansible_ssh_host=192.168.2.[20:50] ansible_ssh_user=&quot;root&quot; ansible_ssh_pass=&quot;1234&quot; ansible_ssh_port=22<br>[test:children]<br>dbtest<br>webtest<br><br>5、调用两个主机组的写法，以下webservers和dbservers都会被调用：<br>ansible webservers:dbservers -m win_ping<br><br>6、在webservers组中但不在dbsersers中的调用：<br>ansible webservers:!dbservers -m win_ping<br><br>7、在webservers组中并且在dbservers组中的才会调用：<br>ansible webservers:&amp;dbservers -m win_ping<br><br>8、在调用前加~，代表正则表达式：<br>ansible ~(web|db).*.oss.vip -m win_ping<br><br>9、组合的例子：<br>webserver:dbservers:&amp;nginx:!ntp<br><br>10、hosts文件中没有定义的IP或别名，在进行调用中，会提示错误。ansible对单台服务器的调用，服务器IP或域名必须有写在hosts里<br></code></pre></td></tr></table></figure>

<h2 id="ansible-常用命令"><a href="#ansible-常用命令" class="headerlink" title="ansible 常用命令"></a>ansible 常用命令</h2><h3 id="ansible-命令集"><a href="#ansible-命令集" class="headerlink" title="ansible 命令集"></a>ansible 命令集</h3><blockquote>
<p><code>/usr/bin/ansible</code>　　Ansibe AD-Hoc 临时命令执行工具，常用于临时命令的执行<br><code>/usr/bin/ansible-doc</code> 　Ansible 模块功能查看工具<br><code>/usr/bin/ansible-galaxy</code>　　下载&#x2F;上传优秀代码或Roles模块 的官网平台，基于网络的<br><code>/usr/bin/ansible-playbook</code>　　Ansible 定制自动化的任务集编排工具<br><code>/usr/bin/ansible-pull</code>　　Ansible远程执行命令的工具，拉取配置而非推送配置（使用较少，海量机器时使用，对运维的架构能力要求较高）<br><code>/usr/bin/ansible-vault</code>　　Ansible 文件加密工具<br><code>/usr/bin/ansible-console</code>　　Ansible基于Linux Consoble界面可与用户交互的命令执行工具</p>
</blockquote>
<p>　　其中，我们比较常用的是<code>/usr/bin/ansible</code>和<code>/usr/bin/ansible-playbook</code>。</p>
<h3 id="ansible-doc-命令"><a href="#ansible-doc-命令" class="headerlink" title="ansible-doc 命令"></a>ansible-doc 命令</h3><p>　　ansible-doc 命令常用于获取模块信息及其使用帮助，一般用法如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">ansible-doc -l				<span class="hljs-comment">#获取全部模块的信息</span><br>ansible-doc -s MOD_NAME		<span class="hljs-comment">#获取指定模块的使用帮助</span><br></code></pre></td></tr></table></figure>

<p>　　我们也可以查看一下ansible-doc的全部用法：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">[root<span class="hljs-variable">@server</span> <span class="hljs-operator">~</span>]# ansible<span class="hljs-operator">-</span>doc<br>Usage: ansible<span class="hljs-operator">-</span>doc [options] [module...]<br><br>Options:<br>  <span class="hljs-operator">-</span>h, <span class="hljs-comment">--help            show this help message and exit　　# 显示命令参数API文档</span><br>  <span class="hljs-operator">-</span>l, <span class="hljs-comment">--list            List available modules　　#列出可用的模块</span><br>  <span class="hljs-operator">-</span>M MODULE_PATH, <span class="hljs-comment">--module-path=MODULE_PATH　　#指定模块的路径</span><br>                        specify path(s) <span class="hljs-keyword">to</span> <span class="hljs-keyword">module</span> library (<span class="hljs-keyword">default</span><span class="hljs-operator">=</span><span class="hljs-keyword">None</span>)<br>  <span class="hljs-operator">-</span>s, <span class="hljs-comment">--snippet         Show playbook snippet for specified module(s)　　#显示playbook制定模块的用法</span><br>  <span class="hljs-operator">-</span>v, <span class="hljs-comment">--verbose         verbose mode (-vvv for more, -vvvv to enable　　# 显示ansible-doc的版本号查看模块列表：</span><br>                        connection debugging)<br>  <span class="hljs-comment">--version             show program&#x27;s version number and exit</span><br></code></pre></td></tr></table></figure>

<p>　　我们可以来看一下，以mysql相关的为例：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><code class="hljs csharp">[<span class="hljs-meta">root@server ~</span>]<span class="hljs-meta"># ansible-doc -l |grep mysql</span><br>mysql_db                           Add <span class="hljs-keyword">or</span> <span class="hljs-keyword">remove</span> MySQL databases <span class="hljs-keyword">from</span> a remote...<br>mysql_replication                  Manage MySQL replication                   <br>mysql_user                         Adds <span class="hljs-keyword">or</span> removes a user <span class="hljs-keyword">from</span> a MySQL databas...<br>mysql_variables                    Manage MySQL <span class="hljs-keyword">global</span> variables      <br>[<span class="hljs-meta">root@server ~</span>]<span class="hljs-meta"># ansible-doc -s mysql_user</span><br></code></pre></td></tr></table></figure>

<p><img src="/../images/1204916-20171205163026644-674759103.png" alt="img"></p>
<h3 id="ansible-命令详解"><a href="#ansible-命令详解" class="headerlink" title="ansible 命令详解"></a>ansible 命令详解</h3><p>　　命令的具体格式如下：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css">ansible &lt;host-pattern&gt; <span class="hljs-selector-attr">[-f forks]</span> <span class="hljs-selector-attr">[-m module_name]</span> <span class="hljs-selector-attr">[-a args]</span><br></code></pre></td></tr></table></figure>

<p>　　也可以通过<code>ansible -h</code>来查看帮助，下面我们列出一些比较常用的选项，并解释其含义：</p>
<blockquote>
<p><code>-a MODULE_ARGS</code>　　　#模块的参数，如果执行默认COMMAND的模块，即是命令参数，如： “date”，“pwd”等等<br><code>-k</code>，<code>--ask-pass</code> #ask for SSH password。登录密码，提示输入SSH密码而不是假设基于密钥的验证<br><code>--ask-su-pass</code> #ask for su password。su切换密码<br><code>-K</code>，<code>--ask-sudo-pass</code> #ask for sudo password。提示密码使用sudo，sudo表示提权操作<br><code>--ask-vault-pass</code> #ask for vault password。假设我们设定了加密的密码，则用该选项进行访问<br><code>-B SECONDS</code> #后台运行超时时间<br><code>-C</code> #模拟运行环境并进行预运行，可以进行查错测试<br><code>-c CONNECTION</code> #连接类型使用<br><code>-f FORKS</code> #并行任务数，默认为5<br><code>-i INVENTORY</code> #指定主机清单的路径，默认为<code>/etc/ansible/hosts</code><br><code>--list-hosts</code> #查看有哪些主机组<br><code>-m MODULE_NAME</code> #执行模块的名字，默认使用 command 模块，所以如果是只执行单一命令可以不用 -m参数<br><code>-o</code> #压缩输出，尝试将所有结果在一行输出，一般针对收集工具使用<br><code>-S</code> #用 su 命令<br><code>-R SU_USER</code> #指定 su 的用户，默认为 root 用户<br><code>-s</code> #用 sudo 命令<br><code>-U SUDO_USER</code> #指定 sudo 到哪个用户，默认为 root 用户<br><code>-T TIMEOUT</code> #指定 ssh 默认超时时间，默认为10s，也可在配置文件中修改<br><code>-u REMOTE_USER</code> #远程用户，默认为 root 用户<br><code>-v</code> #查看详细信息，同时支持<code>-vvv</code>，<code>-vvvv</code>可查看更详细信息</p>
</blockquote>
<h3 id="ansible-配置公私钥"><a href="#ansible-配置公私钥" class="headerlink" title="ansible 配置公私钥"></a>ansible 配置公私钥</h3><p>　　上面我们已经提到过 ansible 是基于 ssh 协议实现的，所以其配置公私钥的方式与 ssh 协议的方式相同，具体操作步骤如下：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><code class="hljs csharp"><span class="hljs-meta">#1.生成私钥</span><br>[<span class="hljs-meta">root@server ~</span>]<span class="hljs-meta"># ssh-keygen </span><br><span class="hljs-meta">#2.向主机分发私钥</span><br>[<span class="hljs-meta">root@server ~</span>]<span class="hljs-meta"># ssh-copy-id root@192.168.37.122</span><br>[<span class="hljs-meta">root@server ~</span>]<span class="hljs-meta"># ssh-copy-id root@192.168.37.133</span><br></code></pre></td></tr></table></figure>

<p>　　这样的话，就可以实现无密码登录，我们的实验过程也会顺畅很多。</p>
<h2 id="ansible-常用模块"><a href="#ansible-常用模块" class="headerlink" title="ansible 常用模块"></a>ansible 常用模块</h2><h3 id="1）主机连通性测试"><a href="#1）主机连通性测试" class="headerlink" title="1）主机连通性测试"></a>1）主机连通性测试</h3><p>　　我们使用<code>ansible web -m ping</code>命令来进行主机连通性测试，效果如下：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><code class="hljs ruby">[root<span class="hljs-variable">@server</span> ~]<span class="hljs-comment"># ansible web -m ping</span><br><span class="hljs-meta prompt_">192.168.37.122 | SUCCESS =&gt;</span> &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">false</span>, <br>    <span class="hljs-string">&quot;ping&quot;</span>: <span class="hljs-string">&quot;pong&quot;</span><br>&#125;<br><span class="hljs-meta prompt_">192.168.37.133 | SUCCESS =&gt;</span> &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">false</span>, <br>    <span class="hljs-string">&quot;ping&quot;</span>: <span class="hljs-string">&quot;pong&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>

<p>　　这样就说明我们的主机是连通状态的。接下来的操作才可以正常进行。</p>
<h3 id="2）command-模块"><a href="#2）command-模块" class="headerlink" title="2）command 模块"></a>2）command 模块</h3><p>　　这个模块可以直接在远程主机上执行命令，并将结果返回本主机。<br>　　举例如下：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><code class="hljs ruby">[root<span class="hljs-variable">@server</span> ~]<span class="hljs-comment"># ansible web -m command -a &#x27;ss -ntl&#x27;</span><br><span class="hljs-number">192.168</span>.<span class="hljs-number">37.122</span> |<span class="hljs-params"> SUCCESS </span>| rc=<span class="hljs-number">0</span> &gt;&gt;<br><span class="hljs-title class_">State</span>      <span class="hljs-title class_">Recv</span>-Q <span class="hljs-title class_">Send</span>-Q <span class="hljs-title class_">Local</span> <span class="hljs-title class_">Address</span><span class="hljs-symbol">:Port</span>               <span class="hljs-title class_">Peer</span> <span class="hljs-title class_">Address</span><span class="hljs-symbol">:Port</span>              <br><span class="hljs-variable constant_">LISTEN</span>     <span class="hljs-number">0</span>      <span class="hljs-number">128</span>          *<span class="hljs-symbol">:</span><span class="hljs-number">111</span>                      *<span class="hljs-symbol">:*</span>                  <br><span class="hljs-variable constant_">LISTEN</span>     <span class="hljs-number">0</span>      <span class="hljs-number">5</span>      <span class="hljs-number">192.168</span>.<span class="hljs-number">122.1</span><span class="hljs-symbol">:</span><span class="hljs-number">53</span>                       *<span class="hljs-symbol">:*</span>                  <br><span class="hljs-variable constant_">LISTEN</span>     <span class="hljs-number">0</span>      <span class="hljs-number">128</span>          *<span class="hljs-symbol">:</span><span class="hljs-number">22</span>                       *<span class="hljs-symbol">:*</span>                  <br><span class="hljs-variable constant_">LISTEN</span>     <span class="hljs-number">0</span>      <span class="hljs-number">128</span>    <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><span class="hljs-symbol">:</span><span class="hljs-number">631</span>                      *<span class="hljs-symbol">:*</span>                  <br><span class="hljs-variable constant_">LISTEN</span>     <span class="hljs-number">0</span>      <span class="hljs-number">128</span>          *<span class="hljs-symbol">:</span><span class="hljs-number">23000</span>                    *<span class="hljs-symbol">:*</span>                  <br><span class="hljs-variable constant_">LISTEN</span>     <span class="hljs-number">0</span>      <span class="hljs-number">100</span>    <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><span class="hljs-symbol">:</span><span class="hljs-number">25</span>                       *<span class="hljs-symbol">:*</span>                  <br><span class="hljs-variable constant_">LISTEN</span>     <span class="hljs-number">0</span>      <span class="hljs-number">128</span>         <span class="hljs-symbol">:</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:</span><span class="hljs-number">111</span>                     <span class="hljs-symbol">:</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:*</span>                  <br><span class="hljs-variable constant_">LISTEN</span>     <span class="hljs-number">0</span>      <span class="hljs-number">128</span>         <span class="hljs-symbol">:</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:</span><span class="hljs-number">22</span>                      <span class="hljs-symbol">:</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:*</span>                  <br><span class="hljs-variable constant_">LISTEN</span>     <span class="hljs-number">0</span>      <span class="hljs-number">128</span>        <span class="hljs-symbol">:</span><span class="hljs-symbol">:</span><span class="hljs-number">1</span><span class="hljs-symbol">:</span><span class="hljs-number">631</span>                     <span class="hljs-symbol">:</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:*</span>                  <br><span class="hljs-variable constant_">LISTEN</span>     <span class="hljs-number">0</span>      <span class="hljs-number">100</span>        <span class="hljs-symbol">:</span><span class="hljs-symbol">:</span><span class="hljs-number">1</span><span class="hljs-symbol">:</span><span class="hljs-number">25</span>                      <span class="hljs-symbol">:</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:*</span>                  <br><br><span class="hljs-number">192.168</span>.<span class="hljs-number">37.133</span> |<span class="hljs-params"> SUCCESS </span>| rc=<span class="hljs-number">0</span> &gt;&gt;<br><span class="hljs-title class_">State</span>      <span class="hljs-title class_">Recv</span>-Q <span class="hljs-title class_">Send</span>-Q <span class="hljs-title class_">Local</span> <span class="hljs-title class_">Address</span><span class="hljs-symbol">:Port</span>               <span class="hljs-title class_">Peer</span> <span class="hljs-title class_">Address</span><span class="hljs-symbol">:Port</span>              <br><span class="hljs-variable constant_">LISTEN</span>     <span class="hljs-number">0</span>      <span class="hljs-number">128</span>          *<span class="hljs-symbol">:</span><span class="hljs-number">111</span>                      *<span class="hljs-symbol">:*</span>                  <br><span class="hljs-variable constant_">LISTEN</span>     <span class="hljs-number">0</span>      <span class="hljs-number">128</span>          *<span class="hljs-symbol">:</span><span class="hljs-number">22</span>                       *<span class="hljs-symbol">:*</span>                  <br><span class="hljs-variable constant_">LISTEN</span>     <span class="hljs-number">0</span>      <span class="hljs-number">128</span>    <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><span class="hljs-symbol">:</span><span class="hljs-number">631</span>                      *<span class="hljs-symbol">:*</span>                  <br><span class="hljs-variable constant_">LISTEN</span>     <span class="hljs-number">0</span>      <span class="hljs-number">128</span>          *<span class="hljs-symbol">:</span><span class="hljs-number">23000</span>                    *<span class="hljs-symbol">:*</span>                  <br><span class="hljs-variable constant_">LISTEN</span>     <span class="hljs-number">0</span>      <span class="hljs-number">100</span>    <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><span class="hljs-symbol">:</span><span class="hljs-number">25</span>                       *<span class="hljs-symbol">:*</span>                  <br><span class="hljs-variable constant_">LISTEN</span>     <span class="hljs-number">0</span>      <span class="hljs-number">128</span>         <span class="hljs-symbol">:</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:</span><span class="hljs-number">111</span>                     <span class="hljs-symbol">:</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:*</span>                  <br><span class="hljs-variable constant_">LISTEN</span>     <span class="hljs-number">0</span>      <span class="hljs-number">128</span>         <span class="hljs-symbol">:</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:</span><span class="hljs-number">22</span>                      <span class="hljs-symbol">:</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:*</span>                  <br><span class="hljs-variable constant_">LISTEN</span>     <span class="hljs-number">0</span>      <span class="hljs-number">128</span>        <span class="hljs-symbol">:</span><span class="hljs-symbol">:</span><span class="hljs-number">1</span><span class="hljs-symbol">:</span><span class="hljs-number">631</span>                     <span class="hljs-symbol">:</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:*</span>                  <br><span class="hljs-variable constant_">LISTEN</span>     <span class="hljs-number">0</span>      <span class="hljs-number">100</span>        <span class="hljs-symbol">:</span><span class="hljs-symbol">:</span><span class="hljs-number">1</span><span class="hljs-symbol">:</span><span class="hljs-number">25</span>                      <span class="hljs-symbol">:</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:*</span>  <br></code></pre></td></tr></table></figure>

<p>　　命令模块接受命令名称，后面是空格分隔的列表参数。给定的命令将在所有选定的节点上执行。它不会通过shell进行处理，比如$HOME和操作如”&lt;”，”&gt;”，”|”，”;”，”&amp;” 工作（需要使用（shell）模块实现这些功能）。注意，该命令不支持<code>| 管道命令</code>。<br>　　下面来看一看该模块下常用的几个命令：</p>
<blockquote>
<p>chdir　　　　　　 # 在执行命令之前，先切换到该目录<br>executable # 切换shell来执行命令，需要使用命令的绝对路径<br>free_form 　 # 要执行的Linux指令，一般使用Ansible的-a参数代替。<br>creates 　# 一个文件名，当这个文件存在，则该命令不执行,可以<br>用来做判断<br>removes # 一个文件名，这个文件不存在，则该命令不执行</p>
</blockquote>
<p>　　下面我们来看看这些命令的执行效果：</p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><code class="hljs mipsasm">[root@server ~]<span class="hljs-comment"># ansible web -m command -a &#x27;chdir=/data/ ls&#x27;	#先切换到/data/ 目录，再执行“ls”命令</span><br><span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">37</span>.<span class="hljs-number">122</span> <span class="hljs-title">| SUCCESS |</span> rc=<span class="hljs-number">0</span> &gt;&gt;<br>aaa.<span class="hljs-keyword">jpg</span><br><span class="hljs-keyword"></span>fastdfs<br>mogdata<br>tmp<br>web<br>wKgleloeYoCAMLtZAAAWEekAtkc497.<span class="hljs-keyword">jpg</span><br><span class="hljs-keyword"></span><br><span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">37</span>.<span class="hljs-number">133</span> <span class="hljs-title">| SUCCESS |</span> rc=<span class="hljs-number">0</span> &gt;&gt;<br>aaa.<span class="hljs-keyword">jpg</span><br><span class="hljs-keyword"></span>fastdfs<br>mogdata<br>tmp<br>web<br>wKgleloeYoCAMLtZAAAWEekAtkc497.<span class="hljs-keyword">jpg</span><br><span class="hljs-keyword"></span>[root@server ~]<span class="hljs-comment"># ansible web -m command -a &#x27;creates=/data/aaa.jpg ls&#x27;		#如果/data/aaa.jpg存在，则不执行“ls”命令</span><br><span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">37</span>.<span class="hljs-number">122</span> <span class="hljs-title">| SUCCESS |</span> rc=<span class="hljs-number">0</span> &gt;&gt;<br>skipped, since /data/aaa.<span class="hljs-keyword">jpg </span>exists<br><br><span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">37</span>.<span class="hljs-number">133</span> <span class="hljs-title">| SUCCESS |</span> rc=<span class="hljs-number">0</span> &gt;&gt;<br>skipped, since /data/aaa.<span class="hljs-keyword">jpg </span>exists<br>[root@server ~]<span class="hljs-comment"># ansible web -m command -a &#x27;removes=/data/aaa.jpg cat /data/a&#x27;		#如果/data/aaa.jpg存在，则执行“cat /data/a”命令</span><br><span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">37</span>.<span class="hljs-number">122</span> <span class="hljs-title">| SUCCESS |</span> rc=<span class="hljs-number">0</span> &gt;&gt;<br>hello<br><br><span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">37</span>.<span class="hljs-number">133</span> <span class="hljs-title">| SUCCESS |</span> rc=<span class="hljs-number">0</span> &gt;&gt;<br>hello<br></code></pre></td></tr></table></figure>

<h3 id="3）shell-模块"><a href="#3）shell-模块" class="headerlink" title="3）shell 模块"></a>3）shell 模块</h3><p>　　shell模块可以在远程主机上调用shell解释器运行命令，支持shell的各种功能，例如管道等。</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><code class="hljs ruby">[root<span class="hljs-variable">@server</span> ~]<span class="hljs-comment"># ansible web -m shell -a &#x27;cat /etc/passwd |grep &quot;keer&quot;&#x27;</span><br><span class="hljs-number">192.168</span>.<span class="hljs-number">37.122</span> |<span class="hljs-params"> SUCCESS </span>| rc=<span class="hljs-number">0</span> &gt;&gt;<br><span class="hljs-symbol">keer:</span><span class="hljs-symbol">x:</span><span class="hljs-number">10001</span><span class="hljs-symbol">:</span><span class="hljs-number">1000</span><span class="hljs-symbol">:keer</span><span class="hljs-symbol">:/home/keer</span><span class="hljs-symbol">:/bin/sh</span><br><br><span class="hljs-number">192.168</span>.<span class="hljs-number">37.133</span> |<span class="hljs-params"> SUCCESS </span>| rc=<span class="hljs-number">0</span> &gt;&gt;<br><span class="hljs-symbol">keer:</span><span class="hljs-symbol">x:</span><span class="hljs-number">10001</span><span class="hljs-symbol">:</span><span class="hljs-number">10001</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:/home/keer</span><span class="hljs-symbol">:/bin/sh</span><br></code></pre></td></tr></table></figure>

<p>　　只要是我们的shell命令，都可以通过这个模块在远程主机上运行，这里就不一一举例了。</p>
<h3 id="4）copy-模块"><a href="#4）copy-模块" class="headerlink" title="4）copy 模块"></a>4）copy 模块</h3><p>　　这个模块用于将文件复制到远程主机，同时支持给定内容生成文件和修改权限等。<br>　　其相关选项如下：</p>
<blockquote>
<p><code>src</code>　　　　#被复制到远程主机的本地文件。可以是绝对路径，也可以是相对路径。如果路径是一个目录，则会递归复制，用法类似于”rsync”<br><code>content</code>　　　#用于替换”src”，可以直接指定文件的值<br><code>dest</code>　　　　#必选项，将源文件复制到的远程主机的<strong>绝对路径</strong><br><code>backup</code>　　　#当文件内容发生改变后，在覆盖之前把源文件备份，备份文件包含时间信息<br><code>directory_mode</code>　　　　#递归设定目录的权限，默认为系统默认权限<br><code>force</code>　　　　#当目标主机包含该文件，但内容不同时，设为”yes”，表示强制覆盖；设为”no”，表示目标主机的目标位置不存在该文件才复制。默认为”yes”<br><code>others</code>　　　　#所有的 file 模块中的选项可以在这里使用</p>
</blockquote>
<p>用法举例如下：<br><strong>① 复制文件：</strong></p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><code class="hljs ruby">[root<span class="hljs-variable">@server</span> ~]<span class="hljs-comment"># ansible web -m copy -a &#x27;src=~/hello dest=/data/hello&#x27; </span><br><span class="hljs-meta prompt_">192.168.37.122 | SUCCESS =&gt;</span> &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">true</span>, <br>    <span class="hljs-string">&quot;checksum&quot;</span>: <span class="hljs-string">&quot;22596363b3de40b06f981fb85d82312e8c0ed511&quot;</span>, <br>    <span class="hljs-string">&quot;dest&quot;</span>: <span class="hljs-string">&quot;/data/hello&quot;</span>, <br>    <span class="hljs-string">&quot;gid&quot;</span>: <span class="hljs-number">0</span>, <br>    <span class="hljs-string">&quot;group&quot;</span>: <span class="hljs-string">&quot;root&quot;</span>, <br>    <span class="hljs-string">&quot;md5sum&quot;</span>: <span class="hljs-string">&quot;6f5902ac237024bdd0c176cb93063dc4&quot;</span>, <br>    <span class="hljs-string">&quot;mode&quot;</span>: <span class="hljs-string">&quot;0644&quot;</span>, <br>    <span class="hljs-string">&quot;owner&quot;</span>: <span class="hljs-string">&quot;root&quot;</span>, <br>    <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">12</span>, <br>    <span class="hljs-string">&quot;src&quot;</span>: <span class="hljs-string">&quot;/root/.ansible/tmp/ansible-tmp-1512437093.55-228281064292921/source&quot;</span>, <br>    <span class="hljs-string">&quot;state&quot;</span>: <span class="hljs-string">&quot;file&quot;</span>, <br>    <span class="hljs-string">&quot;uid&quot;</span>: <span class="hljs-number">0</span><br>&#125;<br><span class="hljs-meta prompt_">192.168.37.133 | SUCCESS =&gt;</span> &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">true</span>, <br>    <span class="hljs-string">&quot;checksum&quot;</span>: <span class="hljs-string">&quot;22596363b3de40b06f981fb85d82312e8c0ed511&quot;</span>, <br>    <span class="hljs-string">&quot;dest&quot;</span>: <span class="hljs-string">&quot;/data/hello&quot;</span>, <br>    <span class="hljs-string">&quot;gid&quot;</span>: <span class="hljs-number">0</span>, <br>    <span class="hljs-string">&quot;group&quot;</span>: <span class="hljs-string">&quot;root&quot;</span>, <br>    <span class="hljs-string">&quot;md5sum&quot;</span>: <span class="hljs-string">&quot;6f5902ac237024bdd0c176cb93063dc4&quot;</span>, <br>    <span class="hljs-string">&quot;mode&quot;</span>: <span class="hljs-string">&quot;0644&quot;</span>, <br>    <span class="hljs-string">&quot;owner&quot;</span>: <span class="hljs-string">&quot;root&quot;</span>, <br>    <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">12</span>, <br>    <span class="hljs-string">&quot;src&quot;</span>: <span class="hljs-string">&quot;/root/.ansible/tmp/ansible-tmp-1512437093.74-44694985235189/source&quot;</span>, <br>    <span class="hljs-string">&quot;state&quot;</span>: <span class="hljs-string">&quot;file&quot;</span>, <br>    <span class="hljs-string">&quot;uid&quot;</span>: <span class="hljs-number">0</span><br>&#125;<br></code></pre></td></tr></table></figure>

<p><strong>② 给定内容生成文件，并制定权限</strong></p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><code class="hljs ruby">[root<span class="hljs-variable">@server</span> ~]<span class="hljs-comment"># ansible web -m copy -a &#x27;content=&quot;I am keer\n&quot; dest=/data/name mode=666&#x27;</span><br><span class="hljs-meta prompt_">192.168.37.122 | SUCCESS =&gt;</span> &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">true</span>, <br>    <span class="hljs-string">&quot;checksum&quot;</span>: <span class="hljs-string">&quot;0421570938940ea784f9d8598dab87f07685b968&quot;</span>, <br>    <span class="hljs-string">&quot;dest&quot;</span>: <span class="hljs-string">&quot;/data/name&quot;</span>, <br>    <span class="hljs-string">&quot;gid&quot;</span>: <span class="hljs-number">0</span>, <br>    <span class="hljs-string">&quot;group&quot;</span>: <span class="hljs-string">&quot;root&quot;</span>, <br>    <span class="hljs-string">&quot;md5sum&quot;</span>: <span class="hljs-string">&quot;497fa8386590a5fc89090725b07f175c&quot;</span>, <br>    <span class="hljs-string">&quot;mode&quot;</span>: <span class="hljs-string">&quot;0666&quot;</span>, <br>    <span class="hljs-string">&quot;owner&quot;</span>: <span class="hljs-string">&quot;root&quot;</span>, <br>    <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">10</span>, <br>    <span class="hljs-string">&quot;src&quot;</span>: <span class="hljs-string">&quot;/root/.ansible/tmp/ansible-tmp-1512437327.37-199512601767687/source&quot;</span>, <br>    <span class="hljs-string">&quot;state&quot;</span>: <span class="hljs-string">&quot;file&quot;</span>, <br>    <span class="hljs-string">&quot;uid&quot;</span>: <span class="hljs-number">0</span><br>&#125;<br><span class="hljs-meta prompt_">192.168.37.133 | SUCCESS =&gt;</span> &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">true</span>, <br>    <span class="hljs-string">&quot;checksum&quot;</span>: <span class="hljs-string">&quot;0421570938940ea784f9d8598dab87f07685b968&quot;</span>, <br>    <span class="hljs-string">&quot;dest&quot;</span>: <span class="hljs-string">&quot;/data/name&quot;</span>, <br>    <span class="hljs-string">&quot;gid&quot;</span>: <span class="hljs-number">0</span>, <br>    <span class="hljs-string">&quot;group&quot;</span>: <span class="hljs-string">&quot;root&quot;</span>, <br>    <span class="hljs-string">&quot;md5sum&quot;</span>: <span class="hljs-string">&quot;497fa8386590a5fc89090725b07f175c&quot;</span>, <br>    <span class="hljs-string">&quot;mode&quot;</span>: <span class="hljs-string">&quot;0666&quot;</span>, <br>    <span class="hljs-string">&quot;owner&quot;</span>: <span class="hljs-string">&quot;root&quot;</span>, <br>    <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">10</span>, <br>	    <span class="hljs-string">&quot;src&quot;</span>: <span class="hljs-string">&quot;/root/.ansible/tmp/ansible-tmp-1512437327.55-218104039503110/source&quot;</span>, <br>    <span class="hljs-string">&quot;state&quot;</span>: <span class="hljs-string">&quot;file&quot;</span>, <br>    <span class="hljs-string">&quot;uid&quot;</span>: <span class="hljs-number">0</span><br>&#125;<br></code></pre></td></tr></table></figure>

<p>　　我们现在可以去查看一下我们生成的文件及其权限：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">[root<span class="hljs-variable">@server</span> <span class="hljs-operator">~</span>]# ansible web <span class="hljs-operator">-</span>m shell <span class="hljs-operator">-</span>a <span class="hljs-string">&#x27;ls -l /data/&#x27;</span><br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.122</span> <span class="hljs-operator">|</span> SUCCESS <span class="hljs-operator">|</span> rc<span class="hljs-operator">=</span><span class="hljs-number">0</span> <span class="hljs-operator">&gt;&gt;</span><br>total <span class="hljs-number">28</span><br><span class="hljs-operator">-</span>rw<span class="hljs-operator">-</span>rw<span class="hljs-operator">-</span>rw<span class="hljs-operator">-</span>   <span class="hljs-number">1</span> root root   <span class="hljs-number">12</span> <span class="hljs-type">Dec</span>  <span class="hljs-number">6</span> <span class="hljs-number">09</span>:<span class="hljs-number">45</span> name<br><br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.133</span> <span class="hljs-operator">|</span> SUCCESS <span class="hljs-operator">|</span> rc<span class="hljs-operator">=</span><span class="hljs-number">0</span> <span class="hljs-operator">&gt;&gt;</span><br>total <span class="hljs-number">40</span><br><span class="hljs-operator">-</span>rw<span class="hljs-operator">-</span>rw<span class="hljs-operator">-</span>rw<span class="hljs-operator">-</span> <span class="hljs-number">1</span> root     root       <span class="hljs-number">12</span> <span class="hljs-type">Dec</span>  <span class="hljs-number">5</span> <span class="hljs-number">09</span>:<span class="hljs-number">45</span> name<br></code></pre></td></tr></table></figure>

<p>　　可以看出我们的name文件已经生成，并且权限为666。<br><strong>③ 关于覆盖</strong><br>　　我们把文件的内容修改一下，然后选择覆盖备份：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><code class="hljs ruby">[root<span class="hljs-variable">@server</span> ~]<span class="hljs-comment"># ansible web -m copy -a &#x27;content=&quot;I am keerya\n&quot; backup=yes dest=/data/name mode=666&#x27;</span><br><span class="hljs-meta prompt_">192.168.37.122 | SUCCESS =&gt;</span> &#123;<br>    <span class="hljs-string">&quot;backup_file&quot;</span>: <span class="hljs-string">&quot;/data/name.4394.2017-12-06@09:46:25~&quot;</span>, <br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">true</span>, <br>    <span class="hljs-string">&quot;checksum&quot;</span>: <span class="hljs-string">&quot;064a68908ab9971ee85dbc08ea038387598e3778&quot;</span>, <br>    <span class="hljs-string">&quot;dest&quot;</span>: <span class="hljs-string">&quot;/data/name&quot;</span>, <br>    <span class="hljs-string">&quot;gid&quot;</span>: <span class="hljs-number">0</span>, <br>    <span class="hljs-string">&quot;group&quot;</span>: <span class="hljs-string">&quot;root&quot;</span>, <br>    <span class="hljs-string">&quot;md5sum&quot;</span>: <span class="hljs-string">&quot;8ca7c11385856155af52e560f608891c&quot;</span>, <br>    <span class="hljs-string">&quot;mode&quot;</span>: <span class="hljs-string">&quot;0666&quot;</span>, <br>    <span class="hljs-string">&quot;owner&quot;</span>: <span class="hljs-string">&quot;root&quot;</span>, <br>    <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">12</span>, <br>    <span class="hljs-string">&quot;src&quot;</span>: <span class="hljs-string">&quot;/root/.ansible/tmp/ansible-tmp-1512438383.78-228128616784888/source&quot;</span>, <br>    <span class="hljs-string">&quot;state&quot;</span>: <span class="hljs-string">&quot;file&quot;</span>, <br>    <span class="hljs-string">&quot;uid&quot;</span>: <span class="hljs-number">0</span><br>&#125;<br><span class="hljs-meta prompt_">192.168.37.133 | SUCCESS =&gt;</span> &#123;<br>    <span class="hljs-string">&quot;backup_file&quot;</span>: <span class="hljs-string">&quot;/data/name.5962.2017-12-05@09:46:24~&quot;</span>, <br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">true</span>, <br>    <span class="hljs-string">&quot;checksum&quot;</span>: <span class="hljs-string">&quot;064a68908ab9971ee85dbc08ea038387598e3778&quot;</span>, <br>    <span class="hljs-string">&quot;dest&quot;</span>: <span class="hljs-string">&quot;/data/name&quot;</span>, <br>    <span class="hljs-string">&quot;gid&quot;</span>: <span class="hljs-number">0</span>, <br>    <span class="hljs-string">&quot;group&quot;</span>: <span class="hljs-string">&quot;root&quot;</span>, <br>    <span class="hljs-string">&quot;md5sum&quot;</span>: <span class="hljs-string">&quot;8ca7c11385856155af52e560f608891c&quot;</span>, <br>    <span class="hljs-string">&quot;mode&quot;</span>: <span class="hljs-string">&quot;0666&quot;</span>, <br>    <span class="hljs-string">&quot;owner&quot;</span>: <span class="hljs-string">&quot;root&quot;</span>, <br>    <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">12</span>, <br>    <span class="hljs-string">&quot;src&quot;</span>: <span class="hljs-string">&quot;/root/.ansible/tmp/ansible-tmp-1512438384.0-170718946740009/source&quot;</span>, <br>    <span class="hljs-string">&quot;state&quot;</span>: <span class="hljs-string">&quot;file&quot;</span>, <br>    <span class="hljs-string">&quot;uid&quot;</span>: <span class="hljs-number">0</span><br>&#125;<br></code></pre></td></tr></table></figure>

<p>　　现在我们可以去查看一下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">[root<span class="hljs-variable">@server</span> <span class="hljs-operator">~</span>]# ansible web <span class="hljs-operator">-</span>m shell <span class="hljs-operator">-</span>a <span class="hljs-string">&#x27;ls -l /data/&#x27;</span><br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.122</span> <span class="hljs-operator">|</span> SUCCESS <span class="hljs-operator">|</span> rc<span class="hljs-operator">=</span><span class="hljs-number">0</span> <span class="hljs-operator">&gt;&gt;</span><br>total <span class="hljs-number">28</span><br><span class="hljs-operator">-</span>rw<span class="hljs-operator">-</span>rw<span class="hljs-operator">-</span>rw<span class="hljs-operator">-</span>   <span class="hljs-number">1</span> root root   <span class="hljs-number">12</span> <span class="hljs-type">Dec</span>  <span class="hljs-number">6</span> <span class="hljs-number">09</span>:<span class="hljs-number">46</span> name<br><span class="hljs-operator">-</span>rw<span class="hljs-operator">-</span>rw<span class="hljs-operator">-</span>rw<span class="hljs-operator">-</span>   <span class="hljs-number">1</span> root root   <span class="hljs-number">10</span> <span class="hljs-type">Dec</span>  <span class="hljs-number">6</span> <span class="hljs-number">09</span>:<span class="hljs-number">45</span> name<span class="hljs-number">.4394</span><span class="hljs-number">.2017</span><span class="hljs-number">-12</span><span class="hljs-number">-06</span><span class="hljs-variable">@09</span>:<span class="hljs-number">46</span>:<span class="hljs-number">25</span><span class="hljs-operator">~</span><br><br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.133</span> <span class="hljs-operator">|</span> SUCCESS <span class="hljs-operator">|</span> rc<span class="hljs-operator">=</span><span class="hljs-number">0</span> <span class="hljs-operator">&gt;&gt;</span><br>total <span class="hljs-number">40</span><br><span class="hljs-operator">-</span>rw<span class="hljs-operator">-</span>rw<span class="hljs-operator">-</span>rw<span class="hljs-operator">-</span> <span class="hljs-number">1</span> root     root       <span class="hljs-number">12</span> <span class="hljs-type">Dec</span>  <span class="hljs-number">5</span> <span class="hljs-number">09</span>:<span class="hljs-number">46</span> name<br><span class="hljs-operator">-</span>rw<span class="hljs-operator">-</span>rw<span class="hljs-operator">-</span>rw<span class="hljs-operator">-</span> <span class="hljs-number">1</span> root     root       <span class="hljs-number">10</span> <span class="hljs-type">Dec</span>  <span class="hljs-number">5</span> <span class="hljs-number">09</span>:<span class="hljs-number">45</span> name<span class="hljs-number">.5962</span><span class="hljs-number">.2017</span><span class="hljs-number">-12</span><span class="hljs-number">-05</span><span class="hljs-variable">@09</span>:<span class="hljs-number">46</span>:<span class="hljs-number">24</span><span class="hljs-operator">~</span><br></code></pre></td></tr></table></figure>

<p>　　可以看出，我们的源文件已经被备份，我们还可以查看一下<code>name</code>文件的内容：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><code class="hljs csharp">[<span class="hljs-meta">root@server ~</span>]<span class="hljs-meta"># ansible web -m shell -a &#x27;cat /data/name&#x27;</span><br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.122</span> | SUCCESS | rc=<span class="hljs-number">0</span> &gt;&gt;<br>I am keerya<br><br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.133</span> | SUCCESS | rc=<span class="hljs-number">0</span> &gt;&gt;<br>I am keerya<br></code></pre></td></tr></table></figure>

<p>　　证明，这正是我们新导入的文件的内容。</p>
<h3 id="5）file-模块"><a href="#5）file-模块" class="headerlink" title="5）file 模块"></a>5）file 模块</h3><p>　　该模块主要用于设置文件的属性，比如创建文件、创建链接文件、删除文件等。<br>　　下面是一些常见的命令：</p>
<blockquote>
<p><code>force</code>　　#需要在两种情况下强制创建软链接，一种是源文件不存在，但之后会建立的情况下；另一种是目标软链接已存在，需要先取消之前的软链，然后创建新的软链，有两个选项：yes|no<br><code>group</code>　　#定义文件&#x2F;目录的属组。后面可以加上<code>mode</code>：定义文件&#x2F;目录的权限<br><code>owner</code>　　#定义文件&#x2F;目录的属主。后面必须跟上<code>path</code>：定义文件&#x2F;目录的路径<br><code>recurse</code>　　#递归设置文件的属性，只对目录有效，后面跟上<code>src</code>：被链接的源文件路径，只应用于<code>state=link</code>的情况<br><code>dest</code>　　#被链接到的路径，只应用于<code>state=link</code>的情况<br><code>state</code>　　#状态，有以下选项：</p>
<blockquote>
<p><code>directory</code>：如果目录不存在，就创建目录<br><code>file</code>：即使文件不存在，也不会被创建<br><code>link</code>：创建软链接<br><code>hard</code>：创建硬链接<br><code>touch</code>：如果文件不存在，则会创建一个新的文件，如果文件或目录已存在，则更新其最后修改时间<br><code>absent</code>：删除目录、文件或者取消链接文件</p>
</blockquote>
</blockquote>
<p>　　用法举例如下：<br><strong>① 创建目录：</strong></p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><code class="hljs ruby">[root<span class="hljs-variable">@server</span> ~]<span class="hljs-comment"># ansible web -m file -a &#x27;path=/data/app state=directory&#x27;</span><br><span class="hljs-meta prompt_">192.168.37.122 | SUCCESS =&gt;</span> &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">true</span>, <br>    <span class="hljs-string">&quot;gid&quot;</span>: <span class="hljs-number">0</span>, <br>    <span class="hljs-string">&quot;group&quot;</span>: <span class="hljs-string">&quot;root&quot;</span>, <br>    <span class="hljs-string">&quot;mode&quot;</span>: <span class="hljs-string">&quot;0755&quot;</span>, <br>    <span class="hljs-string">&quot;owner&quot;</span>: <span class="hljs-string">&quot;root&quot;</span>, <br>    <span class="hljs-string">&quot;path&quot;</span>: <span class="hljs-string">&quot;/data/app&quot;</span>, <br>    <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">6</span>, <br>    <span class="hljs-string">&quot;state&quot;</span>: <span class="hljs-string">&quot;directory&quot;</span>, <br>    <span class="hljs-string">&quot;uid&quot;</span>: <span class="hljs-number">0</span><br>&#125;<br><span class="hljs-meta prompt_">192.168.37.133 | SUCCESS =&gt;</span> &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">true</span>, <br>    <span class="hljs-string">&quot;gid&quot;</span>: <span class="hljs-number">0</span>, <br>    <span class="hljs-string">&quot;group&quot;</span>: <span class="hljs-string">&quot;root&quot;</span>, <br>    <span class="hljs-string">&quot;mode&quot;</span>: <span class="hljs-string">&quot;0755&quot;</span>, <br>    <span class="hljs-string">&quot;owner&quot;</span>: <span class="hljs-string">&quot;root&quot;</span>, <br>    <span class="hljs-string">&quot;path&quot;</span>: <span class="hljs-string">&quot;/data/app&quot;</span>, <br>    <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">4096</span>, <br>    <span class="hljs-string">&quot;state&quot;</span>: <span class="hljs-string">&quot;directory&quot;</span>, <br>    <span class="hljs-string">&quot;uid&quot;</span>: <span class="hljs-number">0</span><br>&#125;<br></code></pre></td></tr></table></figure>

<p>　　我们可以查看一下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">[root<span class="hljs-variable">@server</span> <span class="hljs-operator">~</span>]# ansible web <span class="hljs-operator">-</span>m shell <span class="hljs-operator">-</span>a <span class="hljs-string">&#x27;ls -l /data&#x27;</span><br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.122</span> <span class="hljs-operator">|</span> SUCCESS <span class="hljs-operator">|</span> rc<span class="hljs-operator">=</span><span class="hljs-number">0</span> <span class="hljs-operator">&gt;&gt;</span><br>total <span class="hljs-number">28</span><br>drwxr<span class="hljs-operator">-</span>xr<span class="hljs-operator">-</span>x   <span class="hljs-number">2</span> root root    <span class="hljs-number">6</span> <span class="hljs-type">Dec</span>  <span class="hljs-number">6</span> <span class="hljs-number">10</span>:<span class="hljs-number">21</span> app<br><br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.133</span> <span class="hljs-operator">|</span> SUCCESS <span class="hljs-operator">|</span> rc<span class="hljs-operator">=</span><span class="hljs-number">0</span> <span class="hljs-operator">&gt;&gt;</span><br>total <span class="hljs-number">44</span><br>drwxr<span class="hljs-operator">-</span>xr<span class="hljs-operator">-</span>x <span class="hljs-number">2</span> root     root     <span class="hljs-number">4096</span> <span class="hljs-type">Dec</span>  <span class="hljs-number">5</span> <span class="hljs-number">10</span>:<span class="hljs-number">21</span> app<br></code></pre></td></tr></table></figure>

<p>　　可以看出，我们的目录已经创建完成。<br><strong>② 创建链接文件</strong></p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><code class="hljs ruby">[root<span class="hljs-variable">@server</span> ~]<span class="hljs-comment"># ansible web -m file -a &#x27;path=/data/bbb.jpg src=aaa.jpg state=link&#x27;</span><br><span class="hljs-meta prompt_">192.168.37.122 | SUCCESS =&gt;</span> &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">true</span>, <br>    <span class="hljs-string">&quot;dest&quot;</span>: <span class="hljs-string">&quot;/data/bbb.jpg&quot;</span>, <br>    <span class="hljs-string">&quot;gid&quot;</span>: <span class="hljs-number">0</span>, <br>    <span class="hljs-string">&quot;group&quot;</span>: <span class="hljs-string">&quot;root&quot;</span>, <br>    <span class="hljs-string">&quot;mode&quot;</span>: <span class="hljs-string">&quot;0777&quot;</span>, <br>    <span class="hljs-string">&quot;owner&quot;</span>: <span class="hljs-string">&quot;root&quot;</span>, <br>    <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">7</span>, <br>    <span class="hljs-string">&quot;src&quot;</span>: <span class="hljs-string">&quot;aaa.jpg&quot;</span>, <br>    <span class="hljs-string">&quot;state&quot;</span>: <span class="hljs-string">&quot;link&quot;</span>, <br>    <span class="hljs-string">&quot;uid&quot;</span>: <span class="hljs-number">0</span><br>&#125;<br><span class="hljs-meta prompt_">192.168.37.133 | SUCCESS =&gt;</span> &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">true</span>, <br>    <span class="hljs-string">&quot;dest&quot;</span>: <span class="hljs-string">&quot;/data/bbb.jpg&quot;</span>, <br>    <span class="hljs-string">&quot;gid&quot;</span>: <span class="hljs-number">0</span>, <br>    <span class="hljs-string">&quot;group&quot;</span>: <span class="hljs-string">&quot;root&quot;</span>, <br>    <span class="hljs-string">&quot;mode&quot;</span>: <span class="hljs-string">&quot;0777&quot;</span>, <br>    <span class="hljs-string">&quot;owner&quot;</span>: <span class="hljs-string">&quot;root&quot;</span>, <br>    <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">7</span>, <br>    <span class="hljs-string">&quot;src&quot;</span>: <span class="hljs-string">&quot;aaa.jpg&quot;</span>, <br>    <span class="hljs-string">&quot;state&quot;</span>: <span class="hljs-string">&quot;link&quot;</span>, <br>    <span class="hljs-string">&quot;uid&quot;</span>: <span class="hljs-number">0</span><br>&#125;<br></code></pre></td></tr></table></figure>

<p>　　我们可以去查看一下：</p>
<figure class="highlight x86asm"><table><tr><td class="code"><pre><code class="hljs x86asm">[root@server ~]# ansible web -m shell -a <span class="hljs-string">&#x27;ls -l /data&#x27;</span><br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.122</span> | SUCCESS | rc=<span class="hljs-number">0</span> &gt;&gt;<br>total <span class="hljs-number">28</span><br>-rw-r--r--   <span class="hljs-number">1</span> root root <span class="hljs-number">5649</span> <span class="hljs-keyword">Dec</span>  <span class="hljs-number">5</span> <span class="hljs-number">13</span>:<span class="hljs-number">49</span> <span class="hljs-keyword">aaa</span><span class="hljs-number">.</span>jpg<br>lrwxrwxrwx   <span class="hljs-number">1</span> root root    <span class="hljs-number">7</span> <span class="hljs-keyword">Dec</span>  <span class="hljs-number">6</span> <span class="hljs-number">10</span>:<span class="hljs-number">25</span> bbb<span class="hljs-number">.</span>jpg -&gt; <span class="hljs-keyword">aaa</span><span class="hljs-number">.</span>jpg<br><br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.133</span> | SUCCESS | rc=<span class="hljs-number">0</span> &gt;&gt;<br>total <span class="hljs-number">44</span><br>-rw-r--r-- <span class="hljs-number">1</span> root     root     <span class="hljs-number">5649</span> <span class="hljs-keyword">Dec</span>  <span class="hljs-number">4</span> <span class="hljs-number">14</span>:<span class="hljs-number">44</span> <span class="hljs-keyword">aaa</span><span class="hljs-number">.</span>jpg<br>lrwxrwxrwx <span class="hljs-number">1</span> root     root        <span class="hljs-number">7</span> <span class="hljs-keyword">Dec</span>  <span class="hljs-number">5</span> <span class="hljs-number">10</span>:<span class="hljs-number">25</span> bbb<span class="hljs-number">.</span>jpg -&gt; <span class="hljs-keyword">aaa</span><span class="hljs-number">.</span>jpg<br></code></pre></td></tr></table></figure>

<p>　　我们的链接文件已经创建成功。<br><strong>③ 删除文件</strong></p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><code class="hljs ruby">[root<span class="hljs-variable">@server</span> ~]<span class="hljs-comment"># ansible web -m file -a &#x27;path=/data/a state=absent&#x27;</span><br><span class="hljs-meta prompt_">192.168.37.122 | SUCCESS =&gt;</span> &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">true</span>, <br>    <span class="hljs-string">&quot;path&quot;</span>: <span class="hljs-string">&quot;/data/a&quot;</span>, <br>    <span class="hljs-string">&quot;state&quot;</span>: <span class="hljs-string">&quot;absent&quot;</span><br>&#125;<br><span class="hljs-meta prompt_">192.168.37.133 | SUCCESS =&gt;</span> &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">true</span>, <br>    <span class="hljs-string">&quot;path&quot;</span>: <span class="hljs-string">&quot;/data/a&quot;</span>, <br>    <span class="hljs-string">&quot;state&quot;</span>: <span class="hljs-string">&quot;absent&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>

<p>　　我们可以查看一下：</p>
<figure class="highlight haskell"><table><tr><td class="code"><pre><code class="hljs haskell">[root@server ~]# ansible web -m shell -a &#x27;ls /<span class="hljs-class"><span class="hljs-keyword">data</span>/a&#x27;</span><br><span class="hljs-number">192.168</span>.<span class="hljs-number">37.122</span> | <span class="hljs-type">FAILED</span> | rc=<span class="hljs-number">2</span> &gt;&gt;<br><span class="hljs-title">ls</span>: cannot access /<span class="hljs-class"><span class="hljs-keyword">data</span>/a: <span class="hljs-type">No</span> such file or directory</span><br><br><span class="hljs-number">192.168</span>.<span class="hljs-number">37.133</span> | <span class="hljs-type">FAILED</span> | rc=<span class="hljs-number">2</span> &gt;&gt;<br><span class="hljs-title">ls</span>: cannot access /<span class="hljs-class"><span class="hljs-keyword">data</span>/a: <span class="hljs-type">No</span> such file or directory</span><br></code></pre></td></tr></table></figure>

<p>　　发现已经没有这个文件了。
　　</p>
<h3 id="6）fetch-模块"><a href="#6）fetch-模块" class="headerlink" title="6）fetch 模块"></a>6）fetch 模块</h3><p>　　该模块用于从远程某主机获取（复制）文件到本地。<br>　　有两个选项：</p>
<blockquote>
<p><code>dest</code>：用来存放文件的目录<br><code>src</code>：在远程拉取的文件，并且必须是一个<strong>file</strong>，不能是<strong>目录</strong></p>
</blockquote>
<p>　　具体举例如下：</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><code class="hljs dart">[root<span class="hljs-meta">@server</span> ~]# ansible web -m fetch -a <span class="hljs-string">&#x27;src=/data/hello dest=/data&#x27;</span>  <br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.122</span> | SUCCESS =&gt; &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-keyword">true</span>, <br>    <span class="hljs-string">&quot;checksum&quot;</span>: <span class="hljs-string">&quot;22596363b3de40b06f981fb85d82312e8c0ed511&quot;</span>, <br>    <span class="hljs-string">&quot;dest&quot;</span>: <span class="hljs-string">&quot;/data/192.168.37.122/data/hello&quot;</span>, <br>    <span class="hljs-string">&quot;md5sum&quot;</span>: <span class="hljs-string">&quot;6f5902ac237024bdd0c176cb93063dc4&quot;</span>, <br>    <span class="hljs-string">&quot;remote_checksum&quot;</span>: <span class="hljs-string">&quot;22596363b3de40b06f981fb85d82312e8c0ed511&quot;</span>, <br>    <span class="hljs-string">&quot;remote_md5sum&quot;</span>: <span class="hljs-keyword">null</span><br>&#125;<br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.133</span> | SUCCESS =&gt; &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-keyword">true</span>, <br>    <span class="hljs-string">&quot;checksum&quot;</span>: <span class="hljs-string">&quot;22596363b3de40b06f981fb85d82312e8c0ed511&quot;</span>, <br>    <span class="hljs-string">&quot;dest&quot;</span>: <span class="hljs-string">&quot;/data/192.168.37.133/data/hello&quot;</span>, <br>    <span class="hljs-string">&quot;md5sum&quot;</span>: <span class="hljs-string">&quot;6f5902ac237024bdd0c176cb93063dc4&quot;</span>, <br>    <span class="hljs-string">&quot;remote_checksum&quot;</span>: <span class="hljs-string">&quot;22596363b3de40b06f981fb85d82312e8c0ed511&quot;</span>, <br>    <span class="hljs-string">&quot;remote_md5sum&quot;</span>: <span class="hljs-keyword">null</span><br>&#125;<br></code></pre></td></tr></table></figure>

<p>　　我们可以在本机上查看一下文件是否复制成功。要注意，文件保存的路径是我们设置的接收目录下的<code>被管制主机ip</code>目录下：</p>
<figure class="highlight haskell"><table><tr><td class="code"><pre><code class="hljs haskell">[root@server ~]# cd /<span class="hljs-class"><span class="hljs-keyword">data</span>/</span><br>[root@server <span class="hljs-class"><span class="hljs-keyword">data</span>]# ls</span><br><span class="hljs-number">1</span>  <span class="hljs-number">192.168</span>.<span class="hljs-number">37.122</span>  <span class="hljs-number">192.168</span>.<span class="hljs-number">37.133</span>  fastdfs  web<br>[root@server <span class="hljs-class"><span class="hljs-keyword">data</span>]# cd 192.168.37.122</span><br>[root@server <span class="hljs-number">192.168</span>.<span class="hljs-number">37.122</span>]# ls<br><span class="hljs-class"><span class="hljs-keyword">data</span></span><br>[root@server <span class="hljs-number">192.168</span>.<span class="hljs-number">37.122</span>]# cd <span class="hljs-class"><span class="hljs-keyword">data</span>/</span><br>[root@server <span class="hljs-class"><span class="hljs-keyword">data</span>]# ls</span><br><span class="hljs-title">hello</span><br>[root@server <span class="hljs-class"><span class="hljs-keyword">data</span>]# pwd</span><br>/<span class="hljs-class"><span class="hljs-keyword">data</span>/192.168.37.122/<span class="hljs-keyword">data</span></span><br></code></pre></td></tr></table></figure>

<h3 id="7）cron-模块"><a href="#7）cron-模块" class="headerlink" title="7）cron 模块"></a>7）cron 模块</h3><p>　　该模块适用于管理<code>cron</code>计划任务的。<br>　　其使用的语法跟我们的<code>crontab</code>文件中的语法一致，同时，可以指定以下选项：</p>
<blockquote>
<p><code>day=</code> #日应该运行的工作( 1-31, *, *&#x2F;2, )<br><code>hour=</code> # 小时 ( 0-23, *, *&#x2F;2, )<br><code>minute=</code> #分钟( 0-59, *, *&#x2F;2, )<br><code>month=</code> # 月( 1-12, *, &#x2F;2, )<br><code>weekday=</code> # 周 ( 0-6 for Sunday-Saturday,, )<br><code>job=</code> #指明运行的命令是什么<br><code>name=</code> #定时任务描述<br><code>reboot</code> # 任务在重启时运行，不建议使用，建议使用special_time<br><code>special_time</code> #特殊的时间范围，参数：reboot（重启时），annually（每年），monthly（每月），weekly（每周），daily（每天），hourly（每小时）<br><code>state</code> #指定状态，present表示添加定时任务，也是默认设置，absent表示删除定时任务<br><code>user</code> # 以哪个用户的身份执行</p>
</blockquote>
<p>　　举例如下：<br><strong>① 添加计划任务</strong></p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><code class="hljs ruby">[root<span class="hljs-variable">@server</span> ~]<span class="hljs-comment"># ansible web -m cron -a &#x27;name=&quot;ntp update every 5 min&quot; minute=*/5 job=&quot;/sbin/ntpdate 172.17.0.1 &amp;&gt; /dev/null&quot;&#x27;</span><br><span class="hljs-meta prompt_">192.168.37.122 | SUCCESS =&gt;</span> &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">true</span>, <br>    <span class="hljs-string">&quot;envs&quot;</span>: [], <br>    <span class="hljs-string">&quot;jobs&quot;</span>: [<br>        <span class="hljs-string">&quot;ntp update every 5 min&quot;</span><br>    ]<br>&#125;<br><span class="hljs-meta prompt_">192.168.37.133 | SUCCESS =&gt;</span> &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">true</span>, <br>    <span class="hljs-string">&quot;envs&quot;</span>: [], <br>    <span class="hljs-string">&quot;jobs&quot;</span>: [<br>        <span class="hljs-string">&quot;ntp update every 5 min&quot;</span><br>    ]<br>&#125;<br></code></pre></td></tr></table></figure>

<p>　　我们可以去查看一下：</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><code class="hljs perl">[root@server ~]<span class="hljs-comment"># ansible web -m shell -a &#x27;crontab -l&#x27;</span><br><span class="hljs-number">192.168</span>.<span class="hljs-number">37.122</span> | SUCCESS | rc=<span class="hljs-number">0</span> &gt;&gt;<br><span class="hljs-comment">#Ansible: ntp update every 5 min</span><br>*<span class="hljs-regexp">/5 * * * * /s</span>bin/ntpdate <span class="hljs-number">172.17</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span> &amp;&gt; <span class="hljs-regexp">/dev/null</span><br><br><span class="hljs-number">192.168</span>.<span class="hljs-number">37.133</span> | SUCCESS | rc=<span class="hljs-number">0</span> &gt;&gt;<br><span class="hljs-comment">#Ansible: ntp update every 5 min</span><br>*<span class="hljs-regexp">/5 * * * * /s</span>bin/ntpdate <span class="hljs-number">172.17</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span> &amp;&gt; <span class="hljs-regexp">/dev/null</span><br></code></pre></td></tr></table></figure>

<p>　　可以看出，我们的计划任务已经设置成功了。<br><strong>② 删除计划任务</strong><br>　　如果我们的计划任务添加错误，想要删除的话，则执行以下操作：<br>　　首先我们查看一下现有的计划任务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@server ~]<span class="hljs-comment"># ansible web -m shell -a &#x27;crontab -l&#x27;</span><br>192.168.37.122 | SUCCESS | rc=0 &gt;&gt;<br><span class="hljs-comment">#Ansible: ntp update every 5 min</span><br>*/5 * * * * /sbin/ntpdate 172.17.0.1 &amp;&gt; /dev/null<br><span class="hljs-comment">#Ansible: df everyday</span><br>* 15 * * * <span class="hljs-built_in">df</span> -lh &gt;&gt; /tmp/disk_total &amp;&gt; /dev/null<br><br>192.168.37.133 | SUCCESS | rc=0 &gt;&gt;<br><span class="hljs-comment">#Ansible: ntp update every 5 min</span><br>*/5 * * * * /sbin/ntpdate 172.17.0.1 &amp;&gt; /dev/null<br><span class="hljs-comment">#Ansible: df everyday</span><br>* 15 * * * <span class="hljs-built_in">df</span> -lh &gt;&gt; /tmp/disk_total &amp;&gt; /dev/null<br></code></pre></td></tr></table></figure>

<p>　　然后执行删除操作：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><code class="hljs ruby">[root<span class="hljs-variable">@server</span> ~]<span class="hljs-comment"># ansible web -m cron -a &#x27;name=&quot;df everyday&quot; hour=15 job=&quot;df -lh &gt;&gt; /tmp/disk_total &amp;&gt; /dev/null&quot; state=absent&#x27;</span><br><span class="hljs-meta prompt_">192.168.37.122 | SUCCESS =&gt;</span> &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">true</span>, <br>    <span class="hljs-string">&quot;envs&quot;</span>: [], <br>    <span class="hljs-string">&quot;jobs&quot;</span>: [<br>        <span class="hljs-string">&quot;ntp update every 5 min&quot;</span><br>    ]<br>&#125;<br><span class="hljs-meta prompt_">192.168.37.133 | SUCCESS =&gt;</span> &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">true</span>, <br>    <span class="hljs-string">&quot;envs&quot;</span>: [], <br>    <span class="hljs-string">&quot;jobs&quot;</span>: [<br>        <span class="hljs-string">&quot;ntp update every 5 min&quot;</span><br>    ]<br>&#125;<br></code></pre></td></tr></table></figure>

<p>　　删除完成后，我们再查看一下现有的计划任务确认一下：</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><code class="hljs perl">[root@server ~]<span class="hljs-comment"># ansible web -m shell -a &#x27;crontab -l&#x27;</span><br><span class="hljs-number">192.168</span>.<span class="hljs-number">37.122</span> | SUCCESS | rc=<span class="hljs-number">0</span> &gt;&gt;<br><span class="hljs-comment">#Ansible: ntp update every 5 min</span><br>*<span class="hljs-regexp">/5 * * * * /s</span>bin/ntpdate <span class="hljs-number">172.17</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span> &amp;&gt; <span class="hljs-regexp">/dev/null</span><br><br><span class="hljs-number">192.168</span>.<span class="hljs-number">37.133</span> | SUCCESS | rc=<span class="hljs-number">0</span> &gt;&gt;<br><span class="hljs-comment">#Ansible: ntp update every 5 min</span><br>*<span class="hljs-regexp">/5 * * * * /s</span>bin/ntpdate <span class="hljs-number">172.17</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span> &amp;&gt; <span class="hljs-regexp">/dev/null</span><br></code></pre></td></tr></table></figure>

<p>　　我们的删除操作已经成功。</p>
<h3 id="8）yum-模块"><a href="#8）yum-模块" class="headerlink" title="8）yum 模块"></a>8）yum 模块</h3><p>　　顾名思义，该模块主要用于软件的安装。<br>　　其选项如下：</p>
<blockquote>
<p><code>name=</code>　　#所安装的包的名称<br><code>state=</code>　　#<code>present</code>—&gt;安装， <code>latest</code>—&gt;安装最新的, <code>absent</code>—&gt; 卸载软件。<br><code>update_cache</code>　　#强制更新yum的缓存<br><code>conf_file</code>　　#指定远程yum安装时所依赖的配置文件（安装本地已有的包）。<br><code>disable_pgp_check</code>　　#是否禁止GPG checking，只用于<code>present</code>or <code>latest</code>。<br><code>disablerepo</code>　　#临时禁止使用yum库。 只用于安装或更新时。<br><code>enablerepo</code>　　#临时使用的yum库。只用于安装或更新时。</p>
</blockquote>
<p>　　下面我们就来安装一个包试试看：</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><code class="hljs swift">[root<span class="hljs-meta">@server</span> <span class="hljs-operator">~</span>]# ansible web <span class="hljs-operator">-</span>m yum <span class="hljs-operator">-</span>a &#x27;name<span class="hljs-operator">=</span>htop state<span class="hljs-operator">=</span>present&#x27;<br><span class="hljs-number">192.168</span>.<span class="hljs-number">37.122</span> <span class="hljs-operator">|</span> <span class="hljs-type">SUCCESS</span> <span class="hljs-operator">=&gt;</span> &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">true</span>, <br>    <span class="hljs-string">&quot;msg&quot;</span>: <span class="hljs-string">&quot;&quot;</span>, <br>    <span class="hljs-string">&quot;rc&quot;</span>: <span class="hljs-number">0</span>, <br>    <span class="hljs-string">&quot;results&quot;</span>: [<br>        <span class="hljs-string">&quot;Loaded plugins: fastestmirror, langpacks<span class="hljs-subst">\n</span>Loading mirror speeds from cached hostfile<span class="hljs-subst">\n</span>Resolving Dependencies<span class="hljs-subst">\n</span>--&gt; Running transaction check<span class="hljs-subst">\n</span>---&gt; Package htop.x86_64 0:2.0.2-1.el7 will be installed<span class="hljs-subst">\n</span>--&gt; Finished Dependency Resolution<span class="hljs-subst">\n</span><span class="hljs-subst">\n</span>Dependencies Resolved<span class="hljs-subst">\n</span><span class="hljs-subst">\n</span>================================================================================<span class="hljs-subst">\n</span> Package         Arch              Version                Repository       Size<span class="hljs-subst">\n</span>================================================================================<span class="hljs-subst">\n</span>Installing:<span class="hljs-subst">\n</span> htop            x86_64            2.0.2-1.el7            epel             98 k<span class="hljs-subst">\n</span><span class="hljs-subst">\n</span>Transaction Summary<span class="hljs-subst">\n</span>================================================================================<span class="hljs-subst">\n</span>Install  1 Package<span class="hljs-subst">\n</span><span class="hljs-subst">\n</span>Total download size: 98 k<span class="hljs-subst">\n</span>Installed size: 207 k<span class="hljs-subst">\n</span>Downloading packages:<span class="hljs-subst">\n</span>Running transaction check<span class="hljs-subst">\n</span>Running transaction test<span class="hljs-subst">\n</span>Transaction test succeeded<span class="hljs-subst">\n</span>Running transaction<span class="hljs-subst">\n</span>  Installing : htop-2.0.2-1.el7.x86_64                                      1/1 <span class="hljs-subst">\n</span>  Verifying  : htop-2.0.2-1.el7.x86_64                                      1/1 <span class="hljs-subst">\n</span><span class="hljs-subst">\n</span>Installed:<span class="hljs-subst">\n</span>  htop.x86_64 0:2.0.2-1.el7                                                     <span class="hljs-subst">\n</span><span class="hljs-subst">\n</span>Complete!<span class="hljs-subst">\n</span>&quot;</span><br>    ]<br>&#125;<br><span class="hljs-number">192.168</span>.<span class="hljs-number">37.133</span> <span class="hljs-operator">|</span> <span class="hljs-type">SUCCESS</span> <span class="hljs-operator">=&gt;</span> &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">true</span>, <br>    <span class="hljs-string">&quot;msg&quot;</span>: <span class="hljs-string">&quot;Warning: RPMDB altered outside of yum.<span class="hljs-subst">\n</span>** Found 3 pre-existing rpmdb problem(s), &#x27;yum check&#x27; output follows:<span class="hljs-subst">\n</span>ipa-client-4.4.0-12.el7.centos.x86_64 has installed conflicts freeipa-client: ipa-client-4.4.0-12.el7.centos.x86_64<span class="hljs-subst">\n</span>ipa-client-common-4.4.0-12.el7.centos.noarch has installed conflicts freeipa-client-common: ipa-client-common-4.4.0-12.el7.centos.noarch<span class="hljs-subst">\n</span>ipa-common-4.4.0-12.el7.centos.noarch has installed conflicts freeipa-common: ipa-common-4.4.0-12.el7.centos.noarch<span class="hljs-subst">\n</span>&quot;</span>, <br>    <span class="hljs-string">&quot;rc&quot;</span>: <span class="hljs-number">0</span>, <br>    <span class="hljs-string">&quot;results&quot;</span>: [<br>        <span class="hljs-string">&quot;Loaded plugins: fastestmirror, langpacks<span class="hljs-subst">\n</span>Loading mirror speeds from cached hostfile<span class="hljs-subst">\n</span>Resolving Dependencies<span class="hljs-subst">\n</span>--&gt; Running transaction check<span class="hljs-subst">\n</span>---&gt; Package htop.x86_64 0:2.0.2-1.el7 will be installed<span class="hljs-subst">\n</span>--&gt; Finished Dependency Resolution<span class="hljs-subst">\n</span><span class="hljs-subst">\n</span>Dependencies Resolved<span class="hljs-subst">\n</span><span class="hljs-subst">\n</span>================================================================================<span class="hljs-subst">\n</span> Package         Arch              Version                Repository       Size<span class="hljs-subst">\n</span>================================================================================<span class="hljs-subst">\n</span>Installing:<span class="hljs-subst">\n</span> htop            x86_64            2.0.2-1.el7            epel             98 k<span class="hljs-subst">\n</span><span class="hljs-subst">\n</span>Transaction Summary<span class="hljs-subst">\n</span>================================================================================<span class="hljs-subst">\n</span>Install  1 Package<span class="hljs-subst">\n</span><span class="hljs-subst">\n</span>Total download size: 98 k<span class="hljs-subst">\n</span>Installed size: 207 k<span class="hljs-subst">\n</span>Downloading packages:<span class="hljs-subst">\n</span>Running transaction check<span class="hljs-subst">\n</span>Running transaction test<span class="hljs-subst">\n</span>Transaction test succeeded<span class="hljs-subst">\n</span>Running transaction<span class="hljs-subst">\n</span>  Installing : htop-2.0.2-1.el7.x86_64                                      1/1 <span class="hljs-subst">\n</span>  Verifying  : htop-2.0.2-1.el7.x86_64                                      1/1 <span class="hljs-subst">\n</span><span class="hljs-subst">\n</span>Installed:<span class="hljs-subst">\n</span>  htop.x86_64 0:2.0.2-1.el7                                                     <span class="hljs-subst">\n</span><span class="hljs-subst">\n</span>Complete!<span class="hljs-subst">\n</span>&quot;</span><br>    ]<br>&#125;<br></code></pre></td></tr></table></figure>

<p>　　安装成功。</p>
<h3 id="9）service-模块"><a href="#9）service-模块" class="headerlink" title="9）service 模块"></a>9）service 模块</h3><p>　　该模块用于服务程序的管理。<br>　　其主要选项如下：</p>
<blockquote>
<p><code>arguments</code> #命令行提供额外的参数<br><code>enabled</code> #设置开机启动。<br><code>name=</code> #服务名称<br><code>runlevel</code> #开机启动的级别，一般不用指定。<br><code>sleep</code> #在重启服务的过程中，是否等待。如在服务关闭以后等待2秒再启动。(定义在剧本中。)<br><code>state</code> #有四种状态，分别为：<code>started</code>—&gt;启动服务， <code>stopped</code>—&gt;停止服务， <code>restarted</code>—&gt;重启服务， <code>reloaded</code>—&gt;重载配置</p>
</blockquote>
<p>　　下面是一些例子：<br><strong>① 开启服务并设置自启动</strong></p>
<figure class="highlight dart"><table><tr><td class="code"><pre><code class="hljs dart">[root<span class="hljs-meta">@server</span> ~]# ansible web -m service -a <span class="hljs-string">&#x27;name=nginx state=started enabled=true&#x27;</span> <br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.122</span> | SUCCESS =&gt; &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-keyword">true</span>, <br>    <span class="hljs-string">&quot;enabled&quot;</span>: <span class="hljs-keyword">true</span>, <br>    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;nginx&quot;</span>, <br>    <span class="hljs-string">&quot;state&quot;</span>: <span class="hljs-string">&quot;started&quot;</span>, <br>    ……<br>&#125;<br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.133</span> | SUCCESS =&gt; &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-keyword">true</span>, <br>    <span class="hljs-string">&quot;enabled&quot;</span>: <span class="hljs-keyword">true</span>, <br>    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;nginx&quot;</span>, <br>    <span class="hljs-string">&quot;state&quot;</span>: <span class="hljs-string">&quot;started&quot;</span>, <br>    ……<br>&#125;<br></code></pre></td></tr></table></figure>

<p>　　我们可以去查看一下端口是否打开：</p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><code class="hljs mipsasm">[root@server ~]<span class="hljs-comment"># ansible web -m shell -a &#x27;ss -ntl&#x27;</span><br><span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">37</span>.<span class="hljs-number">122</span> <span class="hljs-title">| SUCCESS |</span> rc=<span class="hljs-number">0</span> &gt;&gt;<br>State      Recv-Q Send-Q Local <span class="hljs-keyword">Address:Port </span>              Peer <span class="hljs-keyword">Address:Port </span>             <br>LISTEN     <span class="hljs-number">0</span>      <span class="hljs-number">128</span>          *:<span class="hljs-number">80</span>                       *:*                                  <br><br><span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">37</span>.<span class="hljs-number">133</span> <span class="hljs-title">| SUCCESS |</span> rc=<span class="hljs-number">0</span> &gt;&gt;<br>State      Recv-Q Send-Q Local <span class="hljs-keyword">Address:Port </span>              Peer <span class="hljs-keyword">Address:Port </span>                   <br>LISTEN     <span class="hljs-number">0</span>      <span class="hljs-number">128</span>          *:<span class="hljs-number">80</span>                       *:*                  <br></code></pre></td></tr></table></figure>

<p>　　可以看出我们的80端口已经打开。<br><strong>② 关闭服务</strong><br>　　我们也可以通过该模块来关闭我们的服务：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><code class="hljs ruby">[root<span class="hljs-variable">@server</span> ~]<span class="hljs-comment"># ansible web -m service -a &#x27;name=nginx state=stopped&#x27;</span><br><span class="hljs-meta prompt_">192.168.37.122 | SUCCESS =&gt;</span> &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">true</span>, <br>    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;nginx&quot;</span>, <br>    <span class="hljs-string">&quot;state&quot;</span>: <span class="hljs-string">&quot;stopped&quot;</span>, <br>	……<br>&#125;<br><span class="hljs-meta prompt_">192.168.37.133 | SUCCESS =&gt;</span> &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">true</span>, <br>    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;nginx&quot;</span>, <br>    <span class="hljs-string">&quot;state&quot;</span>: <span class="hljs-string">&quot;stopped&quot;</span>, <br>	……<br>&#125;<br></code></pre></td></tr></table></figure>

<p>　　一样的，我们来查看一下端口：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><code class="hljs csharp">[<span class="hljs-meta">root@server ~</span>]<span class="hljs-meta"># ansible web -m shell -a &#x27;ss -ntl | grep 80&#x27;</span><br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.122</span> | FAILED | rc=<span class="hljs-number">1</span> &gt;&gt;<br><br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.133</span> | FAILED | rc=<span class="hljs-number">1</span> &gt;&gt;<br></code></pre></td></tr></table></figure>

<p>　　可以看出，我们已经没有80端口了，说明我们的nginx服务已经关闭了。</p>
<h3 id="10）user-模块"><a href="#10）user-模块" class="headerlink" title="10）user 模块"></a>10）user 模块</h3><p>　　该模块主要是用来管理用户账号。<br>　　其主要选项如下：</p>
<blockquote>
<p><code>comment</code>　　# 用户的描述信息<br><code>createhome</code>　　# 是否创建家目录<br><code>force</code>　　# 在使用state&#x3D;absent时, 行为与userdel –force一致.<br><code>group</code>　　# 指定基本组<br><code>groups</code>　　# 指定附加组，如果指定为(groups&#x3D;)表示删除所有组<br><code>home</code>　　# 指定用户家目录<br><code>move_home</code>　　# 如果设置为home&#x3D;时, 试图将用户主目录移动到指定的目录<br><code>name</code>　　# 指定用户名<br><code>non_unique</code>　　# 该选项允许改变非唯一的用户ID值<br><code>password</code>　　# 指定用户密码<br><code>remove</code>　　# 在使用state&#x3D;absent时, 行为是与userdel –remove一致<br><code>shell</code>　　# 指定默认shell<br><code>state</code>　　# 设置帐号状态，不指定为创建，指定值为absent表示删除<br><code>system</code>　　# 当创建一个用户，设置这个用户是系统用户。这个设置不能更改现有用户<br><code>uid</code>　　# 指定用户的uid</p>
</blockquote>
<p>　　举例如下：<br><strong>① 添加一个用户并指定其 uid</strong></p>
<figure class="highlight smalltalk"><table><tr><td class="code"><pre><code class="hljs smalltalk">[root@server ~]# ansible web -m user -a <span class="hljs-string">&#x27;name=keer uid=11111&#x27;</span><br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.122</span> | <span class="hljs-type">SUCCESS</span> =&gt; &#123;<br>    <span class="hljs-comment">&quot;changed&quot;</span>: <span class="hljs-keyword">true</span>, <br>    <span class="hljs-comment">&quot;comment&quot;</span>: <span class="hljs-comment">&quot;&quot;</span>, <br>    <span class="hljs-comment">&quot;createhome&quot;</span>: <span class="hljs-keyword">true</span>, <br>    <span class="hljs-comment">&quot;group&quot;</span>: <span class="hljs-number">11111</span>, <br>    <span class="hljs-comment">&quot;home&quot;</span>: <span class="hljs-comment">&quot;/home/keer&quot;</span>, <br>    <span class="hljs-comment">&quot;name&quot;</span>: <span class="hljs-comment">&quot;keer&quot;</span>, <br>    <span class="hljs-comment">&quot;shell&quot;</span>: <span class="hljs-comment">&quot;/bin/bash&quot;</span>, <br>    <span class="hljs-comment">&quot;state&quot;</span>: <span class="hljs-comment">&quot;present&quot;</span>, <br>    <span class="hljs-comment">&quot;stderr&quot;</span>: <span class="hljs-comment">&quot;useradd: warning: the home directory already exists.\nNot copying any file from skel directory into it.\nCreating mailbox file: File exists\n&quot;</span>, <br>    <span class="hljs-comment">&quot;system&quot;</span>: <span class="hljs-keyword">false</span>, <br>    <span class="hljs-comment">&quot;uid&quot;</span>: <span class="hljs-number">11111</span><br>&#125;<br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.133</span> | <span class="hljs-type">SUCCESS</span> =&gt; &#123;<br>    <span class="hljs-comment">&quot;changed&quot;</span>: <span class="hljs-keyword">true</span>, <br>    <span class="hljs-comment">&quot;comment&quot;</span>: <span class="hljs-comment">&quot;&quot;</span>, <br>    <span class="hljs-comment">&quot;createhome&quot;</span>: <span class="hljs-keyword">true</span>, <br>    <span class="hljs-comment">&quot;group&quot;</span>: <span class="hljs-number">11111</span>, <br>    <span class="hljs-comment">&quot;home&quot;</span>: <span class="hljs-comment">&quot;/home/keer&quot;</span>, <br>    <span class="hljs-comment">&quot;name&quot;</span>: <span class="hljs-comment">&quot;keer&quot;</span>, <br>    <span class="hljs-comment">&quot;shell&quot;</span>: <span class="hljs-comment">&quot;/bin/bash&quot;</span>, <br>    <span class="hljs-comment">&quot;state&quot;</span>: <span class="hljs-comment">&quot;present&quot;</span>, <br>    <span class="hljs-comment">&quot;stderr&quot;</span>: <span class="hljs-comment">&quot;useradd: warning: the home directory already exists.\nNot copying any file from skel directory into it.\nCreating mailbox file: File exists\n&quot;</span>, <br>    <span class="hljs-comment">&quot;system&quot;</span>: <span class="hljs-keyword">false</span>, <br>    <span class="hljs-comment">&quot;uid&quot;</span>: <span class="hljs-number">11111</span><br>&#125;<br></code></pre></td></tr></table></figure>

<p>　　添加完成，我们可以去查看一下：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><code class="hljs ruby">[root<span class="hljs-variable">@server</span> ~]<span class="hljs-comment"># ansible web -m shell -a &#x27;cat /etc/passwd |grep keer&#x27;</span><br><span class="hljs-number">192.168</span>.<span class="hljs-number">37.122</span> |<span class="hljs-params"> SUCCESS </span>| rc=<span class="hljs-number">0</span> &gt;&gt;<br><span class="hljs-symbol">keer:</span><span class="hljs-symbol">x:</span><span class="hljs-number">11111</span><span class="hljs-symbol">:</span><span class="hljs-number">11111</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:/home/keer</span><span class="hljs-symbol">:/bin/bash</span><br><br><span class="hljs-number">192.168</span>.<span class="hljs-number">37.133</span> |<span class="hljs-params"> SUCCESS </span>| rc=<span class="hljs-number">0</span> &gt;&gt;<br><span class="hljs-symbol">keer:</span><span class="hljs-symbol">x:</span><span class="hljs-number">11111</span><span class="hljs-symbol">:</span><span class="hljs-number">11111</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:/home/keer</span><span class="hljs-symbol">:/bin/bash</span><br></code></pre></td></tr></table></figure>

<p><strong>② 删除用户</strong></p>
<figure class="highlight dart"><table><tr><td class="code"><pre><code class="hljs dart">[root<span class="hljs-meta">@server</span> ~]# ansible web -m user -a <span class="hljs-string">&#x27;name=keer state=absent&#x27;</span><br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.122</span> | SUCCESS =&gt; &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-keyword">true</span>, <br>    <span class="hljs-string">&quot;force&quot;</span>: <span class="hljs-keyword">false</span>, <br>    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;keer&quot;</span>, <br>    <span class="hljs-string">&quot;remove&quot;</span>: <span class="hljs-keyword">false</span>, <br>    <span class="hljs-string">&quot;state&quot;</span>: <span class="hljs-string">&quot;absent&quot;</span><br>&#125;<br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.133</span> | SUCCESS =&gt; &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-keyword">true</span>, <br>    <span class="hljs-string">&quot;force&quot;</span>: <span class="hljs-keyword">false</span>, <br>    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;keer&quot;</span>, <br>    <span class="hljs-string">&quot;remove&quot;</span>: <span class="hljs-keyword">false</span>, <br>    <span class="hljs-string">&quot;state&quot;</span>: <span class="hljs-string">&quot;absent&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>

<p>　　一样的，删除之后，我们去看一下：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><code class="hljs csharp">[<span class="hljs-meta">root@server ~</span>]<span class="hljs-meta"># ansible web -m shell -a &#x27;cat /etc/passwd |grep keer&#x27;</span><br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.122</span> | FAILED | rc=<span class="hljs-number">1</span> &gt;&gt;<br><br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.133</span> | FAILED | rc=<span class="hljs-number">1</span> &gt;&gt;<br></code></pre></td></tr></table></figure>

<p>　　发现已经没有这个用户了。</p>
<h3 id="11）group-模块"><a href="#11）group-模块" class="headerlink" title="11）group 模块"></a>11）group 模块</h3><p>　　该模块主要用于添加或删除组。<br>　　常用的选项如下：</p>
<blockquote>
<p><code>gid=</code>　　#设置组的GID号<br><code>name=</code>　　#指定组的名称<br><code>state=</code>　　#指定组的状态，默认为创建，设置值为<code>absent</code>为删除<br><code>system=</code>　　#设置值为<code>yes</code>，表示创建为系统组</p>
</blockquote>
<p>　　举例如下：<br><strong>① 创建组</strong></p>
<figure class="highlight dart"><table><tr><td class="code"><pre><code class="hljs dart">[root<span class="hljs-meta">@server</span> ~]# ansible web -m group -a <span class="hljs-string">&#x27;name=sanguo gid=12222&#x27;</span><br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.122</span> | SUCCESS =&gt; &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-keyword">true</span>, <br>    <span class="hljs-string">&quot;gid&quot;</span>: <span class="hljs-number">12222</span>, <br>    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;sanguo&quot;</span>, <br>    <span class="hljs-string">&quot;state&quot;</span>: <span class="hljs-string">&quot;present&quot;</span>, <br>    <span class="hljs-string">&quot;system&quot;</span>: <span class="hljs-keyword">false</span><br>&#125;<br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.133</span> | SUCCESS =&gt; &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-keyword">true</span>, <br>    <span class="hljs-string">&quot;gid&quot;</span>: <span class="hljs-number">12222</span>, <br>    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;sanguo&quot;</span>, <br>    <span class="hljs-string">&quot;state&quot;</span>: <span class="hljs-string">&quot;present&quot;</span>, <br>    <span class="hljs-string">&quot;system&quot;</span>: <span class="hljs-keyword">false</span><br>&#125;<br></code></pre></td></tr></table></figure>

<p>　　创建过后，我们来查看一下：</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><code class="hljs makefile">[root@server ~]<span class="hljs-comment"># ansible web -m shell -a &#x27;cat /etc/group | grep 12222&#x27; </span><br>192.168.37.122 | SUCCESS | rc=0 &gt;&gt;<br><span class="hljs-section">sanguo:x:12222:</span><br><br>192.168.37.133 | SUCCESS | rc=0 &gt;&gt;<br><span class="hljs-section">sanguo:x:12222:</span><br></code></pre></td></tr></table></figure>

<p>　　可以看出，我们的组已经创建成功了。<br><strong>② 删除组</strong></p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><code class="hljs ruby">[root<span class="hljs-variable">@server</span> ~]<span class="hljs-comment"># ansible web -m group -a &#x27;name=sanguo state=absent&#x27;</span><br><span class="hljs-meta prompt_">192.168.37.122 | SUCCESS =&gt;</span> &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">true</span>, <br>    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;sanguo&quot;</span>, <br>    <span class="hljs-string">&quot;state&quot;</span>: <span class="hljs-string">&quot;absent&quot;</span><br>&#125;<br><span class="hljs-meta prompt_">192.168.37.133 | SUCCESS =&gt;</span> &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">true</span>, <br>    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;sanguo&quot;</span>, <br>    <span class="hljs-string">&quot;state&quot;</span>: <span class="hljs-string">&quot;absent&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>

<p>　　照例查看一下：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><code class="hljs csharp">[<span class="hljs-meta">root@server ~</span>]<span class="hljs-meta"># ansible web -m shell -a &#x27;cat /etc/group | grep 12222&#x27; </span><br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.122</span> | FAILED | rc=<span class="hljs-number">1</span> &gt;&gt;<br><br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.133</span> | FAILED | rc=<span class="hljs-number">1</span> &gt;&gt;<br></code></pre></td></tr></table></figure>

<p>　　已经没有这个组的相关信息了。</p>
<h3 id="12）script-模块"><a href="#12）script-模块" class="headerlink" title="12）script 模块"></a>12）script 模块</h3><p>　　该模块用于将本机的脚本在被管理端的机器上运行。<br>　　该模块直接指定脚本的路径即可，我们通过例子来看一看到底如何使用的：<br>　　首先，我们写一个脚本，并给其加上执行权限：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@server ~]<span class="hljs-comment"># vim /tmp/df.sh</span><br>	<span class="hljs-comment">#!/bin/bash</span><br><br>	<span class="hljs-built_in">date</span> &gt;&gt; /tmp/disk_total.log<br>	<span class="hljs-built_in">df</span> -lh &gt;&gt; /tmp/disk_total.log <br>[root@server ~]<span class="hljs-comment"># chmod +x /tmp/df.sh </span><br></code></pre></td></tr></table></figure>

<p>　　然后，我们直接运行命令来实现在被管理端执行该脚本：</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><code class="hljs swift">[root<span class="hljs-meta">@server</span> <span class="hljs-operator">~</span>]# ansible web <span class="hljs-operator">-</span>m script <span class="hljs-operator">-</span>a &#x27;<span class="hljs-operator">/</span>tmp<span class="hljs-operator">/</span>df.sh&#x27;<br><span class="hljs-number">192.168</span>.<span class="hljs-number">37.122</span> <span class="hljs-operator">|</span> <span class="hljs-type">SUCCESS</span> <span class="hljs-operator">=&gt;</span> &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">true</span>, <br>    <span class="hljs-string">&quot;rc&quot;</span>: <span class="hljs-number">0</span>, <br>    <span class="hljs-string">&quot;stderr&quot;</span>: <span class="hljs-string">&quot;Shared connection to 192.168.37.122 closed.<span class="hljs-subst">\r</span><span class="hljs-subst">\n</span>&quot;</span>, <br>    <span class="hljs-string">&quot;stdout&quot;</span>: <span class="hljs-string">&quot;&quot;</span>, <br>    <span class="hljs-string">&quot;stdout_lines&quot;</span>: []<br>&#125;<br><span class="hljs-number">192.168</span>.<span class="hljs-number">37.133</span> <span class="hljs-operator">|</span> <span class="hljs-type">SUCCESS</span> <span class="hljs-operator">=&gt;</span> &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">true</span>, <br>    <span class="hljs-string">&quot;rc&quot;</span>: <span class="hljs-number">0</span>, <br>    <span class="hljs-string">&quot;stderr&quot;</span>: <span class="hljs-string">&quot;Shared connection to 192.168.37.133 closed.<span class="hljs-subst">\r</span><span class="hljs-subst">\n</span>&quot;</span>, <br>    <span class="hljs-string">&quot;stdout&quot;</span>: <span class="hljs-string">&quot;&quot;</span>, <br>    <span class="hljs-string">&quot;stdout_lines&quot;</span>: []<br>&#125;<br></code></pre></td></tr></table></figure>

<p>　　照例查看一下文件内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@server ~]<span class="hljs-comment"># ansible web -m shell -a &#x27;cat /tmp/disk_total.log&#x27;</span><br>192.168.37.122 | SUCCESS | rc=0 &gt;&gt;<br>Tue Dec  5 15:58:21 CST 2017<br>Filesystem      Size  Used Avail Use% Mounted on<br>/dev/sda2        47G  4.4G   43G  10% /<br>devtmpfs        978M     0  978M   0% /dev<br>tmpfs           993M   84K  993M   1% /dev/shm<br>tmpfs           993M  9.1M  984M   1% /run<br>tmpfs           993M     0  993M   0% /sys/fs/cgroup<br>/dev/sda3        47G   33M   47G   1% /app<br>/dev/sda1       950M  153M  798M  17% /boot<br>tmpfs           199M   16K  199M   1% /run/user/42<br>tmpfs           199M     0  199M   0% /run/user/0<br><br>192.168.37.133 | SUCCESS | rc=0 &gt;&gt;<br>Tue Dec  5 15:58:21 CST 2017<br>Filesystem      Size  Used Avail Use% Mounted on<br>/dev/sda2        46G  4.1G   40G  10% /<br>devtmpfs        898M     0  898M   0% /dev<br>tmpfs           912M   84K  912M   1% /dev/shm<br>tmpfs           912M  9.0M  903M   1% /run<br>tmpfs           912M     0  912M   0% /sys/fs/cgroup<br>/dev/sda3       3.7G   15M  3.4G   1% /app<br>/dev/sda1       1.9G  141M  1.6G   9% /boot<br>tmpfs           183M   16K  183M   1% /run/user/42<br>tmpfs           183M     0  183M   0% /run/user/0<br></code></pre></td></tr></table></figure>

<p>　　可以看出已经执行成功了。</p>
<h3 id="13）setup-模块"><a href="#13）setup-模块" class="headerlink" title="13）setup 模块"></a>13）setup 模块</h3><p>　　该模块主要用于收集信息，是通过调用facts组件来实现的。<br>　　facts组件是Ansible用于采集被管机器设备信息的一个功能，我们可以使用setup模块查机器的所有facts信息，可以使用filter来查看指定信息。整个facts信息被包装在一个JSON格式的数据结构中，ansible_facts是最上层的值。<br>　　facts就是变量，内建变量 。每个主机的各种信息，cpu颗数、内存大小等。会存在facts中的某个变量中。调用后返回很多对应主机的信息，在后面的操作中可以根据不同的信息来做不同的操作。如redhat系列用yum安装，而debian系列用apt来安装软件。<br><strong>① 查看信息</strong><br>　　我们可以直接用命令获取到变量的值，具体我们来看看例子：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@server</span> <span class="hljs-string">~</span>]<span class="hljs-comment"># ansible web -m setup -a &#x27;filter=&quot;*mem*&quot;&#x27;	#查看内存</span><br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.122</span> <span class="hljs-string">|</span> <span class="hljs-string">SUCCESS</span> <span class="hljs-string">=&gt;</span> &#123;<br>    <span class="hljs-attr">&quot;ansible_facts&quot;:</span> &#123;<br>        <span class="hljs-attr">&quot;ansible_memfree_mb&quot;:</span> <span class="hljs-number">1116</span>, <br>        <span class="hljs-attr">&quot;ansible_memory_mb&quot;:</span> &#123;<br>            <span class="hljs-attr">&quot;nocache&quot;:</span> &#123;<br>                <span class="hljs-attr">&quot;free&quot;:</span> <span class="hljs-number">1397</span>, <br>                <span class="hljs-attr">&quot;used&quot;:</span> <span class="hljs-number">587</span><br>            &#125;, <br>            <span class="hljs-attr">&quot;real&quot;:</span> &#123;<br>                <span class="hljs-attr">&quot;free&quot;:</span> <span class="hljs-number">1116</span>, <br>                <span class="hljs-attr">&quot;total&quot;:</span> <span class="hljs-number">1984</span>, <br>                <span class="hljs-attr">&quot;used&quot;:</span> <span class="hljs-number">868</span><br>            &#125;, <br>            <span class="hljs-attr">&quot;swap&quot;:</span> &#123;<br>                <span class="hljs-attr">&quot;cached&quot;:</span> <span class="hljs-number">0</span>, <br>                <span class="hljs-attr">&quot;free&quot;:</span> <span class="hljs-number">3813</span>, <br>                <span class="hljs-attr">&quot;total&quot;:</span> <span class="hljs-number">3813</span>, <br>                <span class="hljs-attr">&quot;used&quot;:</span> <span class="hljs-number">0</span><br>            &#125;<br>        &#125;, <br>        <span class="hljs-attr">&quot;ansible_memtotal_mb&quot;:</span> <span class="hljs-number">1984</span><br>    &#125;, <br>    <span class="hljs-attr">&quot;changed&quot;:</span> <span class="hljs-literal">false</span><br>&#125;<br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.133</span> <span class="hljs-string">|</span> <span class="hljs-string">SUCCESS</span> <span class="hljs-string">=&gt;</span> &#123;<br>    <span class="hljs-attr">&quot;ansible_facts&quot;:</span> &#123;<br>        <span class="hljs-attr">&quot;ansible_memfree_mb&quot;:</span> <span class="hljs-number">1203</span>, <br>        <span class="hljs-attr">&quot;ansible_memory_mb&quot;:</span> &#123;<br>            <span class="hljs-attr">&quot;nocache&quot;:</span> &#123;<br>                <span class="hljs-attr">&quot;free&quot;:</span> <span class="hljs-number">1470</span>, <br>                <span class="hljs-attr">&quot;used&quot;:</span> <span class="hljs-number">353</span><br>            &#125;, <br>            <span class="hljs-attr">&quot;real&quot;:</span> &#123;<br>                <span class="hljs-attr">&quot;free&quot;:</span> <span class="hljs-number">1203</span>, <br>                <span class="hljs-attr">&quot;total&quot;:</span> <span class="hljs-number">1823</span>, <br>                <span class="hljs-attr">&quot;used&quot;:</span> <span class="hljs-number">620</span><br>            &#125;, <br>            <span class="hljs-attr">&quot;swap&quot;:</span> &#123;<br>                <span class="hljs-attr">&quot;cached&quot;:</span> <span class="hljs-number">0</span>, <br>                <span class="hljs-attr">&quot;free&quot;:</span> <span class="hljs-number">3813</span>, <br>                <span class="hljs-attr">&quot;total&quot;:</span> <span class="hljs-number">3813</span>, <br>                <span class="hljs-attr">&quot;used&quot;:</span> <span class="hljs-number">0</span><br>            &#125;<br>        &#125;, <br>        <span class="hljs-attr">&quot;ansible_memtotal_mb&quot;:</span> <span class="hljs-number">1823</span><br>    &#125;, <br>    <span class="hljs-attr">&quot;changed&quot;:</span> <span class="hljs-literal">false</span><br>&#125;<br></code></pre></td></tr></table></figure>

<p>　　我们可以通过命令查看一下内存的大小以确认一下是否一致：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@server</span> <span class="hljs-string">~</span>]<span class="hljs-comment"># ansible web -m shell -a &#x27;free -m&#x27;</span><br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.122</span> <span class="hljs-string">|</span> <span class="hljs-string">SUCCESS</span> <span class="hljs-string">|</span> <span class="hljs-string">rc=0</span> <span class="hljs-string">&gt;&gt;</span><br>              <span class="hljs-string">total</span>        <span class="hljs-string">used</span>        <span class="hljs-string">free</span>      <span class="hljs-string">shared</span>  <span class="hljs-string">buff/cache</span>   <span class="hljs-string">available</span><br><span class="hljs-attr">Mem:</span>           <span class="hljs-number">1984         </span><span class="hljs-number">404</span>        <span class="hljs-number">1122           </span><span class="hljs-number">9</span>         <span class="hljs-number">457</span>        <span class="hljs-number">1346</span><br><span class="hljs-attr">Swap:</span>          <span class="hljs-number">3813           </span><span class="hljs-number">0</span>        <span class="hljs-number">3813</span><br><br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.133</span> <span class="hljs-string">|</span> <span class="hljs-string">SUCCESS</span> <span class="hljs-string">|</span> <span class="hljs-string">rc=0</span> <span class="hljs-string">&gt;&gt;</span><br>              <span class="hljs-string">total</span>        <span class="hljs-string">used</span>        <span class="hljs-string">free</span>      <span class="hljs-string">shared</span>  <span class="hljs-string">buff/cache</span>   <span class="hljs-string">available</span><br><span class="hljs-attr">Mem:</span>           <span class="hljs-number">1823         </span><span class="hljs-number">292</span>        <span class="hljs-number">1207           </span><span class="hljs-number">9</span>         <span class="hljs-number">323</span>        <span class="hljs-number">1351</span><br><span class="hljs-attr">Swap:</span>          <span class="hljs-number">3813           </span><span class="hljs-number">0</span>        <span class="hljs-number">3813</span><br></code></pre></td></tr></table></figure>

<p>　　可以看出信息是一致的。<br><strong>② 保存信息</strong><br>　　我们的setup模块还有一个很好用的功能就是可以保存我们所筛选的信息至我们的主机上，同时，文件名为我们被管制的主机的IP，这样方便我们知道是哪台机器出的问题。<br>　　我们可以看一看例子：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@server</span> <span class="hljs-string">tmp</span>]<span class="hljs-comment"># ansible web -m setup -a &#x27;filter=&quot;*mem*&quot;&#x27; --tree /tmp/facts</span><br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.122</span> <span class="hljs-string">|</span> <span class="hljs-string">SUCCESS</span> <span class="hljs-string">=&gt;</span> &#123;<br>    <span class="hljs-attr">&quot;ansible_facts&quot;:</span> &#123;<br>        <span class="hljs-attr">&quot;ansible_memfree_mb&quot;:</span> <span class="hljs-number">1115</span>, <br>        <span class="hljs-attr">&quot;ansible_memory_mb&quot;:</span> &#123;<br>            <span class="hljs-attr">&quot;nocache&quot;:</span> &#123;<br>                <span class="hljs-attr">&quot;free&quot;:</span> <span class="hljs-number">1396</span>, <br>                <span class="hljs-attr">&quot;used&quot;:</span> <span class="hljs-number">588</span><br>            &#125;, <br>            <span class="hljs-attr">&quot;real&quot;:</span> &#123;<br>                <span class="hljs-attr">&quot;free&quot;:</span> <span class="hljs-number">1115</span>, <br>                <span class="hljs-attr">&quot;total&quot;:</span> <span class="hljs-number">1984</span>, <br>                <span class="hljs-attr">&quot;used&quot;:</span> <span class="hljs-number">869</span><br>            &#125;, <br>            <span class="hljs-attr">&quot;swap&quot;:</span> &#123;<br>                <span class="hljs-attr">&quot;cached&quot;:</span> <span class="hljs-number">0</span>, <br>                <span class="hljs-attr">&quot;free&quot;:</span> <span class="hljs-number">3813</span>, <br>                <span class="hljs-attr">&quot;total&quot;:</span> <span class="hljs-number">3813</span>, <br>                <span class="hljs-attr">&quot;used&quot;:</span> <span class="hljs-number">0</span><br>            &#125;<br>        &#125;, <br>        <span class="hljs-attr">&quot;ansible_memtotal_mb&quot;:</span> <span class="hljs-number">1984</span><br>    &#125;, <br>    <span class="hljs-attr">&quot;changed&quot;:</span> <span class="hljs-literal">false</span><br>&#125;<br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.133</span> <span class="hljs-string">|</span> <span class="hljs-string">SUCCESS</span> <span class="hljs-string">=&gt;</span> &#123;<br>    <span class="hljs-attr">&quot;ansible_facts&quot;:</span> &#123;<br>        <span class="hljs-attr">&quot;ansible_memfree_mb&quot;:</span> <span class="hljs-number">1199</span>, <br>        <span class="hljs-attr">&quot;ansible_memory_mb&quot;:</span> &#123;<br>            <span class="hljs-attr">&quot;nocache&quot;:</span> &#123;<br>                <span class="hljs-attr">&quot;free&quot;:</span> <span class="hljs-number">1467</span>, <br>                <span class="hljs-attr">&quot;used&quot;:</span> <span class="hljs-number">356</span><br>            &#125;, <br>            <span class="hljs-attr">&quot;real&quot;:</span> &#123;<br>                <span class="hljs-attr">&quot;free&quot;:</span> <span class="hljs-number">1199</span>, <br>                <span class="hljs-attr">&quot;total&quot;:</span> <span class="hljs-number">1823</span>, <br>                <span class="hljs-attr">&quot;used&quot;:</span> <span class="hljs-number">624</span><br>            &#125;, <br>            <span class="hljs-attr">&quot;swap&quot;:</span> &#123;<br>                <span class="hljs-attr">&quot;cached&quot;:</span> <span class="hljs-number">0</span>, <br>                <span class="hljs-attr">&quot;free&quot;:</span> <span class="hljs-number">3813</span>, <br>                <span class="hljs-attr">&quot;total&quot;:</span> <span class="hljs-number">3813</span>, <br>                <span class="hljs-attr">&quot;used&quot;:</span> <span class="hljs-number">0</span><br>            &#125;<br>        &#125;, <br>        <span class="hljs-attr">&quot;ansible_memtotal_mb&quot;:</span> <span class="hljs-number">1823</span><br>    &#125;, <br>    <span class="hljs-attr">&quot;changed&quot;:</span> <span class="hljs-literal">false</span><br>&#125;<br></code></pre></td></tr></table></figure>

<p>　　然后我们可以去查看一下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@server</span> <span class="hljs-string">~</span>]<span class="hljs-comment"># cd /tmp/facts/</span><br>[<span class="hljs-string">root@server</span> <span class="hljs-string">facts</span>]<span class="hljs-comment"># ls</span><br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.122</span>  <span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.133</span><br>[<span class="hljs-string">root@server</span> <span class="hljs-string">facts</span>]<span class="hljs-comment"># cat 192.168.37.122 </span><br>&#123;<span class="hljs-attr">&quot;ansible_facts&quot;:</span> &#123;<span class="hljs-attr">&quot;ansible_memfree_mb&quot;:</span> <span class="hljs-number">1115</span>, <span class="hljs-attr">&quot;ansible_memory_mb&quot;:</span> &#123;<span class="hljs-attr">&quot;nocache&quot;:</span> &#123;<span class="hljs-attr">&quot;free&quot;:</span> <span class="hljs-number">1396</span>, <span class="hljs-attr">&quot;used&quot;:</span> <span class="hljs-number">588</span>&#125;, <span class="hljs-attr">&quot;real&quot;:</span> &#123;<span class="hljs-attr">&quot;free&quot;:</span> <span class="hljs-number">1115</span>, <span class="hljs-attr">&quot;total&quot;:</span> <span class="hljs-number">1984</span>, <span class="hljs-attr">&quot;used&quot;:</span> <span class="hljs-number">869</span>&#125;, <span class="hljs-attr">&quot;swap&quot;:</span> &#123;<span class="hljs-attr">&quot;cached&quot;:</span> <span class="hljs-number">0</span>, <span class="hljs-attr">&quot;free&quot;:</span> <span class="hljs-number">3813</span>, <span class="hljs-attr">&quot;total&quot;:</span> <span class="hljs-number">3813</span>, <span class="hljs-attr">&quot;used&quot;:</span> <span class="hljs-number">0</span>&#125;&#125;, <span class="hljs-attr">&quot;ansible_memtotal_mb&quot;:</span> <span class="hljs-number">1984</span>&#125;, <span class="hljs-attr">&quot;changed&quot;:</span> <span class="hljs-literal">false</span>&#125;<br></code></pre></td></tr></table></figure>

<hr>
<p><a href="https://www.msft.vip/2023/01/31/Ansible-Detailed-Tutorial-II/">Ansible-Detailed-Tutorial-II</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>ansible</tag>
      </tags>
  </entry>
  <entry>
    <title>Ansible Detailed Tutorial II</title>
    <url>/2023/01/31-Ansible-Detailed-Tutorial-II/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=400 height=86 src="//music.163.com/outchain/player?type=2&id=5113327&auto=1&height=66"></iframe>
---

<h2 id="Ansible-playbook-简介"><a href="#Ansible-playbook-简介" class="headerlink" title="Ansible playbook 简介"></a>Ansible playbook 简介</h2><p>　　<strong>playbook 是 ansible 用于配置，部署，和管理被控节点的剧本。</strong><br>　　通过 playbook 的详细描述，执行其中的一系列 tasks ，可以让远端主机达到预期的状态。playbook 就像 Ansible 控制器给被控节点列出的的一系列 to-do-list ，而被控节点必须要完成。<br>　　也可以这么理解，playbook 字面意思，即剧本，现实中由演员按照剧本表演，在Ansible中，这次由计算机进行表演，由计算机安装，部署应用，提供对外服务，以及组织计算机处理各种各样的事情。</p>
<h2 id="Ansible-playbook使用场景"><a href="#Ansible-playbook使用场景" class="headerlink" title="Ansible playbook使用场景"></a>Ansible playbook使用场景</h2><p>　　执行一些简单的任务，使用ad-hoc命令可以方便的解决问题，但是有时一个设施过于复杂，需要大量的操作时候，执行的ad-hoc命令是不适合的，这时最好使用playbook。<br>　　就像执行shell命令与写shell脚本一样，也可以理解为批处理任务，不过playbook有自己的语法格式。<br>　　使用playbook你可以方便的重用这些代码，可以移植到不同的机器上面，像函数一样，最大化的利用代码。在你使用Ansible的过程中，你也会发现，你所处理的大部分操作都是编写playbook。可以把常见的应用都编写成playbook，之后管理服务器会变得十分简单。</p>
<h2 id="Ansible-playbook格式"><a href="#Ansible-playbook格式" class="headerlink" title="Ansible playbook格式"></a>Ansible playbook格式</h2><h3 id="1）格式简介"><a href="#1）格式简介" class="headerlink" title="1）格式简介"></a>1）格式简介</h3><p>　　<strong>playbook由YMAL语言编写。</strong>YAML( &#x2F;ˈjæməl&#x2F; )参考了其他多种语言，包括：XML、C语言、Python、Perl以及电子邮件格式RFC2822，Clark Evans在2001年5月在首次发表了这种语言，另外Ingy döt Net与OrenBen-Kiki也是这语言的共同设计者。<br>　　YMAL格式是类似于JSON的文件格式，便于人理解和阅读，同时便于书写。首先学习了解一下YMAL的格式，对我们后面书写playbook很有帮助。以下为playbook常用到的YMAL格式：<br>　　1、文件的第一行应该以 “—“ (三个连字符)开始，表明YMAL文件的开始。<br>　　2、在同一行中，#之后的内容表示注释，类似于shell，python和ruby。<br>　　3、YMAL中的列表元素以”-”开头然后紧跟着一个空格，后面为元素内容。<br>　　4、同一个列表中的元素应该保持相同的缩进。否则会被当做错误处理。<br>　　5、play中hosts，variables，roles，tasks等对象的表示方法都是键值中间以”:”分隔表示，”:”后面还要增加一个空格。<br>　　下面是一个举例：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-comment">#安装与运行mysql服务</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">node1</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">tasks:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span> <span class="hljs-string">mysql-server</span> <span class="hljs-string">package</span><br>      <span class="hljs-attr">yum:</span> <span class="hljs-string">name=mysql-server</span> <span class="hljs-string">state=present</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">starting</span> <span class="hljs-string">mysqld</span> <span class="hljs-string">service</span><br>      <span class="hljs-attr">service:</span> <span class="hljs-string">name=mysql</span> <span class="hljs-string">state=started</span><br></code></pre></td></tr></table></figure>

<p>　　我们的文件名称应该以<code>.yml</code>结尾，像我们上面的例子就是<code>mysql.yml</code>。其中，有三个部分组成：</p>
<blockquote>
<p><code>host部分</code>：使用 hosts 指示使用哪个主机或主机组来运行下面的 tasks ，每个 playbook 都必须指定 hosts ，hosts也<strong>可以使用通配符格式</strong>。主机或主机组在 inventory 清单中指定，可以使用系统默认的<code>/etc/ansible/hosts</code>，也可以自己编辑，在运行的时候加上<code>-i</code>选项，指定清单的位置即可。在运行清单文件的时候，<code>–list-hosts</code>选项会显示那些主机将会参与执行 task 的过程中。<br><code>remote_user</code>：指定远端主机中的哪个用户来登录远端系统，在远端系统执行 task 的用户，可以任意指定，也可以使用 sudo，但是用户必须要有执行相应 task 的权限。<br><code>tasks</code>：指定远端主机将要执行的一系列动作。tasks 的核心为 ansible 的模块，前面已经提到模块的用法。tasks 包含 <code>name</code> 和<code>要执行的模块</code>，name 是可选的，只是为了便于用户阅读，不过还是建议加上去，模块是必须的，同时也要给予模块相应的参数。</p>
</blockquote>
<p>　　使用ansible-playbook运行playbook文件，得到如下输出信息，输出内容为JSON格式。并且由不同颜色组成，便于识别。一般而言<br>| 绿色代表执行成功，系统保持原样<br>| 黄色代表系统代表系统状态发生改变<br>| 红色代表执行失败，显示错误输出<br>　　执行有三个步骤：1、收集facts 2、执行tasks 3、报告结果<br><img src="/../images/1204916-20171208112235999-1825222840.png" alt="img"></p>
<h3 id="2）核心元素"><a href="#2）核心元素" class="headerlink" title="2）核心元素"></a>2）核心元素</h3><p>　　Playbook的核心元素：</p>
<ul>
<li><code>Hosts</code>：主机组；</li>
<li><code>Tasks</code>：任务列表</li>
<li><code>Variables</code>：变量，设置方式有四种；</li>
<li><code>Templates</code>：包含了模板语法的文本文件；</li>
<li><code>Handlers</code>：由特定条件触发的任务</li>
</ul>
<h3 id="3）基本组件"><a href="#3）基本组件" class="headerlink" title="3）基本组件"></a>3）基本组件</h3><p>Playbooks配置文件的基础组件：</p>
<p><code>Hosts</code>：运行指定任务的目标主机<br><code>remoute_user</code>：在远程主机上执行任务的用户；<br><code>sudo_user</code>：<br><code>tasks</code>：任务列表</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 格式：</span><br>　　　　<span class="hljs-string">tasks：</span><br>　　　　　　<span class="hljs-string">–</span> <span class="hljs-attr">name:</span> <span class="hljs-string">TASK_NAME</span><br>　　　　　　 <span class="hljs-attr">module:</span> <span class="hljs-string">arguments</span><br>　　　　　　 <span class="hljs-attr">notify:</span> <span class="hljs-string">HANDLER_NAME</span><br>　　　　　　 <span class="hljs-attr">handlers:</span><br>　　　　　　<span class="hljs-string">–</span> <span class="hljs-attr">name:</span> <span class="hljs-string">HANDLER_NAME</span><br>　　　　　　 <span class="hljs-attr">module:</span> <span class="hljs-string">arguments</span><br></code></pre></td></tr></table></figure>

<p><code>模块</code>，模块参数,格式：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">action: module arguments<br>module: arguments<br><span class="hljs-comment"># 注意：shell和command模块后面直接跟命令，而非key=value类的参数列表　　</span><br></code></pre></td></tr></table></figure>

<p><code>handlers</code>：任务，在特定条件下触发；接收到其它任务的通知时被触发；</p>
<ul>
<li>某任务的状态在运行后为changed时，可通过“notify”通知给相应的handlers；</li>
<li>任务可以通过“tags“打标签，而后可在ansible-playbook命令上使用-t指定进行调用；</li>
</ul>
<h4 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h4><p><strong>① 定义playbook</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@server</span> <span class="hljs-string">~</span>]<span class="hljs-comment"># cd /etc/ansible</span><br>[<span class="hljs-string">root@server</span> <span class="hljs-string">ansible</span>]<span class="hljs-comment"># vim nginx.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">web</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">tasks:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span> <span class="hljs-string">nginx</span><br>      <span class="hljs-attr">yum:</span> <span class="hljs-string">name=nginx</span> <span class="hljs-string">state=present</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">copy</span> <span class="hljs-string">nginx.conf</span><br>      <span class="hljs-attr">copy:</span> <span class="hljs-string">src=/tmp/nginx.conf</span> <span class="hljs-string">dest=/etc/nginx/nginx.conf</span> <span class="hljs-string">backup=yes</span><br>      <span class="hljs-attr">notify:</span> <span class="hljs-string">reload</span>　　　　<span class="hljs-comment">#当nginx.conf发生改变时，通知给相应的handlers</span><br>      <span class="hljs-attr">tags:</span> <span class="hljs-string">reloadnginx</span>　　　<span class="hljs-comment">#打标签</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">start</span> <span class="hljs-string">nginx</span> <span class="hljs-string">service</span><br>      <span class="hljs-attr">service:</span> <span class="hljs-string">name=nginx</span> <span class="hljs-string">state=started</span><br>      <span class="hljs-attr">tags:</span> <span class="hljs-string">startnginx</span>　　　<span class="hljs-comment">#打标签</span><br><br>  <span class="hljs-string">handlers:</span>　　<span class="hljs-comment">#注意，前面没有-，是两个空格</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">reload</span><br>      <span class="hljs-attr">service:</span> <span class="hljs-string">name=nginx</span> <span class="hljs-string">state=restarted</span>　　<span class="hljs-comment">#为了在进程中能看出来</span><br></code></pre></td></tr></table></figure>

<p><strong>② 测试运行结果</strong><br>　　写完了以后，我们就可以运行了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@server ansible]<span class="hljs-comment"># ansible-playbook nginx.yml</span><br></code></pre></td></tr></table></figure>

<p><img src="/../images/1204916-20171208112249906-1356198395.png" alt="img"><br>　　现在我们可以看看两台机器的端口是否开启：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@server ansible]<span class="hljs-comment"># ansible web -m shell -a &#x27;ss -nutlp |grep nginx&#x27;</span><br>192.168.37.122 | SUCCESS | rc=0 &gt;&gt;<br>tcp    LISTEN     0      128       *:80                    *:*                   <span class="hljs-built_in">users</span>:((&quot;nginx&quot;,pid=<span class="hljs-number">8304</span>,fd=<span class="hljs-number">6</span>),(&quot;nginx&quot;,pid=<span class="hljs-number">8303</span>,fd=<span class="hljs-number">6</span>))<br><br>192.168.37.133 | SUCCESS | rc=0 &gt;&gt;<br>tcp    LISTEN     0      128       *:80                    *:*                   <span class="hljs-built_in">users</span>:((&quot;nginx&quot;,pid=<span class="hljs-number">9671</span>,fd=<span class="hljs-number">6</span>),(&quot;nginx&quot;,pid=<span class="hljs-number">9670</span>,fd=<span class="hljs-number">6</span>))<br></code></pre></td></tr></table></figure>

<p><strong>③ 测试标签</strong><br>　　我们在里面已经打上了一个标签，所以可以直接引用标签。但是我们需要先把服务关闭，再来运行剧本并引用标签：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@server ansible]<span class="hljs-comment"># ansible web -m shell -a &#x27;systemctl stop nginx&#x27;</span><br>[root@server ansible]<span class="hljs-comment"># ansible-playbook nginx.yml -t startnginx</span><br></code></pre></td></tr></table></figure>

<p><img src="/../images/1204916-20171208112258687-1002351873.png" alt="img"><br><strong>④ 测试notify</strong><br>　　我们还做了一个<code>notify</code>，来测试一下：<br>　　首先，它的触发条件是配置文件被改变，所以我们去把配置文件中的端口改一下：</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><code class="hljs perl">[root@server ansible]<span class="hljs-comment"># vim /tmp/nginx.conf</span><br>	<span class="hljs-keyword">listen</span>       <span class="hljs-number">8080</span>;<br></code></pre></td></tr></table></figure>

<p>　　然后我们重新加载一下这个剧本：<br><img src="/../images/1204916-20171208112308109-1548774386.png" alt="img"><br>　　发现我们执行的就是reload段以及我们定义的<code>notify</code>部分。<br>　　我们来看一看我们的端口号：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@server ansible]<span class="hljs-comment"># ansible web -m shell -a &#x27;ss -ntlp | grep nginx&#x27;</span><br>192.168.37.122 | SUCCESS | rc=0 &gt;&gt;<br>LISTEN     0      128          *:8080                     *:*                   <span class="hljs-built_in">users</span>:((&quot;nginx&quot;,pid=<span class="hljs-number">2097</span>,fd=<span class="hljs-number">6</span>),(&quot;nginx&quot;,pid=<span class="hljs-number">2096</span>,fd=<span class="hljs-number">6</span>))<br><br>192.168.37.133 | SUCCESS | rc=0 &gt;&gt;<br>LISTEN     0      128          *:8080                     *:*                   <span class="hljs-built_in">users</span>:((&quot;nginx&quot;,pid=<span class="hljs-number">3061</span>,fd=<span class="hljs-number">6</span>),(&quot;nginx&quot;,pid=<span class="hljs-number">3060</span>,fd=<span class="hljs-number">6</span>))<br></code></pre></td></tr></table></figure>

<p>　　可以看出，我们的nginx端口已经变成了8080。
　　</p>
<h3 id="4）variables-部分"><a href="#4）variables-部分" class="headerlink" title="4）variables 部分"></a>4）variables 部分</h3><p>　　上文中，我们说到了<code>variables</code>是变量，有四种定义方法，现在我们就来说说这四种定义方法：</p>
<h4 id="①-facts-：可直接调用"><a href="#①-facts-：可直接调用" class="headerlink" title="① facts ：可直接调用"></a>① facts ：可直接调用</h4><p>　　上一篇中，我们有说到<code>setup</code>这个模块，这个模块就是通过调用facts组件来实现的。我们这里的<code>variables</code>也可以直接调用<code>facts</code>组件。<br>　　具体的<code>facters</code>我们可以使用<code>setup</code>模块来获取，然后直接放入我们的剧本中调用即可。</p>
<h4 id="②-用户自定义变量"><a href="#②-用户自定义变量" class="headerlink" title="② 用户自定义变量"></a>② 用户自定义变量</h4><p>　　我们也可以直接使用用户自定义变量，想要自定义变量有以下两种方式：</p>
<blockquote>
<p>通过命令行传入</p>
</blockquote>
<p>　　<code>ansible-playbook</code>命令的命令行中的<code>-e VARS, --extra-vars=VARS</code>，这样就可以直接把自定义的变量传入。</p>
<blockquote>
<p>在playbook中定义变量</p>
</blockquote>
<p>　　我们也可以直接在playbook中定义我们的变量：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">vars:</span><br>　　<span class="hljs-bullet">-</span> <span class="hljs-attr">var1:</span> <span class="hljs-string">value1</span><br>　　<span class="hljs-bullet">-</span> <span class="hljs-attr">var2:</span> <span class="hljs-string">value2</span><br></code></pre></td></tr></table></figure>

<h5 id="举例-1"><a href="#举例-1" class="headerlink" title="举例"></a>举例</h5><p><strong>① 定义剧本</strong><br>　　我们就使用全局替换把我们刚刚编辑的文件修改一下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@server ansible]<span class="hljs-comment"># vim nginx.yml</span><br></code></pre></td></tr></table></figure>

<p><img src="/../images/1204916-20171208112328234-1706127649.png" alt="img"><br><img src="/../images/1204916-20171208112334765-1675703855.png" alt="img"><br>　　这样一来，我们的剧本就定义完成了。<br><strong>② 拷贝配置文件</strong><br>　　我们想要在被监管的机器上安装什么服务的话，就直接在我们的server端上把该服务的配置文件拷贝到我们的<code>/tmp/</code>目录下。这样我们的剧本才能正常运行。<br>　　我们就以<code>keepalived</code>服务为例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@server ansible]<span class="hljs-comment"># cp /etc/keepalived/keepalived.conf /tmp/keepalived.conf</span><br></code></pre></td></tr></table></figure>

<p><strong>③ 运行剧本，变量由命令行传入</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@server ansible]<span class="hljs-comment"># ansible-playbook nginx.yml -e rpmname=keepalived</span><br></code></pre></td></tr></table></figure>

<p><img src="/../images/1204916-20171208112345843-507673332.png" alt="img"><br><strong>④ 修改剧本，直接定义变量</strong><br>　　同样的，我们可以直接在剧本中把变量定义好，这样就不需要在通过命令行传入了。以后想要安装不同的服务，直接在剧本里把变量修改一下即可。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@server ansible]<span class="hljs-comment"># vim nginx.yml</span><br></code></pre></td></tr></table></figure>

<p><img src="/../images/1204916-20171208112356562-1275040347.png" alt="img"><br><strong>⑤ 运行定义过变量的剧本</strong><br>　　我们刚刚已经把变量定义在剧本里面了。现在我们来运行一下试试看：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@server ansible]<span class="hljs-comment"># ansible-playbook nginx.yml</span><br></code></pre></td></tr></table></figure>

<p><img src="/../images/1204916-20171208112404531-432662099.png" alt="img"><br>　　发现这样也是可以的~</p>
<h4 id="③-通过roles传递变量"><a href="#③-通过roles传递变量" class="headerlink" title="③ 通过roles传递变量"></a>③ 通过roles传递变量</h4><p>　　具体的，我们下文中说到 roles 的时候再详细说明。这里是<a href="https://www.cnblogs.com/keerya/p/8004566.html#jump">传送带</a>
　　</p>
<h4 id="④-Host-Inventory"><a href="#④-Host-Inventory" class="headerlink" title="④ Host Inventory"></a>④ Host Inventory</h4><p>　　我们也可以直接在主机清单中定义。<br>　　定义的方法如下：</p>
<blockquote>
<p>向不同的主机传递不同的变量：</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">　　IP/HOSTNAME varaiable=value var2=value2<br></code></pre></td></tr></table></figure>

<blockquote>
<p>向组中的主机传递相同的变量：</p>
</blockquote>
<figure class="highlight ini"><table><tr><td class="code"><pre><code class="hljs ini">　　<span class="hljs-section">[groupname:vars]</span><br>　　<span class="hljs-attr">variable</span>=value<br></code></pre></td></tr></table></figure>

<h3 id="5）模板-templates"><a href="#5）模板-templates" class="headerlink" title="5）模板 templates"></a>5）模板 templates</h3><p>　　模板是一个文本文件，嵌套有脚本（使用模板编程语言编写）。<br>　　<code>Jinja2</code>：Jinja2是python的一种模板语言，以Django的模板语言为原本。<br>模板支持：</p>
<blockquote>
<p>　　字符串：使用单引号或双引号；<br>　　数字：整数，浮点数；<br>　　列表：[item1, item2, …]<br>　　元组：(item1, item2, …)<br>　　字典：{key1:value1, key2:value2, …}<br>　　布尔型：true&#x2F;false<br>　　算术运算：<br>　　　　+, -, *, &#x2F;, &#x2F;&#x2F;, %, **<br>　　比较操作：<br>　　　　&#x3D;&#x3D;, !&#x3D;, &gt;, &gt;&#x3D;, &lt;, &lt;&#x3D;<br>　　逻辑运算：<br>　　　　and, or, not</p>
</blockquote>
<p>　　通常来说，模板都是通过引用变量来运用的。</p>
<h4 id="举例-2"><a href="#举例-2" class="headerlink" title="举例"></a>举例</h4><p><strong>① 定义模板</strong><br>　　我们直接把之前定义的<code>/tmp/nginx.conf</code>改个名，然后编辑一下，就可以定义成我们的模板文件了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@server ansible]<span class="hljs-comment"># cd /tmp</span><br>[root@server tmp]<span class="hljs-comment"># mv nginx.conf nginx.conf.j2</span><br>[root@server tmp]<span class="hljs-comment"># vim nginx.conf.j2</span><br>	worker_processes  &#123;&#123; ansible_processor_vcpus &#125;&#125;;<br>	listen       &#123;&#123; nginxport &#125;&#125;;<br></code></pre></td></tr></table></figure>

<p><strong>② 修改剧本</strong><br>　　我们现在需要去修改剧本来定义变量：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@server ansible]<span class="hljs-comment"># vim nginx.yml</span><br></code></pre></td></tr></table></figure>

<p><img src="/../images/1204916-20171208112442234-829367844.png" alt="img"><br>　　需要修改的部分如图所示。<br><strong>③ 运行剧本</strong><br>　　上面的准备工作完成后，我们就可以去运行剧本了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@server ansible]<span class="hljs-comment"># ansible-playbook nginx.yml -t reloadnginx</span><br><br>PLAY [web] *********************************************************************<br><br>TASK [setup] *******************************************************************<br>ok: [192.168.37.122]<br>ok: [192.168.37.133]<br><br>TASK [copy nginx.conf] *********************************************************<br>ok: [192.168.37.122]<br>ok: [192.168.37.133]<br><br>PLAY RECAP *********************************************************************<br>192.168.37.122             : ok=2    changed=0    unreachable=0    failed=0   <br>192.168.37.133             : ok=2    changed=0    unreachable=0    failed=0 <br></code></pre></td></tr></table></figure>

<h3 id="6）条件测试"><a href="#6）条件测试" class="headerlink" title="6）条件测试"></a>6）条件测试</h3><p>when语句：在task中使用，jinja2的语法格式。<br>举例如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">tasks:</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span> <span class="hljs-string">conf</span> <span class="hljs-string">file</span> <span class="hljs-string">to</span> <span class="hljs-string">centos7</span><br>  <span class="hljs-attr">template:</span> <span class="hljs-string">src=files/nginx.conf.c7.j2</span><br>  <span class="hljs-attr">when:</span> <span class="hljs-string">ansible_distribution_major_version</span> <span class="hljs-string">==</span> <span class="hljs-string">&quot;7&quot;</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span> <span class="hljs-string">conf</span> <span class="hljs-string">file</span> <span class="hljs-string">to</span> <span class="hljs-string">centos6</span><br>  <span class="hljs-attr">template:</span> <span class="hljs-string">src=files/nginx.conf.c6.j2</span><br>  <span class="hljs-attr">when:</span> <span class="hljs-string">ansible_distribution_major_version</span> <span class="hljs-string">==</span> <span class="hljs-string">&quot;6&quot;</span><br></code></pre></td></tr></table></figure>

<p>循环：迭代，需要重复执行的任务；<br>　　对迭代项的引用，固定变量名为”item”，而后，要在task中使用with_items给定要迭代的元素列表；<br>举例如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">tasks:</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">unstall</span> <span class="hljs-string">web</span> <span class="hljs-string">packages</span><br>  <span class="hljs-attr">yum:</span> <span class="hljs-string">name=&#123;&#123;</span> <span class="hljs-string">item</span> <span class="hljs-string">&#125;&#125;</span> <span class="hljs-string">state=absent</span><br>  <span class="hljs-attr">with_items:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">httpd</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">php</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">php-mysql</span><br></code></pre></td></tr></table></figure>

<h3 id="7）字典"><a href="#7）字典" class="headerlink" title="7）字典"></a>7）字典</h3><p>　　ansible playbook 还支持字典功能。举例如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span> <span class="hljs-string">some</span> <span class="hljs-string">packages</span><br>  <span class="hljs-attr">yum:</span> <span class="hljs-string">name=&#123;&#123;</span> <span class="hljs-string">item</span> <span class="hljs-string">&#125;&#125;</span> <span class="hljs-string">state=present</span><br>  <span class="hljs-attr">with_items:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">nginx</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">memcached</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">php-fpm</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">add</span> <span class="hljs-string">some</span> <span class="hljs-string">groups</span><br>  <span class="hljs-attr">group:</span> <span class="hljs-string">name=&#123;&#123;</span> <span class="hljs-string">item</span> <span class="hljs-string">&#125;&#125;</span> <span class="hljs-string">state=present</span><br>  <span class="hljs-attr">with_items:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">group11</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">group12</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">group13</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">add</span> <span class="hljs-string">some</span> <span class="hljs-string">users</span><br>  <span class="hljs-attr">user:</span> <span class="hljs-string">name=&#123;&#123;</span> <span class="hljs-string">item.name</span> <span class="hljs-string">&#125;&#125;</span> <span class="hljs-string">group=&#123;&#123;</span> <span class="hljs-string">item.group</span> <span class="hljs-string">&#125;&#125;</span> <span class="hljs-string">state=present</span><br>  <span class="hljs-attr">with_items:</span><br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;user11&#x27;</span>, <span class="hljs-attr">group:</span> <span class="hljs-string">&#x27;group11&#x27;</span> &#125;<br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;user12&#x27;</span>, <span class="hljs-attr">group:</span> <span class="hljs-string">&#x27;group12&#x27;</span> &#125;<br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;user13&#x27;</span>, <span class="hljs-attr">group:</span> <span class="hljs-string">&#x27;group13&#x27;</span> &#125;<br></code></pre></td></tr></table></figure>

<h3 id="8）角色订制：roles"><a href="#8）角色订制：roles" class="headerlink" title="8）角色订制：roles"></a>8）角色订制：roles</h3><h4 id="①-简介"><a href="#①-简介" class="headerlink" title="① 简介"></a>① 简介</h4><p>　　对于以上所有的方式有个弊端就是无法实现复用假设在同时部署Web、db、ha 时或不同服务器组合不同的应用就需要写多个yml文件。很难实现灵活的调用。<br>　　roles 用于层次性、结构化地组织playbook。roles 能够根据层次型结构自动装载变量文件、tasks以及handlers等。要使用roles只需要在playbook中使用include指令即可。简单来讲，roles就是通过分别将变量(vars)、文件(file)、任务(tasks)、模块(modules)及处理器(handlers)放置于单独的目录中，并可以便捷地include它们的一种机制。角色一般用于基于主机构建服务的场景中，但也可以是用于构建守护进程等场景中。</p>
<h4 id="②-角色集合"><a href="#②-角色集合" class="headerlink" title="② 角色集合"></a>② 角色集合</h4><p>角色集合：roles&#x2F;<br>mysql&#x2F;<br>httpd&#x2F;<br>nginx&#x2F;<br>files&#x2F;：存储由copy或script等模块调用的文件；<br>tasks&#x2F;：此目录中至少应该有一个名为main.yml的文件，用于定义各task；其它的文件需要由main.yml进行“包含”调用；<br>handlers&#x2F;：此目录中至少应该有一个名为main.yml的文件，用于定义各handler；其它的文件需要由main.yml进行“包含”调用；<br>vars&#x2F;：此目录中至少应该有一个名为main.yml的文件，用于定义各variable；其它的文件需要由main.yml进行“包含”调用；<br>templates&#x2F;：存储由template模块调用的模板文本；<br>meta&#x2F;：此目录中至少应该有一个名为main.yml的文件，定义当前角色的特殊设定及其依赖关系；其它的文件需要由main.yml进行“包含”调用；<br>default&#x2F;：此目录中至少应该有一个名为main.yml的文件，用于设定默认变量；</p>
<h4 id="③-角色定制实例"><a href="#③-角色定制实例" class="headerlink" title="③ 角色定制实例"></a>③ 角色定制实例</h4><p><strong>1. 在roles目录下生成对应的目录结构</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@server ansible]<span class="hljs-comment"># cd roles/</span><br>[root@server roles]<span class="hljs-comment"># ls</span><br>[root@server roles]<span class="hljs-comment"># mkdir -pv ./&#123;nginx,mysql,httpd&#125;/&#123;files,templates,vars,tasks,handlers,meta,default&#125;</span><br>[root@server roles]<span class="hljs-comment"># tree</span><br>.<br>├── httpd<br>│   ├── default<br>│   ├── files<br>│   ├── handlers<br>│   ├── meta<br>│   ├── tasks<br>│   ├── templates<br>│   └── vars<br>├── mysql<br>│   ├── default<br>│   ├── files<br>│   ├── handlers<br>│   ├── meta<br>│   ├── tasks<br>│   ├── templates<br>│   └── vars<br>└── nginx<br>    ├── default<br>    ├── files<br>    ├── handlers<br>    ├── meta<br>    ├── tasks<br>    ├── templates<br>    └── vars<br><br>24 directories, 0 files<br></code></pre></td></tr></table></figure>

<p><strong>2. 定义配置文件</strong><br>　　我们需要修改的配置文件为<code>/tasks/main.yml</code>，下面，我们就来修改一下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@server</span> <span class="hljs-string">roles</span>]<span class="hljs-comment"># vim nginx/tasks/main.yml</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">cp</span><br>  <span class="hljs-attr">copy:</span> <span class="hljs-string">src=nginx-1.10.2-1.el7.ngx.x86_64.rpm</span> <span class="hljs-string">dest=/tmp/nginx-1.10.2-1.el7.ngx.x86_64.rpm</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span><br>  <span class="hljs-attr">yum:</span> <span class="hljs-string">name=/tmp/nginx-1.10.2-1.el7.ngx.x86_64.rpm</span> <span class="hljs-string">state=latest</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">conf</span><br>  <span class="hljs-attr">template:</span> <span class="hljs-string">src=nginx.conf.j2</span> <span class="hljs-string">dest=/etc/nginx/nginx.conf</span><br>  <span class="hljs-attr">tags:</span> <span class="hljs-string">nginxconf</span><br>  <span class="hljs-attr">notify:</span> <span class="hljs-string">new</span> <span class="hljs-string">conf</span> <span class="hljs-string">to</span> <span class="hljs-string">reload</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">start</span> <span class="hljs-string">service</span><br>  <span class="hljs-attr">service:</span> <span class="hljs-string">name=nginx</span> <span class="hljs-string">state=started</span> <span class="hljs-string">enabled=true</span><br></code></pre></td></tr></table></figure>

<p><strong>3. 放置我们所需要的文件到指定目录</strong><br>　　因为我们定义的角色已经有了新的组成方式，所以我们需要把文件都放到指定的位置，这样，才能让配置文件找到这些并进行加载。<br>　　rpm包放在<code>files</code>目录下，模板放在<code>templates</code>目录下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@server nginx]<span class="hljs-comment"># cp /tmp/nginx-1.10.2-1.el7.ngx.x86_64.rpm ./files/</span><br>[root@server nginx]<span class="hljs-comment"># cp /tmp/nginx.conf.j2 ./templates/</span><br>[root@server nginx]<span class="hljs-comment"># tree</span><br>.<br>├── default<br>├── files<br>│   └── nginx-1.10.2-1.el7.ngx.x86_64.rpm<br>├── handlers<br>├── meta<br>├── tasks<br>│   └── main.yml<br>├── templates<br>│   └── nginx.conf.j2<br>└── vars<br><br>7 directories, 3 files<br></code></pre></td></tr></table></figure>

<p><strong>4. 修改变量文件</strong><br>　　我们在模板中定义的变量，也要去配置文件中加上：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@server</span> <span class="hljs-string">nginx</span>]<span class="hljs-comment"># vim vars/main.yml</span><br><span class="hljs-attr">nginxprot:</span> <span class="hljs-number">9999</span><br></code></pre></td></tr></table></figure>

<p><strong>5. 定义handlers文件</strong><br>　　我们在配置文件中定义了<code>notify</code>，所以我么也需要定义<code>handlers</code>，我们来修改配置文件：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@server</span> <span class="hljs-string">nginx</span>]<span class="hljs-comment"># vim handlers/main.yml</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">new</span> <span class="hljs-string">conf</span> <span class="hljs-string">to</span> <span class="hljs-string">reload</span><br>  <span class="hljs-attr">service:</span> <span class="hljs-string">name=nginx</span> <span class="hljs-string">state=restarted</span><br></code></pre></td></tr></table></figure>

<p><strong>6. 定义剧本文件</strong><br>　　接下来，我们就来定义剧本文件，由于大部分设置我们都单独配置在了roles里面，所以，接下来剧本就只需要写一点点内容即可：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@server</span> <span class="hljs-string">ansible</span>]<span class="hljs-comment"># vim roles.yml </span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">web</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">roles:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">nginx</span><br></code></pre></td></tr></table></figure>

<p><strong>7. 启动服务</strong><br>　　剧本定义完成以后，我们就可以来启动服务了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@server ansible]<span class="hljs-comment"># ansible-playbook roles.yml</span><br><br>PLAY [web] *********************************************************************<br><br>TASK [setup] *******************************************************************<br>ok: [192.168.37.122]<br>ok: [192.168.37.133]<br><br>TASK [nginx : <span class="hljs-built_in">cp</span>] **************************************************************<br>ok: [192.168.37.122]<br>ok: [192.168.37.133]<br><br>TASK [nginx : install] *********************************************************<br>changed: [192.168.37.122]<br>changed: [192.168.37.133]<br><br>TASK [nginx : conf] ************************************************************<br>changed: [192.168.37.122]<br>changed: [192.168.37.133]<br><br>TASK [nginx : start service] ***************************************************<br>changed: [192.168.37.122]<br>changed: [192.168.37.133]<br><br>RUNNING HANDLER [nginx : new conf to reload] ***********************************<br>changed: [192.168.37.122]<br>changed: [192.168.37.133]<br><br>PLAY RECAP *********************************************************************<br>192.168.37.122             : ok=6    changed=4    unreachable=0    failed=0   <br>192.168.37.133             : ok=6    changed=4    unreachable=0    failed=0   <br></code></pre></td></tr></table></figure>

<p>　　启动过后照例查看端口号：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@server ansible]<span class="hljs-comment"># ansible web -m shell -a &quot;ss -ntulp |grep 9999&quot;</span><br>192.168.37.122 | SUCCESS | rc=0 &gt;&gt;<br>tcp    LISTEN     0      128       *:9999                  *:*                   <span class="hljs-built_in">users</span>:((&quot;nginx&quot;,pid=<span class="hljs-number">7831</span>,fd=<span class="hljs-number">6</span>),(&quot;nginx&quot;,pid=<span class="hljs-number">7830</span>,fd=<span class="hljs-number">6</span>),(&quot;nginx&quot;,pid=<span class="hljs-number">7829</span>,fd=<span class="hljs-number">6</span>))<br><br>192.168.37.133 | SUCCESS | rc=0 &gt;&gt;<br>tcp    LISTEN     0      128       *:9999                  *:*                   <span class="hljs-built_in">users</span>:((&quot;nginx&quot;,pid=<span class="hljs-number">9654</span>,fd=<span class="hljs-number">6</span>),(&quot;nginx&quot;,pid=<span class="hljs-number">9653</span>,fd=<span class="hljs-number">6</span>),(&quot;nginx&quot;,pid=<span class="hljs-number">9652</span>,fd=<span class="hljs-number">6</span>))<br></code></pre></td></tr></table></figure>

<p>可以看出我们的剧本已经执行成功。</p>
<hr>
<p><a href="https://www.msft.vip/2023/01/31/Ansible-Detailed-Tutorial-I/">Ansible-Detailed-Tutorial-I</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>Setup webdav on Apache and Nginx</title>
    <url>/2023/09/18-Apache-setup-webdav-on-linux/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><hr>
<h4 id="Setup-webdav-with-apache"><a href="#Setup-webdav-with-apache" class="headerlink" title="Setup webdav with apache"></a>Setup webdav with apache</h4><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@www ~]<span class="hljs-comment"># mkdir /home/webdav</span><br>[root@www ~]<span class="hljs-comment"># chown apache. /home/webdav</span><br>[root@www ~]<span class="hljs-comment"># chmod 770 /home/webdav</span><br>[root@www ~]<span class="hljs-comment"># vi /etc/httpd/conf.d/webdav.conf</span><br><span class="hljs-comment"># create new</span><br>&lt;IfModule mod_dav_fs.c&gt;<br>    DAVLockDB /var/lib/dav/lockdb<br>&lt;/IfModule&gt;<br>Alias /webdav /home/webdav<br>&lt;Location /webdav&gt;<br>    DAV On<br>    SSLRequireSSL<br>    Options +Indexes<br>    AuthType Basic<br>    AuthName WebDAV<br>    AuthUserFile /etc/httpd/conf/.htpasswd<br>    &lt;RequireAny&gt;<br>        Require method GET POST OPTIONS<br>        Require valid-user<br>    &lt;/RequireAny&gt;<br>&lt;/Location&gt;<br><br><span class="hljs-comment"># add a user : create a new file with [-c]</span><br>[root@www ~]<span class="hljs-comment"># htpasswd -c /etc/httpd/conf/.htpasswd rocky</span><br>New password:     <span class="hljs-comment"># set password</span><br>Re-<span class="hljs-built_in">type</span> new password:<br>Adding password <span class="hljs-keyword">for</span> user rocky<br>[root@www ~]<span class="hljs-comment"># systemctl restart httpd</span><br><span class="hljs-comment"># selinux if enabled</span><br>[root@www ~]<span class="hljs-comment"># chcon -R -t httpd_sys_rw_content_t /home/webdav</span><br>[root@www ~]<span class="hljs-comment"># semanage fcontext -a -t httpd_sys_rw_content_t /home/webdav</span><br></code></pre></td></tr></table></figure>

<h4 id="Setup-webdav-with-nginx"><a href="#Setup-webdav-with-nginx" class="headerlink" title="Setup webdav with nginx"></a>Setup webdav with nginx</h4><h5 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h5><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">yum install yum-utils pcre-devel zlib-devel libxslt-devel libxml2-devel -y<br>wget http://nginx.org/download/nginx-1.16.1.tar.gz<br>git <span class="hljs-built_in">clone</span> https://github.com/arut/nginx-dav-ext-module<br>tar -zvxf nginx-1.16.1.tar.gz &amp;&amp; <span class="hljs-built_in">cd</span> nginx-1.16.1<br>./configure --with-compat --with-http_dav_module --add-dynamic-module=../nginx-dav-ext-module/<br><span class="hljs-comment"># if nginx already installed, only make is ok, do not make install</span><br>make &amp;&amp; make install<br><span class="hljs-built_in">cp</span> objs/ngx_http_dav_ext_module.so /etc/nginx/modules/<br></code></pre></td></tr></table></figure>

<h5 id="configure"><a href="#configure" class="headerlink" title="configure"></a>configure</h5><figure class="highlight nginx"><table><tr><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">listen</span> <span class="hljs-number">80</span>;<br>    <span class="hljs-attribute">server_name</span> webdav.example.com;<br>  <br>    <span class="hljs-section">location</span> / &#123;<br>        <span class="hljs-comment"># 301 Only work for GET/HEAD/OPTIONS, So we use 307 to temporary for POST go through.</span><br>        <span class="hljs-attribute">if</span> (<span class="hljs-variable">$request_method</span> = POST) &#123;<br>            <span class="hljs-attribute">return</span> <span class="hljs-number">307</span> https://<span class="hljs-variable">$host</span><span class="hljs-variable">$request_uri</span>;<br>        &#125;<br>        <span class="hljs-attribute">return</span> <span class="hljs-number">301</span> https://<span class="hljs-variable">$host</span><span class="hljs-variable">$request_uri</span>;<br>        &#125;<br>&#125;<br><br><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">listen</span> <span class="hljs-number">443</span> ssl http2;<br>    <span class="hljs-attribute">listen</span> [::]:<span class="hljs-number">443</span> ssl http2;<br>    <span class="hljs-attribute">server_name</span> webdav.example.com;<br>    <span class="hljs-attribute">root</span> /var/www/webdav/;<br>    <span class="hljs-attribute">index</span> index.html index.htm;<br>    <span class="hljs-attribute">access_log</span> /var/log/nginx/webdav/access.log combined gzip;<br>    <span class="hljs-attribute">error_log</span> /var/log/nginx/webdav/<span class="hljs-literal">error</span>.log <span class="hljs-literal">warn</span>;<br>    <span class="hljs-attribute">ssl_certificate</span> /etc/nginx/ssl/webdav.example.com.crt;<br>    <span class="hljs-attribute">ssl_certificate_key</span> /etc/nginx/ssl/webdav.example.com.key;<br>    <span class="hljs-attribute">ssl_dhparam</span> /etc/nginx/ssl/dhparams.pem;<br>    <span class="hljs-attribute">ssl_session_cache</span> shared:SSL:<span class="hljs-number">10m</span>;<br>    <span class="hljs-attribute">ssl_session_timeout</span> <span class="hljs-number">10m</span>;<br>    <span class="hljs-attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="hljs-number">1</span> TLSv1.<span class="hljs-number">2</span>;<br>    <span class="hljs-attribute">ssl_ciphers</span> EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;<br>    <span class="hljs-attribute">ssl_prefer_server_ciphers</span> <span class="hljs-literal">on</span>;<br>    <span class="hljs-attribute">add_header</span> Strict-Transport-Security <span class="hljs-string">&quot;max-age=31536000&quot;</span>;<br>    <span class="hljs-attribute">add_header</span> X-Content-Type-Options nosniff;<br><br>    <span class="hljs-section">location</span> / &#123;<br>        <span class="hljs-attribute">auth_basic</span> <span class="hljs-string">&quot;Restricted site.&quot;</span>;<br>        <span class="hljs-attribute">auth_basic_user_file</span> /etc/nginx/auth/webdav-users.passwd;<br>        <span class="hljs-attribute">client_body_temp_path</span> /var/www/webdav/temp;<br>        <span class="hljs-attribute">dav_methods</span> PUT DELETE MKCOL COPY MOVE;<br>        <span class="hljs-attribute">dav_ext_methods</span> PROPFIND OPTIONS;<br>        <span class="hljs-attribute">create_full_put_path</span> <span class="hljs-literal">on</span>;<br>        <span class="hljs-attribute">dav_access</span> user:rw group:rw all:rw;<br>        <span class="hljs-attribute">autoindex</span> <span class="hljs-literal">on</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">system start nginx &amp;&amp; systemctl <span class="hljs-built_in">enable</span> nginx<br>nginx -V |grep webdav<br></code></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>Arc SQL MI with Multi-cloud </title>
    <url>/2024/03/30-Arc-SQL-MI-Multi-cloud-Database-failover-with-Distributed-AG/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h4 id="Arc-SQL-MI-Multi-cloud-Database-failover-with-Distributed-AG"><a href="#Arc-SQL-MI-Multi-cloud-Database-failover-with-Distributed-AG" class="headerlink" title="Arc SQL MI: Multi-cloud Database failover with Distributed AG"></a>Arc SQL MI: Multi-cloud Database failover with Distributed AG</h4><p><a href="https://techcommunity.microsoft.com/t5/azure-architecture-blog/arc-sql-mi-demonstrating-multi-cloud-database-failover-using/ba-p/2936589">https://techcommunity.microsoft.com/t5/azure-architecture-blog/arc-sql-mi-demonstrating-multi-cloud-database-failover-using/ba-p/2936589</a></p>
<p><img src="/./image-20240409212033562.png" alt="image-20240409212033562"></p>
<hr>
<h4 id="Azure-Arc-enabled-SQL-Managed-Instance-disaster-recovery"><a href="#Azure-Arc-enabled-SQL-Managed-Instance-disaster-recovery" class="headerlink" title="Azure Arc-enabled SQL Managed Instance - disaster recovery"></a>Azure Arc-enabled SQL Managed Instance - disaster recovery</h4><p><a href="https://learn.microsoft.com/en-us/azure/azure-arc/data/managed-instance-disaster-recovery">https://learn.microsoft.com/en-us/azure/azure-arc/data/managed-instance-disaster-recovery</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>Azure App Service (Web Apps) Tutorial</title>
    <url>/2023/01/15-Azure-App-Service-Web-Apps-Tutorial/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="Azure-App-Service-Web-Apps-Tutorial"><a href="#Azure-App-Service-Web-Apps-Tutorial" class="headerlink" title="Azure App Service (Web Apps) Tutorial"></a>Azure App Service (Web Apps) Tutorial</h3><p><a href="https://www.youtube.com/watch?v=4BwyqmRTrx8">https://www.youtube.com/watch?v=4BwyqmRTrx8</a></p>
<style>.embed-container {
    position: relative;
    padding-bottom: 56.25%;
    height: 0;
    overflow: hidden;
    max-width: 100%;
  }
  .embed-container iframe, .embed-container object, .embed-container embed {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  </style>

<div class="embed-container"><iframe src="https://www.youtube.com/embed/4BwyqmRTrx8" allowfullscreen frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe></div>
<hr>
<p>Next steps for you after watching the video </p>
<ol>
<li><p>Check app service docs : </p>
<p><a href="https://learn.microsoft.com/en-us/azure/app-service/overview?WT.mc_id=AZ-MVP-5003556">https://learn.microsoft.com/en-us/azure/app-service/overview?WT.mc_id=AZ-MVP-5003556</a></p>
</li>
<li><p>Check online modules: </p>
<p><a href="https://learn.microsoft.com/en-us/training/paths/deploy-a-website-with-azure-app-service/?WT.mc_id=AZ-MVP-5003556">https://learn.microsoft.com/en-us/training/paths/deploy-a-website-with-azure-app-service/?WT.mc_id=AZ-MVP-5003556</a></p>
</li>
<li><p>Read Azure Jumpstart if you want to start with Azure and need a subscription </p>
<p><a href="https://marczak.io/posts/2019/07/azure-jumpstart/">https://marczak.io/posts/2019/07/azure-jumpstart/</a></p>
</li>
</ol>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>Azure App Service</tag>
      </tags>
  </entry>
  <entry>
    <title>Azure Arc-Enbaled SQL Server instance with AKS</title>
    <url>/2024/03/30-Azure-Arc-Enbaled-SQL-Server-instance-with-AKS/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="Azure-data-controller-Setup"><a href="#Azure-data-controller-Setup" class="headerlink" title="Azure data controller Setup"></a>Azure data controller Setup</h2><p><a href="https://docs.microsoft.com/en-us/azure/azure-arc/data/create-data-controller-direct-cli?tabs=windows">https://docs.microsoft.com/en-us/azure/azure-arc/data/create-data-controller-direct-cli?tabs=windows</a></p>
<h4 id="create-resources-group"><a href="#create-resources-group" class="headerlink" title="create resources group"></a>create resources group</h4><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">az group create --name sqlarc --location eastus<br></code></pre></td></tr></table></figure>

<h4 id="create-aks"><a href="#create-aks" class="headerlink" title="create aks"></a>create aks</h4><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">az aks create --resource-group sqlarc --name aks --node-count 3 --node-vm-size Standard_D8_v3 --enable-addons monitoring --generate-ssh-keys<br><br></code></pre></td></tr></table></figure>

<h4 id="Get-azure-aks-kubectl-admin-access"><a href="#Get-azure-aks-kubectl-admin-access" class="headerlink" title="Get azure aks kubectl admin access"></a>Get azure aks kubectl admin access</h4><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">we can get below info from azure portal when click connect to cluster</span><br>az account set --subscription 5f9c889d-272a-4028-ba75-575f6a1dfe3f<br>az aks get-credentials --resource-group sqlarc --name aks<br></code></pre></td></tr></table></figure>

<h4 id="check-k8s-context-for-current-environment"><a href="#check-k8s-context-for-current-environment" class="headerlink" title="check k8s context for current environment"></a>check k8s context for current environment</h4><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">kubectl cluster-info<br>kubectl config get-contexts<br>kubectl config current-context<br></code></pre></td></tr></table></figure>

<h4 id="check-azure-k8s-namespace"><a href="#check-azure-k8s-namespace" class="headerlink" title="check azure k8s namespace"></a>check azure k8s namespace</h4><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">kubectl.exe get ns<br>NAME              STATUS   AGE<br>default           Active   19m<br>kube-node-lease   Active   19m<br>kube-public       Active   19m<br>kube-system       Active   19m<br></code></pre></td></tr></table></figure>

<h4 id="Register-providers-for-Azure-Arc-enabled-Kubernetes"><a href="#Register-providers-for-Azure-Arc-enabled-Kubernetes" class="headerlink" title="Register providers for Azure Arc enabled Kubernetes"></a>Register providers for Azure Arc enabled Kubernetes</h4><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">az provider register --namespace Microsoft.Kubernetes <br>az provider register --namespace Microsoft.KubernetesConfiguration <br>az provider register --namespace Microsoft.ExtendedLocation<br></code></pre></td></tr></table></figure>

<h4 id="create-arc-enabled-k8s"><a href="#create-arc-enabled-k8s" class="headerlink" title="create arc enabled k8s"></a>create arc enabled k8s</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">PS</span> C:\Users\hubo&gt;  az connectedk8s connect <span class="hljs-literal">--name</span> arck8s <span class="hljs-literal">--resource-group</span> sqlarc (This operation might take a <span class="hljs-keyword">while</span>...)<br><span class="hljs-built_in">PS</span> C:\Users\hubo&gt;  az connectedk8s list <span class="hljs-literal">--resource-group</span> sqlarc <span class="hljs-literal">-o</span> table<br>Name     Location    ResourceGroup<br><span class="hljs-literal">-------</span>  <span class="hljs-literal">----------</span>  <span class="hljs-literal">---------------</span><br>arc<span class="hljs-literal">-aks</span>  eastasia    sqlarc<br><span class="hljs-built_in">PS</span> C:\Users\hubo&gt; kubectl.exe get ns<br>NAME              STATUS   AGE<br>azure<span class="hljs-literal">-arc</span>         Active   <span class="hljs-number">22</span>m<br>default           Active   <span class="hljs-number">35</span>m<br>kube<span class="hljs-literal">-node-lease</span>   Active   <span class="hljs-number">35</span>m<br>kube<span class="hljs-literal">-public</span>       Active   <span class="hljs-number">35</span>m<br>kube<span class="hljs-literal">-system</span>       Active   <span class="hljs-number">35</span>m<br></code></pre></td></tr></table></figure>

<h4 id="Create-service-principal-and-configure-roles-for-metrics"><a href="#Create-service-principal-and-configure-roles-for-metrics" class="headerlink" title="Create service principal and configure roles for metrics"></a>Create service principal and configure roles for metrics</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">PS</span> C:\Users\hubo&gt; az provider register <span class="hljs-literal">-n</span> Microsoft.AzureArcData <span class="hljs-literal">--wait</span><br><span class="hljs-built_in">PS</span> C:\Users\hubo&gt; az provider show <span class="hljs-literal">-n</span> Microsoft.AzureArcData <span class="hljs-literal">-o</span> table<br>Namespace               RegistrationPolicy    RegistrationState<br><span class="hljs-literal">----------------------</span>  <span class="hljs-literal">--------------------</span>  <span class="hljs-literal">-------------------</span><br>Microsoft.AzureArcData  RegistrationRequired  Registered<br><span class="hljs-built_in">PS</span> C:\Users\hubo&gt; az ad <span class="hljs-built_in">sp</span> create<span class="hljs-literal">-for-rbac</span> <span class="hljs-literal">--name</span> azure<span class="hljs-literal">-arc-jasonoss</span> <span class="hljs-literal">--role</span> Contributor <span class="hljs-literal">--scopes</span> /subscriptions/xxxxxxxxx<span class="hljs-literal">-272a-4028-ba75-575f6a1dfe3f</span>/resourceGroups/sqlarc<br><span class="hljs-built_in">PS</span> C:\Users\hubo&gt; az role assignment create <span class="hljs-literal">--assignee</span> xxxxxxxxx<span class="hljs-literal">-2344-4695-b7e3-a103c3ff88cd</span>  <span class="hljs-literal">--role</span> <span class="hljs-string">&#x27;Monitoring Metrics Publisher&#x27;</span> <span class="hljs-literal">--scope</span> /subscriptions/xxxxxxxxxx<span class="hljs-literal">-272a-4028-ba75-575f6a1dfe3f</span>/resourceGroups/sqlarc<br></code></pre></td></tr></table></figure>

<h4 id="Create-an-Arc-enabled-Kubernetes-data-services-extension"><a href="#Create-an-Arc-enabled-Kubernetes-data-services-extension" class="headerlink" title="Create an Arc enabled Kubernetes data services extension"></a>Create an Arc enabled Kubernetes data services extension</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><code class="hljs PowerShell"><span class="hljs-built_in">PS</span> C:\Users\hubo&gt; az k8s<span class="hljs-literal">-extension</span> create <span class="hljs-literal">--name</span> azdata <span class="hljs-literal">--extension-type</span> microsoft.arcdataservices <span class="hljs-literal">--cluster-type</span> connectedClusters <span class="hljs-literal">-c</span> arc<span class="hljs-literal">-aks</span> <span class="hljs-literal">-g</span> sqlarc <span class="hljs-literal">--scope</span> cluster <span class="hljs-literal">--release-namespace</span> arc <span class="hljs-literal">--config</span> Microsoft.CustomLocation.ServiceAccount=sa<span class="hljs-literal">-bootstrapper</span><br></code></pre></td></tr></table></figure>

<h4 id="Create-Custom-location"><a href="#Create-Custom-location" class="headerlink" title="Create Custom location"></a>Create Custom location</h4><h4 id="Create-azure-data-controller"><a href="#Create-azure-data-controller" class="headerlink" title="Create azure data controller"></a>Create azure data controller</h4><h4 id="Create-Azure-SQL-managed-instance-Azure-arc"><a href="#Create-Azure-SQL-managed-instance-Azure-arc" class="headerlink" title="Create Azure SQL managed instance -Azure arc"></a>Create Azure SQL managed instance -Azure arc</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><code class="hljs Powershell"><span class="hljs-built_in">PS</span> C:\Users\hubo&gt; kubectl.exe get pod <span class="hljs-literal">-n</span> azarc<br>NAME                            READY   STATUS    RESTARTS   AGE<br>bootstrapper<span class="hljs-literal">-796c4c67db-2nz4j</span>   <span class="hljs-number">1</span>/<span class="hljs-number">1</span>     Running   <span class="hljs-number">0</span>          <span class="hljs-number">58</span>m<br>control<span class="hljs-literal">-z842f</span>                   <span class="hljs-number">2</span>/<span class="hljs-number">2</span>     Running   <span class="hljs-number">0</span>          <span class="hljs-number">52</span>m<br>controldb<span class="hljs-literal">-0</span>                     <span class="hljs-number">2</span>/<span class="hljs-number">2</span>     Running   <span class="hljs-number">0</span>          <span class="hljs-number">52</span>m<br>logsdb<span class="hljs-literal">-0</span>                        <span class="hljs-number">3</span>/<span class="hljs-number">3</span>     Running   <span class="hljs-number">0</span>          <span class="hljs-number">49</span>m<br>logsui<span class="hljs-literal">-7k6q9</span>                    <span class="hljs-number">3</span>/<span class="hljs-number">3</span>     Running   <span class="hljs-number">0</span>          <span class="hljs-number">46</span>m<br>metricsdb<span class="hljs-literal">-0</span>                     <span class="hljs-number">2</span>/<span class="hljs-number">2</span>     Running   <span class="hljs-number">0</span>          <span class="hljs-number">49</span>m<br>metricsdc<span class="hljs-literal">-q6vxh</span>                 <span class="hljs-number">2</span>/<span class="hljs-number">2</span>     Running   <span class="hljs-number">0</span>          <span class="hljs-number">49</span>m<br>metricsdc<span class="hljs-literal">-qszhd</span>                 <span class="hljs-number">2</span>/<span class="hljs-number">2</span>     Running   <span class="hljs-number">0</span>          <span class="hljs-number">49</span>m<br>metricsdc<span class="hljs-literal">-rfzck</span>                 <span class="hljs-number">2</span>/<span class="hljs-number">2</span>     Running   <span class="hljs-number">0</span>          <span class="hljs-number">49</span>m<br>metricsui<span class="hljs-literal">-4j2kl</span>                 <span class="hljs-number">2</span>/<span class="hljs-number">2</span>     Running   <span class="hljs-number">0</span>          <span class="hljs-number">49</span>m<br>sqlmi<span class="hljs-literal">-0</span>                         <span class="hljs-number">4</span>/<span class="hljs-number">4</span>     Running   <span class="hljs-number">0</span>          <span class="hljs-number">20</span>m<br>sqlmi<span class="hljs-literal">-ha-0</span>                      <span class="hljs-number">2</span>/<span class="hljs-number">2</span>     Running   <span class="hljs-number">0</span>          <span class="hljs-number">21</span>m<br><span class="hljs-built_in">PS</span> C:\Users\hubo&gt; kubectl.exe get svc <span class="hljs-literal">-n</span> azarc | findstr.exe sqlmi<span class="hljs-literal">-external-svc</span><br>sqlmi<span class="hljs-literal">-external-svc</span>        LoadBalancer   <span class="hljs-number">10.0</span>.<span class="hljs-number">240.58</span>    <span class="hljs-number">20.124</span>.<span class="hljs-number">137.158</span>   <span class="hljs-number">1433</span>:<span class="hljs-number">32221</span>/TCP,<span class="hljs-number">5022</span>:<span class="hljs-number">32017</span>/TCP   <span class="hljs-number">22</span>m<br><span class="hljs-built_in">PS</span> C:\Users\hubo&gt; SQLCMD.EXE <span class="hljs-literal">-S</span> <span class="hljs-number">20.124</span>.<span class="hljs-number">137.158</span> <span class="hljs-literal">-Uadmin</span><br>Password:<br><span class="hljs-number">1</span>&gt; <span class="hljs-built_in">select</span> <span class="hljs-selector-tag">@</span>@version;<br><span class="hljs-number">2</span>&gt; go<br>Microsoft Azure SQL Managed Instance - Azure Arc - <span class="hljs-number">16.0</span>.<span class="hljs-number">41.7337</span> (X64)<br>        Apr <span class="hljs-number">25</span> <span class="hljs-number">2022</span> <span class="hljs-number">15</span>:<span class="hljs-number">12</span>:<span class="hljs-number">13</span><br>        Copyright (C) <span class="hljs-number">2021</span> Microsoft Corporation<br>        General Purpose (<span class="hljs-number">64</span><span class="hljs-literal">-bit</span>) on Linux (Ubuntu <span class="hljs-number">20.04</span>.<span class="hljs-number">4</span> LTS) &lt;X64&gt;<br><br>(<span class="hljs-number">1</span> rows affected)<br><br></code></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>Azure-arc-enabled-SQLMI-instance-Password-and-Username-Encode-and-Decode</title>
    <url>/2022/09/16-Azure-arc-enabled-SQLMI-instance-Password-and-Username-Encode-and-Decode/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@azk8s-oc sqlmi]<span class="hljs-comment"># head sql1-linux.yaml</span><br>apiVersion: v1<br>data:<br>  username: c3FsYWRtaW4K<br>  password: SHVhd2VpMTIjMjMK<br>kind: Secret<br>metadata:<br>  name: sql1-login-secret<br><span class="hljs-built_in">type</span>: Opaque<br>---<br>apiVersion: sql.arcdata.microsoft.com/v5<br>[root@azk8s-oc sqlmi]<span class="hljs-comment"># echo sqladmin | base64</span><br>c3FsYWRtaW4K<br>[root@azk8s-oc sqlmi]<span class="hljs-comment"># echo Huawei12#23 |base64</span><br>SHVhd2VpMTIjMjMK<br>[root@azk8s-oc sqlmi]<span class="hljs-comment"># oc get sqlmi sql1</span><br>NAME   STATUS   REPLICAS   PRIMARY-ENDPOINT    AGE<br>sql1   Ready    1          20.232.50.69,1433   5m1s<br>[root@azk8s-oc sqlmi]<span class="hljs-comment"># sqlcmd -S 20.232.50.69,1433 -Usqladmin -PHuawei12#23</span><br>Sqlcmd: Error: Microsoft ODBC Driver 17 <span class="hljs-keyword">for</span> SQL Server : Login failed <span class="hljs-keyword">for</span> user <span class="hljs-string">&#x27;sqladmin&#x27;</span>..<br></code></pre></td></tr></table></figure>

<figure class="highlight powershell"><table><tr><td class="code"><pre><code class="hljs powershell">[<span class="hljs-type">root</span>@<span class="hljs-type">azk8s</span>-<span class="hljs-type">oc</span> <span class="hljs-type">sqlmi</span>]<span class="hljs-comment"># pwsh</span><br>PowerShell <span class="hljs-number">7.2</span>.<span class="hljs-number">5</span><br>Copyright (c) Microsoft Corporation.<br><br>https://aka.ms/powershell<br><span class="hljs-built_in">Type</span> <span class="hljs-string">&#x27;help&#x27;</span> to get help.<br><br><span class="hljs-built_in">PS</span> /mnt/sqlmi&gt; [<span class="hljs-type">Convert</span>]::ToBase64String([<span class="hljs-type">System.Text.Encoding</span>]::UTF8.GetBytes(<span class="hljs-string">&#x27;sqladmin&#x27;</span>))<br>c3FsYWRtaW4=<br><span class="hljs-built_in">PS</span> /mnt/sqlmi&gt; [<span class="hljs-type">Convert</span>]::ToBase64String([<span class="hljs-type">System.Text.Encoding</span>]::UTF8.GetBytes(<span class="hljs-string">&#x27;Huawei12#23&#x27;</span>))<br>SHVhd2VpMTIjMjM=<br></code></pre></td></tr></table></figure>
<figure class="highlight powershell"><table><tr><td class="code"><pre><code class="hljs PowerShell"><span class="hljs-comment"># encode password and username</span><br><span class="hljs-built_in">PS</span> C:\Users\hubo&gt; [<span class="hljs-type">Convert</span>]::ToBase64String([<span class="hljs-type">System.Text.Encoding</span>]::UTF8.GetBytes(<span class="hljs-string">&#x27;sqladmin&#x27;</span>))<br>c3FsYWRtaW4=<br><span class="hljs-built_in">PS</span> C:\Users\hubo&gt; [<span class="hljs-type">Convert</span>]::ToBase64String([<span class="hljs-type">System.Text.Encoding</span>]::UTF8.GetBytes(<span class="hljs-string">&#x27;Huawei12#23&#x27;</span>))<br>SHVhd2VpMTIjMjM=<br></code></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@azk8s-oc sqlmi]<span class="hljs-comment"># head sql2-powershell.yaml</span><br>apiVersion: v1<br>data:<br>  username: c3FsYWRtaW4=<br>  password: SHVhd2VpMTIjMjM=<br>kind: Secret<br>metadata:<br>  name: sql2-login-secret<br><span class="hljs-built_in">type</span>: Opaque<br>---<br>apiVersion: sql.arcdata.microsoft.com/v5<br>[root@azk8s-oc sqlmi]<span class="hljs-comment"># oc get sqlmi sql2</span><br>NAME   STATUS   REPLICAS   PRIMARY-ENDPOINT      AGE<br>sql2   Ready    1          x.x.x.x,1433          5m10s<br>[root@azk8s-oc sqlmi]<span class="hljs-comment"># sqlcmd -S &lt;x.x.x.x&gt;,1433 -Usqladmin -PHuawei12#23</span><br>1&gt; select @@version;<br>2&gt; go<br>-----------------------------------------------<br>Microsoft Azure SQL Managed Instance - Azure Arc - 16.0.41.7339 (X64)<br>        May 27 2022 11:38:57<br>        Copyright (C) 2021 Microsoft Corporation<br>        General Purpose (64-bit) on Linux (Ubuntu 20.04.4 LTS) &lt;X64&gt;<br>(1 rows affected)<br>1&gt; <span class="hljs-built_in">exit</span><br>[root@azk8s-oc sqlmi]<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure>
<figure class="highlight powershell"><table><tr><td class="code"><pre><code class="hljs Powershell"><span class="hljs-comment"># encode password and username</span><br>[<span class="hljs-type">Convert</span>]::ToBase64String([<span class="hljs-type">System.Text.Encoding</span>]::UTF8.GetBytes(<span class="hljs-string">&#x27;&lt;username&gt;&#x27;</span>))<br>[<span class="hljs-type">Convert</span>]::ToBase64String([<span class="hljs-type">System.Text.Encoding</span>]::UTF8.GetBytes(<span class="hljs-string">&#x27;&lt;password&gt;&#x27;</span>))<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Azure</category>
      </categories>
      <tags>
        <tag>SQL Server</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS-sql server Troubleshooting tools</title>
    <url>/2023/12/15-CSS-sql-server-Performance-Troubleshooting/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="Connection"><a href="#Connection" class="headerlink" title="Connection"></a>Connection</h2><p><a href="https://learn.microsoft.com/en-us/troubleshoot/sql/database-engine/connect/resolve-connectivity-errors-overview">https://learn.microsoft.com/en-us/troubleshoot/sql/database-engine/connect/resolve-connectivity-errors-overview</a></p>
<p><a href="https://github.com/microsoft/CSS_SQL_Networking_Tools/wiki/0000-Troubleshooting-Workflows">https://github.com/microsoft/CSS_SQL_Networking_Tools/wiki/0000-Troubleshooting-Workflows</a></p>
<h2 id="Performance"><a href="#Performance" class="headerlink" title="Performance"></a>Performance</h2><ul>
<li>Pssdiag &amp; Sqldiag manager</li>
</ul>
<p>This is data collection tool for performance issues. It collects <strong>DMV, perfmon, profiler trace or extended events (xevents) data</strong> for support analysis.</p>
<p><a href="https://github.com/Microsoft/DiagManager">Pssdiag &amp; Sqldiag Manager on github repo</a></p>
<p>Pssdiag&#x2F;Sqldiag Manager is a graphic interface that provides customization capabilities to collect data for SQL Server using sqldiag collector engine. The data collected can be used by <a href="https://github.com/Microsoft/SqlNexus">SQL Nexus tool</a> which help you troubleshoot SQL Server performance problems.</p>
<ul>
<li>SQL Nexus</li>
</ul>
<p>This is data analysis tool. It analyzes data collected by pssdiag or Sqldiag. <a href="http://sqlnexus.codeplex.com/">SQL Nexus on codeplex</a> (to be migrated to GitHub repro)</p>
<ul>
<li>RML Utilities</li>
</ul>
<p>RML Utilities process, aggregate and replay profiler trace files. SQL Nexus depends on RML Utilities to process profiler traces. <a href="https://www.microsoft.com/en-us/download/details.aspx?id=4511">RML on Microsoft download center</a></p>
<ul>
<li>Execution plan<ul>
<li><a href="https://learn.microsoft.com/zh-cn/training/modules/explore-query-performance-optimization/">https://learn.microsoft.com/zh-cn/training/modules/explore-query-performance-optimization/</a></li>
<li><a href="https://learn.microsoft.com/zh-cn/sql/relational-databases/performance/execution-plans?view=sql-server-ver16">https://learn.microsoft.com/zh-cn/sql/relational-databases/performance/execution-plans?view=sql-server-ver16</a></li>
<li><a href="https://www.sqlshack.com/execution-plans-in-sql-server/">https://www.sqlshack.com/execution-plans-in-sql-server/</a></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>Cloudflare Tunnel 实现内网穿透</title>
    <url>/2024/05/09-Cloudflare-Tunnel-%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="Prepare-work"><a href="#Prepare-work" class="headerlink" title="Prepare work"></a>Prepare work</h3><ul>
<li>Cloudflare Account</li>
<li>A Domain name which register under Cloudflare</li>
</ul>
<h3 id="Setup-steps"><a href="#Setup-steps" class="headerlink" title="Setup steps"></a>Setup steps</h3><p><code>Cloudflare Dashboard</code> –&gt; <code>Zero Trust </code> –&gt; <code>Networks</code> –&gt;<code>Tunnels</code>-&gt; <code>Create new Tunnels</code> –&gt; <code> Connector(Cloudflared)</code></p>
<p><img src="/../images/image-20240509164856584.png" alt="image-20240509164856584"></p>
<blockquote>
<p>Tips</p>
</blockquote>
<p>If you have multiple applications on one server, recommend use docker to create multiple connectors for each Application. Here are using Docker for example .</p>
<p><img src="/../images/image-20240509165511577.png" alt="image-20240509165511577"></p>
<p>Copy the application token and save it to <code>docker-compose.yml</code>:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># service description</span><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">cloudflare-tunnel:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">cloudflare/cloudflared</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">cloudflare-tunnel-plex</span><br>    <span class="hljs-attr">hostname:</span> <span class="hljs-string">cloudflare-tunnel</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">unless-stopped</span><br>    <span class="hljs-attr">network_mode:</span> <span class="hljs-string">&quot;host&quot;</span><br>    <span class="hljs-attr">command:</span> <span class="hljs-string">tunnel</span> <span class="hljs-string">run</span><br>    <span class="hljs-attr">dns:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;192.168.3.1&#x27;</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/etc/localtime:/etc/localtime:ro</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/etc/hosts:/etc/hosts</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;TUNNEL_TOKEN=$&#123;TOKEN&#125;&quot;</span> <span class="hljs-comment"># Your Token Here</span><br>    <span class="hljs-attr">labels:</span><br>      <span class="hljs-comment"># enbale watchtower updates</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;com.centurylinklabs.watchtower.enable=true&quot;</span><br></code></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@home ~/cloudflared-proxy/plex]<span class="hljs-comment"># docker-compose up -d</span><br>[+] Running 1/1<br> ✔ Container cloudflare-tunnel-plex  Started<br></code></pre></td></tr></table></figure>

<p><img src="/../images/image-20240509170300189.png" alt="image-20240509170300189"></p>
<p>Connectors that is becomes healthy. That means we successfully connected. Then we go to the next step to set proxy.</p>
<p><img src="/../images/image-20240509170848133.png" alt="image-20240509170848133"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@home ~/cloudflared-proxy/plex]<span class="hljs-comment"># nslookup plex.azureapp.org</span><br>Server:		192.168.3.1<br>Address:	192.168.3.1<span class="hljs-comment">#53</span><br><br>Non-authoritative answer:<br>Name:	plex.azureapp.org<br>Address: 172.67.136.8<br>Name:	plex.azureapp.org<br>Address: 104.21.54.63<br></code></pre></td></tr></table></figure>

<p>Now we can access <a href="http://localhost:32400/">http://localhost:32400</a> the plex from lan network and access <a href="https://plex.azureapp.org/">https://plex.azureapp.org</a> from public network.</p>
<p><img src="/../images/image-20240509171519755.png" alt="image-20240509171519755"></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>内网穿透</tag>
      </tags>
  </entry>
  <entry>
    <title>Create Azure Arc-enabled sqlmi Instance On-Premises k8s clsuter</title>
    <url>/2022/09/15-Create-Azure-Arc-Enabled-SQLMI-Instance-On-Premises/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="Create-Azure-Arc-enabled-SQLMI-Instance-On-Premises"><a href="#Create-Azure-Arc-enabled-SQLMI-Instance-On-Premises" class="headerlink" title="Create Azure Arc-enabled SQLMI Instance On-Premises"></a>Create Azure Arc-enabled SQLMI Instance On-Premises</h2> 
    <div id="aplayer-yoduFzoT" class="aplayer aplayer-tag-marker meting-tag-marker"
         data-id="1172021431" data-server="tencent" data-type="playlist" data-mode="circulation" data-autoplay="true" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"
    ></div>

<h3 id="Prerequisites-amp-environments"><a href="#Prerequisites-amp-environments" class="headerlink" title="Prerequisites &amp; environments"></a>Prerequisites &amp; environments</h3><table>
<thead>
<tr>
<th align="center">Servers</th>
<th align="center">CPU &amp; MEM</th>
<th align="center">Role</th>
<th align="center">OS</th>
</tr>
</thead>
<tbody><tr>
<td align="center">node1.io</td>
<td align="center">4Core 16GB</td>
<td align="center">k8s master</td>
<td align="center">centos7.8</td>
</tr>
<tr>
<td align="center">node2.io</td>
<td align="center">4Core 20GB</td>
<td align="center">k8s worker</td>
<td align="center">centos7.8</td>
</tr>
<tr>
<td align="center">node3.io</td>
<td align="center">4Core 20GB</td>
<td align="center">k8s worker</td>
<td align="center">centos7.8</td>
</tr>
</tbody></table>
<h3 id="Setup-k8s-clsuter-on-premises"><a href="#Setup-k8s-clsuter-on-premises" class="headerlink" title="Setup k8s clsuter on-premises"></a>Setup k8s clsuter on-premises</h3><p><a href="https://github.com/microsoft/sql-server-samples/tree/master/samples/features/sql-big-data-cluster/deployment/kubeadm/ubuntu">Setup k8s clsuter on-premises on Ubuntu</a></p>
<h4 id="Instructions"><a href="#Instructions" class="headerlink" title="Instructions"></a>Instructions</h4><ul>
<li>Start a sudo shell context and Execute <code>setup-k8s-prereqs.sh</code> script on each machine</li>
<li>Execute <code>setup-k8s-master.sh </code>script on the machine designated as Kubernetes master (not under sudo su as otherwise you’ll setup K8S .kube&#x2F;config permissions for root)</li>
<li>After successful initialization of the Kubernetes master, follow the kubeadm join commands output by the setup script on each agent machine</li>
<li>Execute <code>setup-volumes-agent.sh</code> script on each agent machine to create volumes for local storage</li>
<li>Execute <code>kubectl apply -f local-storage-provisioner.yaml</code> against the Kubernetes cluster to create the local storage provisioner. This will create a Storage Class named “local-storage”.</li>
</ul>
<h3 id="Create-data-controller"><a href="#Create-data-controller" class="headerlink" title="Create data controller:"></a>Create data controller:</h3><p><a href="https://docs.microsoft.com/en-us/azure/azure-arc/data/create-data-controller-indirect-cli?tabs=windows">create-data-controller-indirect-cli</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@node1 arc]<span class="hljs-comment"># kubectl get storageclasses.storage.k8s.io</span><br>NAME            PROVISIONER                    RECLAIMPOLICY   VOLUMEBINDINGMODE      ALLOWVOLUMEEXPANSION   AGE<br>local-storage   kubernetes.io/no-provisioner   Delete          WaitForFirstConsumer   <span class="hljs-literal">false</span>                  39h  <br>[root@node2 ~]<span class="hljs-comment"># cat /etc/fstab | grep data</span><br>UUID=49d8fe73-dfc5-4bca-9006-7c3feebdf3fc /data xfs defaults 0 0<br>[root@node2 ~]<span class="hljs-comment"># df -Th | grep &#x27;/data&#x27;</span><br>/dev/sdb1                 xfs       500G  568M  500G   1% /data<br>tmpfs                     tmpfs     9.8G  4.0M  9.8G   1% /var/lib/kubelet/pods/5092d08d-a693-4550-b127-35ce23c261cc/volumes/kubernetes.io~empty-dir/data<br>[root@node2 ~]<span class="hljs-comment"># ls /data/local-storage/</span><br>vol1   vol11  vol13  vol15  vol17  vol19  vol20  vol22  vol24  vol26  vol28  vol3   <br>[root@node1 arc]<span class="hljs-comment"># kubectl get pv -n local-storage</span><br>NAME                CAPAClinuxY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM                                            STORAGECLASS    REASON   AGE<br>local-pv-119ebf20   499Gi      RWO            Delete           Available                                                    local-storage            23h<br>local-pv-1245a771   499Gi      RWO            Delete           Available                                                    local-storage            23h<br>local-pv-13a47426   499Gi      RWO            Delete           Bound       arc/logs-metricsdb-0                             local-storage            39h<br>[root@node1 arc]<span class="hljs-comment"># az arcdata dc create --connectivity-mode indirect --name onpremises --k8s-namespace arc --subscription xxxx-xxxxx-xxxx-xxxx --resource-group azarclab --location eastus --storage-class local-storage --profile-name azure-arc-kubeadm --infrastructure onpremises --use-k8s</span><br>Subscription <span class="hljs-string">&#x27;xxxx-xxxxx-xxxx-xxxx&#x27;</span> not recognized.<br>To not see this warning, first login to Azure.<br><br>Using subscription <span class="hljs-string">&#x27;xxxx-xxxxx-xxxx-xxxx&#x27;</span>.<br><br>Monitoring administrator username:admin<br>Monitoring administrator password:<br>Confirm Monitoring administrator password:<br><br>Deploying data controller<br><br>NOTE: Data controller creation can take a significant amount of time depending on<br>configuration, network speed, and the number of nodes <span class="hljs-keyword">in</span> the cluster.<br><br>Data controller successfully deployed.<br>&#123;&#125;<br>[root@node1 arc]<span class="hljs-comment"># kubectl get datacontroller -n arc</span><br>NAME         STATE<br>onpremises   Ready<br>[root@node1 arc]<span class="hljs-comment"># kubectl get pod -n arc | grep -v sql</span><br>NAME                           READY   STATUS      RESTARTS   AGE<br>arc-bootstrapper-job-94x7m     0/1     Completed   0          14h<br>bootstrapper-cbf5bf94d-z9l95   1/1     Running     1          14h<br>control-f5d8t                  2/2     Running     0          14h<br>controldb-0                    2/2     Running     0          14h<br>logsdb-0                       3/3     Running     0          14h<br>logsui-896pw                   3/3     Running     3          14h<br>metricsdb-0                    2/2     Running     2          14h<br>metricsdc-2lr8t                2/2     Running     0          14h<br>metricsdc-79h4t                2/2     Running     2          14h<br>metricsui-zjwnr                2/2     Running     0          14h<br></code></pre></td></tr></table></figure>

<h3 id="Create-SQLMI-instance"><a href="#Create-SQLMI-instance" class="headerlink" title="Create SQLMI instance"></a>Create SQLMI instance</h3><p><a href="https://docs.microsoft.com/en-us/azure/azure-arc/data/create-sql-managed-instance?tabs=indirectly">create-sql-managed-instance-with-azure-cli</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">PS C:\Users\hubo&gt; az sql mi-arc create --name sql1 --k8s-namespace arc --use-k8s --time-zone Asia/Shanghai --agent-enabled <span class="hljs-literal">true</span> --dev --tier BusinessCritical --replicas 2<br>Deploying sql1 <span class="hljs-keyword">in</span> namespace `arc`<br>sql1 is Ready<br>[root@node1 arc]<span class="hljs-comment"># kubectl get pod -n arc</span><br>NAME                           READY   STATUS      RESTARTS   AGE<br>arc-bootstrapper-job-94x7m     0/1     Completed   0          14h<br>bootstrapper-cbf5bf94d-z9l95   1/1     Running     1          14h<br>control-f5d8t                  2/2     Running     0          14h<br>controldb-0                    2/2     Running     0          14h<br>logsdb-0                       3/3     Running     0          14h<br>logsui-896pw                   3/3     Running     3          14h<br>metricsdb-0                    2/2     Running     2          14h<br>metricsdc-2lr8t                2/2     Running     0          14h<br>metricsdc-79h4t                2/2     Running     2          14h<br>metricsui-zjwnr                2/2     Running     0          14h<br>sql1-0                         4/4     Running     0          31m<br>sql1-1                         4/4     Running     0          31m<br>sql1-ha-0                      2/2     Running     0          32m<br></code></pre></td></tr></table></figure>
<h3 id="Connect-with-SQLMI-insatnce"><a href="#Connect-with-SQLMI-insatnce" class="headerlink" title="Connect with SQLMI insatnce"></a>Connect with SQLMI insatnce</h3><figure class="highlight asciidoc"><table><tr><td class="code"><pre><code class="hljs asciidoc">[root@node1 arc]# kubectl get sqlmi -n arc<br>NAME   STATUS   REPLICAS   PRIMARY-ENDPOINT     AGE<br>sql1   Ready    2          10.157.21.15,32697   22m<br>[root@node1 arc]# yum install mssql-tools -y<br>[root@node1 arc]# /opt/mssql-tools/bin/sqlcmd -S 10.157.21.15,32697 -Uadmin -Q <span class="hljs-emphasis">&#x27;select @@version&#x27;</span><br><span class="hljs-section">Password:                                                                                                                                                                     </span><br><span class="hljs-section">--------------------------------------------------------</span><br>Microsoft Azure SQL Managed Instance - Azure Arc - 16.0.312.4243 (X64)<br><span class="hljs-code">        Jul  2 2022 13:16:53</span><br><span class="hljs-code">        Copyright (C) 2022 Microsoft Corporation</span><br><span class="hljs-code">        Business Critical (64-bit) on Linux (Ubuntu 20.04.4 LTS) &lt;X64&gt;</span><br><br>(1 rows affected)<br></code></pre></td></tr></table></figure>
<h3 id="Manager-data-with-Azure-Data-Studio"><a href="#Manager-data-with-Azure-Data-Studio" class="headerlink" title="Manager data with Azure Data Studio"></a>Manager data with Azure Data Studio</h3><p>Azure Data Studio:<br><a href="https://docs.microsoft.com/en-us/sql/azure-data-studio/download-azure-data-studio?view=sql-server-ver16">https://docs.microsoft.com/en-us/sql/azure-data-studio/download-azure-data-studio?view=sql-server-ver16</a></p>
<p><img src="/../images/1715511-20220909100338097-1615601437.png"></p>
<p>kibana Dashboard:<br><img src="/../images/1715511-20220909100450574-1462693194.png"></p>
<p>Grafana Dashboard<br><img src="/../images/1715511-20220909100700776-934704336.png"></p>
]]></content>
      <categories>
        <category>Azure</category>
      </categories>
      <tags>
        <tag>sqlmi</tag>
      </tags>
  </entry>
  <entry>
    <title>Custom Windows Image Tutorial</title>
    <url>/2022/12/29-Custom-Windows-Image-Tutorial/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><style>.embed-container {
    position: relative;
    padding-bottom: 56.25%;
    height: 0;
    overflow: hidden;
    max-width: 100%;
  }
  .embed-container iframe, .embed-container object, .embed-container embed {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  </style>

<div class="embed-container"><iframe src="https://www.youtube.com/embed/PdKMiFKGQuc" allowfullscreen frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe></div>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>pxe</tag>
        <tag>wds</tag>
      </tags>
  </entry>
  <entry>
    <title>Customize windowsPE image for PXE server</title>
    <url>/2024/04/08-Customize-windowsPE-image-for-PXE-server/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="Work-Env"><a href="#Work-Env" class="headerlink" title="Work Env"></a>Work Env</h3><ul>
<li><a href="https://go.microsoft.com/fwlink/?linkid=2243390">Windows ADK (September 2023)</a></li>
<li><a href="https://go.microsoft.com/fwlink/?linkid=2243391">Windows PE add-on for the Windows ADK (September 2023)</a></li>
</ul>
<h3 id="Download-Intel-LAN-Drivers-for-My-PC"><a href="#Download-Intel-LAN-Drivers-for-My-PC" class="headerlink" title="Download Intel LAN Drivers for My PC"></a>Download Intel LAN Drivers for My PC</h3><blockquote>
<p><strong>Why need this step:</strong></p>
</blockquote>
<p>Sometimes we need using <code>WinPE OS</code> network to communicate with Internet or access <code>internal CIFS</code> share like below:</p>
<p><img src="/../images/image-20240408173225778.png" alt="image-20240408173225778"></p>
<p><strong>Intel LAN Drivers v29.0</strong>: </p>
<p><a href="https://www.intel.com/content/www/us/en/download/15084/intel-ethernet-adapter-complete-driver-pack.html">https://www.intel.com/content/www/us/en/download/15084/intel-ethernet-adapter-complete-driver-pack.html</a></p>
<p><a href="https://downloadmirror.intel.com/816410/Release_29.0.zip">https://downloadmirror.intel.com/816410/Release_29.0.zip</a></p>
<p>Extract <code>Release_29.0.zip</code> to somewhere , I extract to <code>E:\winpe\Release_29.0</code></p>
<h3 id="Customize-Windows-PE-ISO"><a href="#Customize-Windows-PE-ISO" class="headerlink" title="Customize Windows PE ISO"></a>Customize Windows PE ISO</h3><ul>
<li>Start the deployment Cli with admin privilege</li>
</ul>
<p><img src="/../images/image-20240408171723269.png" alt="image-20240408171723269"></p>
<ul>
<li>Customize Windows PE ISO</li>
</ul>
<p><img src="/../images/image-20240408172015857.png" alt="image-20240408172015857"></p>
<p><img src="/../images/image-20240408172124379.png" alt="image-20240408172124379"></p>
<ul>
<li>Add LAN Drivers to WinPE</li>
</ul>
<p><img src="/../images/image-20240408174110498.png" alt="image-20240408174110498"></p>
<blockquote>
<p>NOTE</p>
</blockquote>
<p>I have the  <code>Samba server</code> running on <code>192.168.3.200</code> and its <code>FQDN</code> is <code>pxe.srv</code>, make sure the path is accurate.</p>
<p><img src="/../images/image-20240408175609533.png" alt="image-20240408175609533"></p>
<p><img src="/../images/image-20240408175136413.png" alt="image-20240408175136413"></p>
<p>if you want more auto settings, edit <code>E:\winpe\mount\Windows\System32\startnet.cmd</code></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># E:\winpe\mount\Windows\System32\startnet.cmd</span><br>net use M: \\pxe.srv\data\pxe\win /user:jason <br><span class="hljs-built_in">echo</span> Windows <span class="hljs-number">10</span> installer PATH: M:\win10\setup.exe<br><span class="hljs-built_in">echo</span> Windows <span class="hljs-number">11</span> installer PATH: M:\win11\setup.exe<br><span class="hljs-built_in">echo</span> Windows <span class="hljs-number">2</span>k22 installer PATH: M:\winsrv\setup.exe<br><br>@<span class="hljs-built_in">echo</span> off<br><span class="hljs-built_in">echo</span> Please enter OS you want to install (win10,win11,w2k22)<br><span class="hljs-built_in">set</span> /p os=<br><span class="hljs-keyword">if</span> <span class="hljs-string">&quot;%os%&quot;</span>==<span class="hljs-string">&quot;win10&quot;</span> (<br>    M:\win10\setup.exe <br>) <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;%os%&quot;</span>==<span class="hljs-string">&quot;win11&quot;</span> (<br>    M:\win11\setup.exe<br>) <span class="hljs-keyword">else</span> (<br>    M:\winsrv\setup.exe<br>)<br></code></pre></td></tr></table></figure>

<p><img src="/../images/image-20240408180928043.png" alt="image-20240408180928043"></p>
<p>All commands here:</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><code class="hljs powershell">copype amd64 E:\winpe<br>Dism /<span class="hljs-built_in">mount-image</span> /imagefile:E:\winpe\media\sources\boot.wim /index:<span class="hljs-number">1</span> /mountdir:E:\winpe\mount<br>Dism /Image:E:\winpe\mount  /<span class="hljs-built_in">Add-Driver</span> /Driver:E:\winpe\Release_29.<span class="hljs-number">0</span> /Recurse<br><span class="hljs-built_in">echo</span> net use M: \\pxe.srv\data\pxe\win /user:jason  &gt;&gt; E:\winpe\mount\Windows\System32\startnet.cmd<br>Dism /un<span class="hljs-built_in">mount-image</span> /mountdir:E:\winpe\mount /commit<br>MakeWinPEMedia /ISO E:\winpe E:\winpe\WinPE.iso<br></code></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>pxe</tag>
      </tags>
  </entry>
  <entry>
    <title>Directly Connected Mode vs Indirectly Connected Mode for Azure Arc-enabled Data Services</title>
    <url>/2024/04/30-Directly-Connected-Mode-vs-Indirectly-Connected-Mode-for-Azure-Arc-enabled-Data-Services/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Azure Arc-enabled Data Services offers two different connectivity modes to customers – directly connected mode and indirectly connected mode. Today we will explore what each of these modes are, the capabilities they open up and which scenarios are best fit for each mode.  </p>
<p>At a high level, the goal of the different connectivity modes is to provide customers with the option to run data services for their specific scenario. We are providing customers with the ability to be able to run data services in environments that may not have connectivity due to compliance requirements or environmental limitations. In this blog, we discuss how you can use the essential features in both modes without disruption.</p>
<h2 id="Directly-Connected-Mode"><a href="#Directly-Connected-Mode" class="headerlink" title="Directly Connected Mode"></a>Directly Connected Mode</h2><p>Directly Connected Mode is best fit for customers who want to be connected to Azure at all times which allows them to consume Azure services on-premises outside of Azure like:</p>
<ul>
<li>Azure Monitor</li>
<li>Access features like evergreen SQL</li>
<li>Usage and monitoring</li>
</ul>
<p>Typical use cases for directly connected mode:</p>
<ul>
<li>Organizations who use public clouds like Azure, AWS or Google Cloud</li>
<li>Edge locations which normally have Internet connectivity</li>
<li>Some examples of this can be seen with retail and manufacturing</li>
<li>Corporate data centers are also a good fit for directly connected mode as they have more permissive policies for connectivity</li>
</ul>
<p>Customers can configure a directly connected mode data controller in three ways:</p>
<ul>
<li>az CLI</li>
<li>Azure Portal</li>
<li>Azure Data Studio</li>
</ul>
<p>This mode uses Azure Resource Manager API’s to operate Azure Arc data services.</p>
<h2 id="Indirectly-Connected-Mode"><a href="#Indirectly-Connected-Mode" class="headerlink" title="Indirectly Connected Mode"></a>Indirectly Connected Mode</h2><p>Indirectly connected mode is a good option for customers who can not be connected to Azure at all times for reasons like:</p>
<ul>
<li>Internet connectivity constraints</li>
<li>Regulatory, security or compliance reasons</li>
</ul>
<p>In this scenario, customers can access core management services in their local environment without having a direct connection to Azure and still access all the built-in capabilities of Arc enabled Data Services such as built in HA, built in DR, built in backups, build in monitoring, built in logging, etc.</p>
<p>Typical use cases for indirectly connected mode:</p>
<ul>
<li>On-premises data centers that do not allow connectivity in the data region due to governmental and compliance regulations</li>
<li>Edge locations with minimal or no Internet connectivity</li>
<li>Locations with frequent power outages</li>
</ul>
<p>Customers can configure a indirectly connected mode data controller in two ways:</p>
<ul>
<li>az CLI</li>
<li>Azure Data Studio</li>
</ul>
<h2 id="Management-Capabilities-for-Both-Connectivity-Modes"><a href="#Management-Capabilities-for-Both-Connectivity-Modes" class="headerlink" title="Management Capabilities for Both Connectivity Modes"></a>Management Capabilities for Both Connectivity Modes</h2><p><strong>Core Capabilities:</strong></p>
<p>As can be seen in the diagram below, both indirectly connected mode and directly connected mode offer the core management capabilities to customers. Customers can take advantage of built in management capabilities like automatic HA&#x2F;DR, self-service provisioning, elastic scale, authentication, etc.</p>
<p>In indirect mode, resources need to be created directly on the cluster, and manually projected into Azure using the <code>az arcdata dc export </code>command. All deployments and management are done locally using az CLI, kubectl and Azure Data Studio.</p>
<p>In the direct connected mode, the Arc resources such as Arc data controller, Arc SQL MI can also be created using Azure portal, in addition to using az CLI, kubectl and Azure Data Studio.</p>
<p><strong>Upgrades:</strong></p>
<p>Upgrades works exactly the same for both direct and indirect mode. For indirect mode upgrades, customers can use the az CLI, Kubernetes native tools and Azure Data Studio. For direct mode, in addition to using the kubectl, az CLI and Azure Data Studio, you can also use the Azure Portal for upgrading your Azure Arc data controller and Azure Arc SQL Managed Instance.</p>
<p><strong>Billing and Monitoring:</strong></p>
<p>Usage information needs to be uploaded to Azure for billing purposes at least once every 30 days. In indirect mode, this is a manual two step process requiring you to (1) export the usage to a json file and (2) uploading this usage file to Azure using az CLI commands. In direct mode, these  steps are automatically performed by a built-in backend service. </p>
<p>Optionally, Monitoring metrics and logs can also be uploaded to Azure, in both direct and indirect modes. In the indirect mode, this can be done manually by running <em>az arcdata dc export</em> command followed by an <em>az arcdata dc upload</em> command, for both metrics and logs. In the direct mode, this can be automated by configuring automatic uploads of metrics and&#x2F;or logs. This automatic upload can either be set during the Azure Arc data controller deployment, or by updating the Arc data controller post deployment.</p>
<p><img src="/../images/image-20240430232013053.png" alt="image-20240430232013053"></p>
<p>The choice of connectivity mode is intentional and should be made prior to the deployment and this setting cannot be changed post deployment. We encourage customers to use the connectivity mode that best supports their use case. Data Services provides customers with the choice to use both modes for their specific needs. In both direct and indirect mode, the core SQL functionality remains the same and the management features work differently. As a result, the Arc Data Services platform provides you with a broad range of options for now or in the future.</p>
<p>Get started with a <a href="https://docs.microsoft.com/en-us/azure/azure-arc/data/create-complete-managed-instance-directly-connected">directly connected mode deployment</a> and <a href="https://docs.microsoft.com/en-us/azure/azure-arc/data/create-complete-managed-instance-indirectly-connected?tabs=linux">indirectly connected mode deployment </a>today.</p>
<hr>
<p><a href="https://techcommunity.microsoft.com/t5/azure-arc-blog/directly-connected-mode-v-indirectly-connected-mode-for-azure/ba-p/3296657">https://techcommunity.microsoft.com/t5/azure-arc-blog/directly-connected-mode-v-indirectly-connected-mode-for-azure/ba-p/3296657</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>Docker network</title>
    <url>/2022/12/30-Docker-network/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="Docker网路基础理论"><a href="#Docker网路基础理论" class="headerlink" title="Docker网路基础理论"></a>Docker网路基础理论</h2><table>
<thead>
<tr>
<th align="center">Docker网络模式</th>
<th align="center">配置</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">host模式</td>
<td align="center">–net&#x3D;host</td>
<td align="center">容器和宿主机共享Network namespace。<br/>容器将不会虚拟出自己的网卡，配置自己的IP 等，而是使用宿主机的IP和端口。</td>
</tr>
<tr>
<td align="center">container模式</td>
<td align="center">–net&#x3D;container:NAME_or_ID</td>
<td align="center">容器和另外一个容器共享Network namespace.kubernetes中的pod就是多个容器共享一个Network namespace。创建的容器不会创建自己的网卡，配置自己的 IP， 而是和一个指定的容器共享IP、端口范围。</td>
</tr>
<tr>
<td align="center">none模式</td>
<td align="center">–net&#x3D;none</td>
<td align="center">容器有独立的Network namespace，并没有对其进行任何网络设置，如分配veth pair和网桥连接，配置IP等。该模式关闭了容器的网络功能。</td>
</tr>
<tr>
<td align="center">bridge模式</td>
<td align="center">–net&#x3D;bridge</td>
<td align="center">(默认模式)。此模式会为每一个容器分配、设置IP等，并将容器连接到一个docker0虚拟网桥，通过docker0网桥以及Iptable nat表配置与宿主机通信</td>
</tr>
<tr>
<td align="center">Macvlan</td>
<td align="center">无</td>
<td align="center">容器具备Mac地址，使其显示为网络上的物理 设备</td>
</tr>
<tr>
<td align="center">Overlay</td>
<td align="center">无</td>
<td align="center">(覆盖网络): 利用VXLAN实现的bridge模式</td>
</tr>
</tbody></table>
<h3 id="Bridge模式-连接到Docker0网桥，Docker0再和宿主及通信，Docker0作为容器-网络的网关"><a href="#Bridge模式-连接到Docker0网桥，Docker0再和宿主及通信，Docker0作为容器-网络的网关" class="headerlink" title="Bridge模式(连接到Docker0网桥，Docker0再和宿主及通信，Docker0作为容器 网络的网关)"></a>Bridge模式(<code>连接到Docker0网桥，Docker0再和宿主及通信，Docker0作为容器 网络的网关</code>)</h3><ul>
<li><p>docker使用Linux桥接网卡，在宿主机虚拟一个docker容器网桥（docker0），docker启动一个容器时会根据docker网桥的网段分配给容器一个IP地址，称为Container-IP，同时Docker网桥是每个容器的默认网络网关。因为在同一宿主机内的容器都接入同一个网桥，这样容器之间就能够通过容器的Container-IP直接通信。</p>
</li>
<li><p>docker网桥是宿主机虚拟出来的，并不是真实存在的网络设备，外部网络是无法寻址到的，这也意味着外部网络无法通过直接Container-IP访问到容器。</p>
</li>
<li><p>如果容器希望外部访问能够访问到，可以通过映射容器端口到宿主主机(端口映射)，即docker run创建容器时候通过-p或-P参数来启用，访问容器的时候就通过宿主机IP:容器端口访问容器。</p>
</li>
</ul>
<p><img src="/../images/v2-1d0f6cf1b79010467fe9dcd55465384e_1440w.webp" alt="img"></p>
<h3 id="Host-模式-和宿主机共用IP"><a href="#Host-模式-和宿主机共用IP" class="headerlink" title="Host 模式(和宿主机共用IP)"></a>Host 模式(<code>和宿主机共用IP</code>)</h3><ul>
<li>如果启动容器的时候使用host模式，那么这个容器将不会获得一个独立的Network Namespace，而是和宿主机共用一个Network Namespace。容器将不会虚拟出自己的网卡，配置自己的IP等，而是使用宿主机的IP和端口。但是，容器的其他方面，如文件系统、进程列表等还是和宿主机隔离的</li>
</ul>
<p><img src="/../images/v2-8195e42c05a0be0dc1cf5803b63ebcd8_1440w.jpeg" alt="img"></p>
<h3 id="Container模式-多个容器共用一个IP"><a href="#Container模式-多个容器共用一个IP" class="headerlink" title="Container模式(多个容器共用一个IP)"></a>Container模式(<code>多个容器共用一个IP</code>)</h3><ul>
<li><p>这个模式指定新创建的容器和已经存在的一个容器共享一个 Network Namespace，而不是和宿主机共享。新创建的容器不会创建自己的网卡，配置自己的 IP，而是和一个指定的容器共享 IP、端口范围等。同样，两个容器除了网络方面，其他的如文件系统、进程列表等还是隔离的。两个容器的进程可以通过 lo 网卡设备通信。</p>
<p><img src="/../images/v2-6a7315a99af7b45e5dae554f0a5d6e33_1440w.webp" alt="img"></p>
</li>
</ul>
<h3 id="None-模式"><a href="#None-模式" class="headerlink" title="None 模式"></a>None 模式</h3><ul>
<li>使用none模式，Docker容器拥有自己的Network Namespace，但是，并不为Docker容器进行任何网络配置。Docker容器没有网卡、IP、路由等信息。需要我们自己为Docker容器添加网卡、配置IP等。</li>
<li>这种网络模式下容器只有lo回环网络，没有其他网卡。none模式可以在容器创建时通过<code>--network=none</code>来指定。*<em>这种类型的网络没有办法联网，封闭的网络能很好的保证容器的安全性。</em></li>
</ul>
<h2 id=""><a href="#" class="headerlink" title=""></a><img src="/../images/v2-9307da908b8f0c641cf721d2abb774b5_1440w.jpeg" alt="img"></h2><h3 id="Macvlan"><a href="#Macvlan" class="headerlink" title="Macvlan"></a>Macvlan</h3><p><a href="https://www.cnblogs.com/bakari/p/10893589.html">https://www.cnblogs.com/bakari/p/10893589.html</a></p>
<h3 id="overlay"><a href="#overlay" class="headerlink" title="overlay"></a>overlay</h3><p><a href="https://dockertips.readthedocs.io/en/latest/docker-swarm/overlay-network.html">https://dockertips.readthedocs.io/en/latest/docker-swarm/overlay-network.html</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Dockerfile Tutorial</title>
    <url>/2023/01/14-Dockerfile-How-to/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p> Very detailed tutorial on <code>Dockerfile</code>.</p>
<h4 id="FROM"><a href="#FROM" class="headerlink" title="FROM"></a><code>FROM</code></h4><p>基础<code>image</code>的来源。</p>
<ul>
<li><p>FROM <code>&lt;repository&gt;</code>:<code>[tag]</code></p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">FROM</span> busybox <span class="hljs-comment"># will pull latest tag by default</span><br><span class="hljs-keyword">FROM</span> busybox:latest <span class="hljs-comment"># 默认使用hub.docker.com 仓库image</span><br><span class="hljs-keyword">FROM</span> registry.cn-shenzhen.aliyuncs.com/abo/devops:v1<br></code></pre></td></tr></table></figure>
</li>
<li><p>FROM <code>&lt;repository&gt;</code>@<code>&lt;digest&gt;</code></p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">FROM</span> alpine@sha256:d7342993700f8cd7aba8496c2d0e57be0666e80b4c441925fc6f9361fa81d10e<br><span class="hljs-comment"># docker pull 通过digest方式 </span><br>docker pull alpine@sha256:d7342993700f8cd7aba8496c2d0e57be0666e80b4c441925fc6f9361fa81d10e<br></code></pre></td></tr></table></figure></li>
</ul>
<h4 id="MAINTANTIER"><a href="#MAINTANTIER" class="headerlink" title="MAINTANTIER "></a><code>MAINTANTIER </code></h4><p>添加维护者等信息。</p>
<ul>
<li><code>MAINTANTIER</code> <code>&lt;infomatin&gt; </code></li>
</ul>
<p>  注意： <code>MAINTANTIER</code>语法已经被新的<code>LABEL</code>替代</p>
  <figure class="highlight dockerfile"><table><tr><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-comment"># 维护着信息或者作者信息，可有可无</span><br>MAINTANTIER <span class="hljs-string">&quot;Peter&lt;westlife@aliyun.com&gt;&quot;</span><br></code></pre></td></tr></table></figure>

<h4 id="LABEL"><a href="#LABEL" class="headerlink" title="LABEL "></a><code>LABEL </code></h4><p>作用和<code>MAINTANTIER</code>一摸一样</p>
<p>语法格式：LABEL <code>&lt;key&gt;=&lt;vale&gt;</code> <code>&lt;key&gt;=&lt;vale&gt;</code> …</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">LABEL</span> author=<span class="hljs-string">&quot;Peter&lt;westlife<span class="hljs-variable">@aliyun</span>.com&gt;&quot;</span><br></code></pre></td></tr></table></figure>

<h4 id="COPY"><a href="#COPY" class="headerlink" title="COPY "></a><code>COPY </code></h4><p>复制文件或者目录.</p>
<ul>
<li><p><code>COPY &lt;src&gt; &lt;dest&gt;</code></p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-comment"># 所有的copy都指的是Dockerfile当前目录下的文件来讲的</span><br><span class="hljs-keyword">COPY</span><span class="language-bash"> test.tar.gz /data/web/</span><br></code></pre></td></tr></table></figure>
</li>
<li><p><code>COPY</code> <code>[&quot;&lt;src&gt;&quot;</code>, …<code>&quot;&lt;dest&gt;&quot;]</code></p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">COPY</span><span class="language-bash"> [<span class="hljs-string">&quot;test.tar.gz&quot;</span>,<span class="hljs-string">&quot;/data/web/&quot;</span>]</span><br></code></pre></td></tr></table></figure>
</li>
<li><p>注意事项</p>
<ul>
<li><p><code>src</code> 支持通配符</p>
</li>
<li><p><code>dest</code> 建议使用绝对路径</p>
</li>
<li><p>路径中不能存在空白字符，常用第二种格式</p>
</li>
<li><p><code>src</code> 是目录，只会复制其下层目录以及文件，不会复制<code>src</code> 目录本身到<code>dest</code></p>
</li>
<li><p>指定了多个<code>src</code>或者使用了通配符，<code>dest</code>必须是同一个，且dest必须以<code>/</code>结尾</p>
</li>
</ul>
</li>
</ul>
<h4 id="ADD"><a href="#ADD" class="headerlink" title="ADD"></a><code>ADD</code></h4><p>复制添加文件或者目录.</p>
<ul>
<li><p><code>ADD</code> <code>&lt;src&gt; &lt;dest&gt;</code></p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-comment"># 复制压缩包以及index.html文件到/data/web/目录下,并且压缩包会被自动解压，仅仅本地src才会被解压</span><br><span class="hljs-keyword">ADD</span><span class="language-bash"> test.tar.gz index.html /data/web/</span><br><span class="hljs-comment"># 支持SRC为URL，请注意dest后面带/和不带区别</span><br><span class="hljs-keyword">ADD</span><span class="language-bash"> http://aliyun.com/test.tar.gz /data/web <span class="hljs-comment"># 添加文件并且被命名为web</span></span><br><span class="hljs-keyword">ADD</span><span class="language-bash"> http://aliyun.com/test.tar.gz /data/web/ <span class="hljs-comment"># 添加文件到/data/web/</span></span><br></code></pre></td></tr></table></figure>
</li>
<li><p><code>ADD</code> <code> [&quot;&lt;src&gt;&quot;, ...&quot;&lt;dest&gt;&quot;]</code></p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-comment"># 添加URL的压缩文件和本地index文件到目标目录</span><br><span class="hljs-keyword">ADD</span><span class="language-bash"> [<span class="hljs-string">&quot;http://5.5.5.100:8000/software/linux/nginx-1.18.0.tar.gz&quot;</span>,<span class="hljs-string">&quot;index.html&quot;</span>,<span class="hljs-string">&quot;/data/web/&quot;</span>]</span><br><span class="hljs-comment"># 添加本地的两个文件到目标目录</span><br><span class="hljs-keyword">ADD</span><span class="language-bash"> [<span class="hljs-string">&quot;test.tar.gz&quot;</span>,<span class="hljs-string">&quot;index.html&quot;</span>,<span class="hljs-string">&quot;/data/web/&quot;</span>]</span><br></code></pre></td></tr></table></figure></li>
</ul>
<h4 id="VOLUME"><a href="#VOLUME" class="headerlink" title="VOLUME"></a><code>VOLUME</code></h4><p>用于在<code>image</code>中创建一个挂载点，以挂载<code>docker host</code>上的卷或者其他容器上的卷</p>
<ul>
<li><p><code>VOLUME</code>  <code>&lt;mointpoint&gt;</code></p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">VOLUME</span><span class="language-bash"> /data/mydata/ </span><br></code></pre></td></tr></table></figure>
</li>
<li><p><code>VOLUME</code>  <code>[&quot;&lt;mountpoint&gt;&quot;]</code></p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">VOLUME</span><span class="language-bash"> [<span class="hljs-string">&quot;/data/mydata/&quot;</span>]</span><br></code></pre></td></tr></table></figure></li>
</ul>
<blockquote>
<p>注意：如果挂载点路径此前存在文件，&#96;&#96;docker run&#96;后会在挂载完成后将此前文件复制到新的挂载卷中</p>
</blockquote>
<h4 id="EXPOSE"><a href="#EXPOSE" class="headerlink" title="EXPOSE "></a><code>EXPOSE </code></h4><p>容器运行起来向外需要暴露的端口。</p>
<p><code>EXPOSE</code> <code>&lt;port&gt;</code>&#x2F;<code>&lt;[tcp|udp]&gt;</code></p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-comment"># 可以定义多个端口暴露</span><br><span class="hljs-keyword">EXPOSE</span> <span class="hljs-number">80</span>/tcp <span class="hljs-number">2222</span>/udp<br></code></pre></td></tr></table></figure>

<h4 id="ENV"><a href="#ENV" class="headerlink" title="ENV"></a>ENV</h4><p>容器定义环境变量，可以被<code>ENV </code> <code>ADD</code> <code>COPY</code> 所调用</p>
<ul>
<li><p><code>ENV</code> <code>&lt;key&gt;</code> <code>&lt;value&gt;</code></p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-comment">#  这种方式中，key后面的所有内容都会被认为是value的值，因此这种只能定义一个变量</span><br><span class="hljs-keyword">ENV</span> HTTP_ROOT /usr/local/nginx/html/<br></code></pre></td></tr></table></figure>
</li>
<li><p><code>ENV</code> <code>&lt;key&gt;=&lt;value&gt;</code></p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-comment"># 此种方式可以定义多个变量</span><br><span class="hljs-keyword">ENV</span> HTTP_ROOT=<span class="hljs-string">&quot;/usr/local/nginx/html/&quot;</span> \<br>		<span class="hljs-keyword">WORKDIR</span><span class="language-bash">=<span class="hljs-string">&quot;/data/web/&quot;</span></span><br>		PORT=<span class="hljs-number">80</span><br></code></pre></td></tr></table></figure>

<p>调用方式：<code>$HTTP_ROOT</code>  or  <code>$&#123;HTTP_ROOT&#125;</code></p>
</li>
</ul>
<h4 id="RUN"><a href="#RUN" class="headerlink" title="RUN"></a><code>RUN</code></h4><p>**<code>docker build</code>**过程中需要运行的命令.</p>
<ul>
<li><p><code>RUN</code> <code>&lt;command&gt;</code></p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-comment"># 这种方式是以 /bin/sh -c 来运行mkdir，容器PID不为1，不能接受unix信号</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> <span class="hljs-built_in">mkdir</span> -p /data/web</span><br></code></pre></td></tr></table></figure>
</li>
<li><p><code>RUN</code>  [“<code>&lt;command&gt;</code>“,”<code>&lt;参数1&gt;</code>“,”<code>&lt;参数n&gt;</code>“]</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-comment"># 这种方式不是以 /bin/sh -c 来运行mkdir</span><br><span class="hljs-keyword">ENV</span> HTTP_ROOT=<span class="hljs-string">&quot;/data/test/&quot;</span><br><span class="hljs-comment"># 以下三种方式均可创建指定目录</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> [<span class="hljs-string">&quot;mkdir&quot;</span>,<span class="hljs-string">&quot;-p&quot;</span>,<span class="hljs-string">&quot;<span class="hljs-variable">$HTTP_ROOT</span>&quot;</span>]</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> [<span class="hljs-string">&quot;mkdir&quot;</span>,<span class="hljs-string">&quot;-p <span class="hljs-variable">$HTTP_ROOT</span>&quot;</span>]</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> [<span class="hljs-string">&quot;mkdir&quot;</span>,<span class="hljs-string">&quot;p <span class="hljs-variable">$&#123;HTTP_ROOT&#125;</span>&quot;</span>] </span><br><span class="hljs-comment"># 如果要依赖shell特性以这种方式运行运行，请参照下面的格式，标准写法，推荐用以下方式</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> [<span class="hljs-string">&quot;/bin/bash&quot;</span>,-c<span class="hljs-string">&quot;,&quot;</span><span class="hljs-built_in">mkdir</span><span class="hljs-string">&quot;, &quot;</span>-p<span class="hljs-string">&quot;,&quot;</span><span class="hljs-variable">$HTTP_ROOT</span><span class="hljs-string">&quot;]</span></span><br></code></pre></td></tr></table></figure></li>
</ul>
<h4 id="CMD"><a href="#CMD" class="headerlink" title="CMD"></a>CMD</h4><p><strong><code>docker run</code><strong>过程中，容器运行起来需要执行的命令，注意和<code>RUN</code>做对比.</strong><code>RUN</code>是构建过程需要的命令，<code>CMD</code>是容器运行起来运行的命令</strong>.</p>
<ul>
<li><p><code>CMD</code>  <code>&lt;完整的命令以及参数&gt;</code>  </p>
<p><strong><code>CMD</code>指定的命令可以被<code>docker run</code>后面的命令覆盖</strong>!!!</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">ENV</span> HTTP_ROOT=<span class="hljs-string">&quot;/data/test/&quot;</span><br><span class="hljs-keyword">CMD</span><span class="language-bash"> /bin/httpd -f -h <span class="hljs-variable">$HTTP_ROOT</span></span><br></code></pre></td></tr></table></figure>
</li>
<li><p><code>CMD</code>  [“<code>&lt;command&gt;</code>“,”<code>&lt;参数1&gt;</code>“,”<code>&lt;参数n&gt;</code>“]</p>
<p>这种方式 <strong>方括号内无法读取环境变量参数</strong></p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">ENV</span> HTTP_ROOT=<span class="hljs-string">&quot;/data/test/&quot;</span><br><span class="hljs-comment"># 错误写法</span><br><span class="hljs-keyword">CMD</span><span class="language-bash"> [<span class="hljs-string">&quot;/bin/httpd&quot;</span>,<span class="hljs-string">&quot;-f&quot;</span>,<span class="hljs-string">&quot;-h&quot;</span>,<span class="hljs-string">&quot;<span class="hljs-variable">$HTTP_ROOT</span>&quot;</span>]  <span class="hljs-comment"># 这种方式CMD无法获取变量参数，</span></span><br><span class="hljs-comment"># 正确写法</span><br><span class="hljs-keyword">CMD</span><span class="language-bash"> [<span class="hljs-string">&quot;/bin/httpd&quot;</span>,<span class="hljs-string">&quot;-f&quot;</span>,<span class="hljs-string">&quot;-h /data/web/html/&quot;</span>]</span><br><span class="hljs-keyword">CMD</span><span class="language-bash"> [<span class="hljs-string">&quot;/bin/httpd&quot;</span>,<span class="hljs-string">&quot;-f&quot;</span>,<span class="hljs-string">&quot;-h&quot;</span>,<span class="hljs-string">&quot;/data/web/html/&quot;</span>]</span><br></code></pre></td></tr></table></figure>
</li>
<li><p><code>CMD</code> [“<code>&lt;参数1</code>&gt;”,”<code>&lt;参数2&gt;</code>“,”<code>&lt;参数n&gt;</code>“]    </p>
<p>此种方式用于为<code>ENTRYPOINT</code> 提供默认参数</p>
</li>
</ul>
<h4 id="ENTRYPOINT"><a href="#ENTRYPOINT" class="headerlink" title="ENTRYPOINT"></a>ENTRYPOINT</h4><p>功能和<code>CMD</code>一样,但是有差异，**<code>ENTRYPOINT</code> 运行的命令不可以被<code>docker run</code>后面的命令覆盖**</p>
<ul>
<li><p><code>ENTRYPOINT</code> <code>[&quot;&lt;command&gt;&quot;] </code></p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-comment"># 为ENTRYPOINT提供运行参数,作用等于 CMD [&quot;/bin/httpd&quot;,&quot;-f&quot;,&quot;-h&quot;,&quot;/data/web/html&quot;]</span><br><span class="hljs-keyword">CMD</span><span class="language-bash"> [<span class="hljs-string">&quot;-f&quot;</span>,<span class="hljs-string">&quot;-h&quot;</span>,<span class="hljs-string">&quot;/data/web/html&quot;</span>]</span><br><span class="hljs-keyword">ENTRYPOINT</span><span class="language-bash"> [<span class="hljs-string">&quot;/bin/httpd&quot;</span>]</span><br></code></pre></td></tr></table></figure>
</li>
<li><p>示例</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">####</span><br>vim entrypoint.sh<br><span class="hljs-comment">#!/bin/sh</span><br><span class="hljs-built_in">cat</span> &gt;/etc/nginx/conf.d/www.conf &lt;&lt; <span class="hljs-string">EOF</span><br><span class="hljs-string">server &#123;</span><br><span class="hljs-string">  server_name $HOSTNAME;</span><br><span class="hljs-string">  listen $&#123;IP:-0.0.0.0&#125;:$&#123;PORT:-80&#125;;   # -80和-0.0.0.0均为预设变量语法格式，如果未有变量输入将启动默认参数</span><br><span class="hljs-string">  root $&#123;NGX_ROOT:-/usr/share/nginx/html&#125;;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">EOF</span><br><span class="hljs-built_in">exec</span> <span class="hljs-string">&quot;<span class="hljs-variable">$@</span>&quot;</span>    <span class="hljs-comment"># 此脚本运行完成后进程将被其所有参数替换</span><br><span class="hljs-comment">#####</span><br>vim Dockerfile<br>FROM nginx:1.18-alpine<br>LABEL author=<span class="hljs-string">&quot;Jason Hu&quot;</span><br>ENV NGX_ROOT=<span class="hljs-string">&quot;/data/nginx/html/&quot;</span><br>ADD entrypoint.sh /bin/ <br>ADD	index.html <span class="hljs-variable">$NGX_ROOT</span><br>RUN <span class="hljs-built_in">chmod</span> +x /bin/entrypoint.sh <br>ENTRYPOINT [<span class="hljs-string">&quot;/bin/entrypoint.sh&quot;</span>]<br>CMD  [<span class="hljs-string">&quot;/usr/sbin/nginx&quot;</span>,<span class="hljs-string">&quot;-g&quot;</span>,<span class="hljs-string">&quot;daemon off;&quot;</span>]<br><span class="hljs-comment">####</span><br>docker build -t nginx:lab .<br><span class="hljs-comment"># use build image but web page still is the default not the one we defined, I&#x27;m thinking where did I miss?</span><br>docker run --<span class="hljs-built_in">rm</span> -itd -p 80:80 nginx:lab &amp;&amp; curl localhost<br></code></pre></td></tr></table></figure></li>
</ul>
<h4 id="HEALTHCHECK"><a href="#HEALTHCHECK" class="headerlink" title="HEALTHCHECK"></a><code>HEALTHCHECK</code></h4><p>用于容器的健康检查.</p>
<ul>
<li><p><code>HEALTHCHECK</code> [options] <code>CMD</code> <code>&lt;command&gt;</code></p>
<ul>
<li><code>options</code> 可以有以下几种：<ol>
<li><code>--interval</code>&#x3D;<code>&lt;value&gt;</code>  # default 30s</li>
<li><code>--timeout</code>&#x3D;<code>&lt;value&gt;</code>   # default 30s</li>
<li><code>--start-period</code>&#x3D;<code>&lt;value&gt;</code> # default 0s</li>
<li><code>—retries</code>&#x3D;<code>&lt;value&gt;</code>  # default 3</li>
</ol>
</li>
</ul>
<p>在容器内部运行命令检查健康状态,检查的结果状态值有以下三种：</p>
<ol>
<li><code>0</code>—<code>succeed</code> <code>healthy</code></li>
<li><code>1</code>— <code>unhealthy</code></li>
<li><code>2</code>— <code>reserved</code></li>
</ol>
</li>
<li><p><code>HEALTHCHECK</code> <code>NONE </code></p>
</li>
</ul>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">HEALTHCHECK</span><span class="language-bash"> --interval=5m --<span class="hljs-built_in">timeout</span>=3s --start-period=5s \</span><br><span class="language-bash">CMD wegt -O - -q http://<span class="hljs-variable">$&#123;IP:-0.0.0.0&#125;</span>:&#123;PORT:-80&#125;/</span><br><span class="hljs-comment"># CMD curl -f http://localhost/ || exit 1</span><br></code></pre></td></tr></table></figure>

<h3 id="SHELL"><a href="#SHELL" class="headerlink" title="SHELL"></a><code>SHELL</code></h3><p>指定默认<code>shell</code>来运行命令，<code>Linux</code> 不指定默认是 <code>[&quot;/bin/sh&quot;,&quot;-c&quot;]</code> , Windows 默认不指定是<code>[&quot;CMD&quot;,&quot;/S&quot;,&quot;/C&quot;] </code>,<code>SHELL</code>可以在<code>Dockerfil</code>中出现多次</p>
<p><code>SHELL</code> <code>[&quot;&lt;command&gt;&quot;,&quot;&lt;参数&gt;&quot;]</code></p>
<ul>
<li><p><code>STOPSIGNAL </code></p>
<p>容器接受的unix信号来退出容器.</p>
<p><code>STOPSIGNAL </code> <code>&lt;signal&gt;</code></p>
</li>
<li><p><code>ARG</code></p>
<p>在<code>docker build</code> 过程中定义的变量，可以使用<code>--build-arg &lt;key&gt;=&lt;value&gt;</code>来引入</p>
<p><code>ARG</code>  <code>&lt;key&gt;=&lt;value&gt;</code></p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">ARG</span> author=scofield<br><span class="hljs-keyword">LABEL</span><span class="language-bash"> maintainer=<span class="hljs-variable">$&#123;author&#125;</span></span><br>docker build --build-<span class="hljs-keyword">arg</span> author=westlife -t test:v10 .<br><span class="hljs-comment"># 新创建的出来的镜像 maintainer=westlife</span><br></code></pre></td></tr></table></figure>
</li>
<li><p><code>ONBUILD</code></p>
<p>用于在<code>Dockerfile</code>中定义一个触发器,自己创建的<code>image</code> 被另外一个<code>Dockerfile</code>用作基础镜像时会执行的指令</p>
<p>语法格式：</p>
<p><code>ONBUILD</code> <code>&lt;Dockerfile指令&gt;</code></p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">ONBUILD</span> <span class="hljs-keyword">ADD</span><span class="language-bash"> http://nginx.org/download/nginx-1.19.4.tar.gz /data/nginx/</span><br></code></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Dockerfile</tag>
      </tags>
  </entry>
  <entry>
    <title>ELK Tutorial</title>
    <url>/2022/12/23-ELK-Tutorial/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>ElasticStack 最初的核心是 ELK (Elasticsearch, Logstash, Kibana) ，后又新增了一个FileBeat。</p>
<h3 id="ELK架构"><a href="#ELK架构" class="headerlink" title="ELK架构"></a>ELK架构</h3><ul>
<li>Elasticsearch ：分布式搜索引擎。基于 Lucene，可用于全文检索、结构化检索和分析。</li>
<li>Logstash ：数据收集处理引擎。支持动态搜集数据，处理、存储数据。</li>
<li>Kibana ：可视化平台。能够搜索、展示存储在 Elasticsearch 中索引数据。</li>
<li>Filebeat ：轻量级数据收集引擎。隶属于Beats，替代原先的 Logstash-fowarder 。</li>
</ul>
<p><a href="https://cdn.jsdelivr.net/gh/wujun234/images@master/1545712502366.png"><img src="/../images/1545712502366.png" alt="img"></a></p>
<h3 id="日志分析平台流程"><a href="#日志分析平台流程" class="headerlink" title="日志分析平台流程"></a>日志分析平台流程</h3><ol>
<li>把分散在各个机器的日志汇总到一个地方(Shipper, Broker, Indexer)</li>
<li>把这些日志用某种方式保存并索引起来(Search &amp; Storage)</li>
<li>需要的时候直接在汇总的日志中查询(Web Interface)</li>
</ol>
<p><a href="https://cdn.jsdelivr.net/gh/wujun234/images@master/1545712503433.gif"><img src="/../images/1545712503433.png" alt="img"></a></p>
<h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>ELK依赖JDK</p>
<p>ELK下载：<a href="https://www.elastic.co/downloads/">https://www.elastic.co/downloads/</a></p>
<h3 id="安装-Elasticsearch"><a href="#安装-Elasticsearch" class="headerlink" title="安装 Elasticsearch"></a>安装 Elasticsearch</h3><ol>
<li>官网下载解压。</li>
<li>安装Head插件，可以通过localhost:9200&#x2F;_plugin&#x2F;head查看集群状态</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">./bin/plugin install mobz/elasticsearch-head<br></code></pre></td></tr></table></figure>

<ol>
<li>编辑配置文件elasticsearch.yml</li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">cluster.name=es_cluster</span><br><span class="hljs-string">node.name=node0</span><br><span class="hljs-string">path.data=/tmp/elasticsearch/data</span><br><span class="hljs-string">path.logs=/tmp/elasticsearch/logs</span><br><span class="hljs-string">network.host=centos2</span><br><span class="hljs-string">network.port=9200</span><br></code></pre></td></tr></table></figure>

<ol>
<li>运行 bin&#x2F;elasticsearch （Windows 上运行 bin\elasticsearch.bat）启动</li>
<li>验证运行成功：REST 访问访问 <a href="http://localhost:9200/">http://localhost:9200/</a></li>
</ol>
<h3 id="安装-Logstash"><a href="#安装-Logstash" class="headerlink" title="安装 Logstash"></a>安装 Logstash</h3><ol>
<li>官网下载解压。</li>
<li>添加logstash.conf，指定Input和Output及插件，以log4j输入和ElasticSearch输出为例：</li>
</ol>
<figure class="highlight nginx"><table><tr><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">input</span> &#123; <br>  <span class="hljs-section">log4j</span> &#123;<br>    <span class="hljs-attribute">mode</span> =&gt; <span class="hljs-string">&quot;server&quot;</span><br>    host =&gt; <span class="hljs-string">&quot;localhost&quot;</span><br>    port =&gt; <span class="hljs-number">4567</span><br>  &#125;<br>&#125;<br>filter &#123;<br>  <span class="hljs-comment">#Only matched data are send to output.</span><br>&#125;<br><span class="hljs-section">output</span> &#123;<br>    <span class="hljs-section">elasticsearch</span> &#123; <br>        <span class="hljs-attribute">action</span> =&gt; <span class="hljs-string">&quot;index&quot;</span><br>        hosts =&gt; [<span class="hljs-string">&quot;localhost:9200&quot;</span>] <br>        index  =&gt; <span class="hljs-string">&quot;applog&quot;</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>

<ol>
<li>运行 bin&#x2F;logstash -f logstash.conf （Windows 上运行bin&#x2F;logstash.bat -f logstash.conf）</li>
</ol>
<h3 id="安装-Kibana"><a href="#安装-Kibana" class="headerlink" title="安装 Kibana"></a>安装 Kibana</h3><ol>
<li>官网下载解压。</li>
<li>修改 config&#x2F;kibana.yml 配置文件，设置 elasticsearch.url 指向 Elasticsearch 实例。</li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">server.port:</span> <span class="hljs-number">5601</span><br><span class="hljs-attr">server.host:</span> <span class="hljs-string">“localhost”</span><br><span class="hljs-attr">elasticsearch.url:</span> <span class="hljs-string">http://localhost:9200</span><br><span class="hljs-attr">kibana.index:</span> <span class="hljs-string">“.kibana”</span><br></code></pre></td></tr></table></figure>

<ol>
<li>运行 bin&#x2F;kibana （Windows 上运行 bin\kibana.bat）启动</li>
<li>在浏览器上访问 <a href="http://localhost:5601/">http://localhost:5601</a></li>
</ol>
<h3 id="安装-Filebeat"><a href="#安装-Filebeat" class="headerlink" title="安装 Filebeat"></a>安装 Filebeat</h3><ol>
<li>官网下载解压。</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">curl -L -O https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-5.1.1-x86_64.rpm<br>sudo rpm -vi filebeat-5.1.1-x86_64.rpm<br></code></pre></td></tr></table></figure>

<ol>
<li>配置filebeat.yml input</li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">filebeat.prospectors:</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">input_type:</span> <span class="hljs-string">log</span><br>  <span class="hljs-attr">paths:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">/apps/logs/*/info.log</span><br></code></pre></td></tr></table></figure>

<ol>
<li>配置filebeat.yml output</li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">output.logstash:</span><br>  <span class="hljs-attr">hosts:</span> [<span class="hljs-string">&quot;127.0.0.1:5044&quot;</span>]<br></code></pre></td></tr></table></figure>

<ol>
<li>启动filebeat</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">sudo /etc/init.d/filebeat start<br></code></pre></td></tr></table></figure>

<h2 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h2><h3 id="Filebeat工作原理"><a href="#Filebeat工作原理" class="headerlink" title="Filebeat工作原理"></a>Filebeat工作原理</h3><p>Filebeat由两个主要组件组成：prospectors 和 harvesters。这两个组件协同工作将文件变动发送到指定的输出中。</p>
<p><a href="https://cdn.jsdelivr.net/gh/wujun234/images@master/1545712503649.png"><img src="/../images/1545712503649.png" alt="img"></a></p>
<ul>
<li><strong>Harvester（收割机）</strong> :负责读取单个文件内容。<br>对每个文件，启动一个Harvester，逐行读取文件内容，并发送到指定输出中。<br>如果文件在Harvester运行的时候被重命名或者被删除，Filebeat会继续读取此文件,在Harvester关闭之前，磁盘不会被释放。默认情况filebeat会保持文件打开的状态，直到达到close_inactive（如果此选项开启，filebeat会在指定时间内将不再更新的文件句柄关闭，时间从harvester读取最后一行的时间开始计时。若文件句柄被关闭后，文件发生变化，则会启动一个新的harvester。关闭文件句柄的时间不取决于文件的修改时间，若此参数配置不当，则可能发生日志不实时的情况，由scan_frequency参数决定，默认10s。Harvester使用内部时间戳来记录文件最后被收集的时间。例如：设置5m，则在Harvester读取文件的最后一行之后，开始倒计时5分钟，若5分钟内文件无变化，则关闭文件句柄。默认5m）。</li>
<li><strong>Prospector（勘测者）</strong>：负责管理Harvester并找到所有读取源。<br>Prospector会找到&#x2F;apps&#x2F;logs&#x2F;*目录下的所有info.log文件，并为每个文件启动一个Harvester。Prospector会检查每个文件，看Harvester是否已经启动，是否需要启动，或者文件是否可以忽略。若Harvester关闭，只有在文件大小发生变化的时候Prospector才会执行检查。只能检测本地的文件。</li>
</ul>
<p>Filebeat如何记录文件状态：</p>
<p>将文件状态记录在文件中（默认在&#x2F;var&#x2F;lib&#x2F;filebeat&#x2F;registry）。此状态可以记住Harvester收集文件的偏移量。若连接不上输出设备，如ES等，filebeat会记录发送前的最后一行，并再可以连接的时候继续发送。Filebeat在运行的时候，Prospector状态会被记录在内存中。Filebeat重启的时候，利用registry记录的状态来进行重建，用来还原到重启之前的状态。每个Prospector会为每个找到的文件记录一个状态，对于每个文件，Filebeat存储唯一标识符以检测文件是否先前被收集。</p>
<p>Filebeat如何保证事件至少被输出一次：</p>
<p>Filebeat之所以能保证事件至少被传递到配置的输出一次，没有数据丢失，是因为filebeat将每个事件的传递状态保存在文件中。在未得到输出方确认时，filebeat会尝试一直发送，直到得到回应。若filebeat在传输过程中被关闭，则不会再关闭之前确认所有时事件。任何在filebeat关闭之前为确认的时间，都会在filebeat重启之后重新发送。这可确保至少发送一次，但有可能会重复。可通过设置shutdown_timeout 参数来设置关闭之前的等待事件回应的时间（默认禁用）。</p>
<h3 id="Logstash工作原理"><a href="#Logstash工作原理" class="headerlink" title="Logstash工作原理"></a>Logstash工作原理</h3><p>Logstash事件处理有三个阶段：<code>inputs</code> → <code>filters</code> → <code>outputs</code>。是一个接收，处理，转发日志的工具。</p>
<p><a href="https://cdn.jsdelivr.net/gh/wujun234/images@master/1545712503755.png"><img src="/../images/1545712503755.png" alt="img"></a></p>
<p><strong>Input</strong>：输入数据到logstash。</p>
<p>一些常用的输入为：</p>
<ul>
<li>file：从文件系统的文件中读取，类似于tial -f命令</li>
<li>syslog：在514端口上监听系统日志消息，并根据RFC3164标准进行解析</li>
<li>redis：从redis service中读取</li>
<li>beats：从filebeat中读取</li>
</ul>
<p><strong>Filters</strong>：数据中间处理，对数据进行操作。</p>
<p>一些常用的过滤器为：</p>
<ul>
<li>grok：解析任意文本数据，Grok 是 Logstash 最重要的插件。它的主要作用就是将文本格式的字符串，转换成为具体的结构化的数据，配合正则表达式使用。内置120多个解析语法。<br>官方提供的grok表达式：<a href="https://github.com/logstash-plugins/logstash-patterns-core/tree/master/patterns">https://github.com/logstash-plugins/logstash-patterns-core/tree/master/patterns</a><br>grok在线调试：<a href="https://grokdebug.herokuapp.com/">https://grokdebug.herokuapp.com/</a></li>
<li>mutate：对字段进行转换。例如对字段进行删除、替换、修改、重命名等。</li>
<li>drop：丢弃一部分events不进行处理。</li>
<li>clone：拷贝 event，这个过程中也可以添加或移除字段。</li>
<li>geoip：添加地理信息(为前台kibana图形化展示使用)</li>
</ul>
<p><strong>Outputs</strong>：outputs是logstash处理管道的最末端组件。一个event可以在处理过程中经过多重输出，但是一旦所有的outputs都执行结束，这个event也就完成生命周期。</p>
<p>一些常见的outputs为：</p>
<ul>
<li>elasticsearch：可以高效的保存数据，并且能够方便和简单的进行查询。</li>
<li>file：将event数据保存到文件中。</li>
<li>graphite：将event数据发送到图形化组件中，一个很流行的开源存储图形化展示的组件。</li>
</ul>
<p><strong>Codecs</strong>：codecs 是基于数据流的过滤器，它可以作为input，output的一部分配置。Codecs可以帮助你轻松的分割发送过来已经被序列化的数据。</p>
<p>一些常见的codecs：</p>
<ul>
<li>json：使用json格式对数据进行编码&#x2F;解码。</li>
<li>multiline：将汇多个事件中数据汇总为一个单一的行。比如：java异常信息和堆栈信息。</li>
</ul>
<blockquote>
<p>推荐文档</p>
</blockquote>
<p><a href="https://www.digitalocean.com/community/tutorials/how-to-install-elasticsearch-logstash-and-kibana-elastic-stack-on-ubuntu-16-04">https://www.digitalocean.com/community/tutorials/how-to-install-elasticsearch-logstash-and-kibana-elastic-stack-on-ubuntu-16-04</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>ElasticStack</tag>
      </tags>
  </entry>
  <entry>
    <title>Fancy indexes module for the Nginx web server</title>
    <url>/2023/01/31-Fancy-indexes-module-for-the-Nginx-web-server/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=400 height=86 src="//music.163.com/outchain/player?type=2&id=5113327&auto=1&height=66"></iframe>
---

<h4 id="Fancy-indexes-module-for-the-Nginx-web-server"><a href="#Fancy-indexes-module-for-the-Nginx-web-server" class="headerlink" title="Fancy indexes module for the Nginx web server"></a>Fancy indexes module for the Nginx web server</h4><p><a href="https://github.com/aperezdc/ngx-fancyindex">https://github.com/aperezdc/ngx-fancyindex</a></p>
<h4 id="Installation-and-configuration"><a href="#Installation-and-configuration" class="headerlink" title="Installation and configuration"></a>Installation and configuration</h4><h5 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h5><ul>
<li><p><code>yum</code> install</p>
<p><a href="https://github.com/aperezdc/ngx-fancyindex#centos-rhel-fedora-linux">https://github.com/aperezdc/ngx-fancyindex#centos-rhel-fedora-linux</a></p>
</li>
<li><p><code>source code</code> install</p>
<p><a href="https://github.com/aperezdc/ngx-fancyindex#building">https://github.com/aperezdc/ngx-fancyindex#building</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">wget https://nginx.org/download/nginx-1.22.1.tar.gz<br>wget https://github.com/aperezdc/ngx-fancyindex/releases/download/v0.5.2/ngx-fancyindex-0.5.2.tar.xz<br>tar -xf ngx-fancyindex-0.5.2.tar.xz &amp;&amp; <span class="hljs-built_in">mv</span> ngx-fancyindex-0.5.2 ngx-fancyindex &amp;&amp; <span class="hljs-built_in">cd</span> ngx-fancyindex<br>tar -xvzf nginx-1.22.1.tar.gz &amp;&amp; <span class="hljs-built_in">cd</span> nginx-1.22.1<br>./configure --add-module=ngx-fancyindex ...<br>make -j 32 &amp;&amp; make install<br></code></pre></td></tr></table></figure></li>
</ul>
<h5 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h5><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@bo ~]<span class="hljs-comment"># nginx -V</span><br>nginx version: nginx/1.22.0<br>...<br>--add-module=ngx-fancyindex<br></code></pre></td></tr></table></figure>

<p>More usage of directives:</p>
<p><a href="https://github.com/aperezdc/ngx-fancyindex#directives">https://github.com/aperezdc/ngx-fancyindex#directives</a></p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;<br>	<span class="hljs-attribute">server_name</span> repo.bo.ms;<br>  <span class="hljs-attribute">listen</span> <span class="hljs-number">80</span>;<br>  <span class="hljs-section">location</span> / &#123;<br> 			<span class="hljs-attribute">root</span> /data/repo/;<br>      <span class="hljs-attribute">autoindex</span> <span class="hljs-literal">on</span>;<br>      <span class="hljs-attribute">fancyindex</span> <span class="hljs-literal">on</span>;<br>			<span class="hljs-attribute">fancyindex_exact_size</span> <span class="hljs-literal">off</span>;<br>      <span class="hljs-attribute">create_full_put_path</span> <span class="hljs-literal">on</span>;<br>      <span class="hljs-attribute">client_max_body_size</span> <span class="hljs-number">0M</span>;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>

<p><img src="/../images/image-20230131154703933.png" alt="image-20230131154703933"></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>Fancyindex for Nginx</title>
    <url>/2024/05/31-Fancyindex-for-Nginx/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="fancyindex"><a href="#fancyindex" class="headerlink" title="fancyindex"></a>fancyindex</h1><p>Nginx with Fancyindex : <a href="https://github.com/vonsy/fancyindex">https://github.com/vonsy/fancyindex</a></p>
<p><a href="http://localhost/private">http://localhost/private</a>, Login required <a href="https://github.com/vonsy/fancyindex/blob/main/img/private-permission-login.png"><img src="https://upic-1253467112.cos.ap-chengdu.myqcloud.com/uPic/private-permission-login.png" alt="login"></a></p>
<p><a href="http://localhost/private">http://localhost/private</a> <a href="https://github.com/vonsy/fancyindex/blob/main/img/private-after-login.png"><img src="https://upic-1253467112.cos.ap-chengdu.myqcloud.com/uPic/private-after-login.png" alt="after login"></a></p>
<p><a href="http://localhsot/">http://localhsot/</a>, No user, password required <a href="https://github.com/vonsy/fancyindex/blob/main/img/public-no-user-password-required.png"><img src="https://upic-1253467112.cos.ap-chengdu.myqcloud.com/uPic/public-no-user-password-required.png" alt="no user,password required "></a></p>
<h3 id="Docker-Run"><a href="#Docker-Run" class="headerlink" title="Docker Run"></a>Docker Run</h3><figure class="highlight gradle"><table><tr><td class="code"><pre><code class="hljs gradle">docker run -d \<br>  --name fancyindex \<br>  -e PUID=<span class="hljs-number">3000</span> \<br>  -e PGID=<span class="hljs-number">3000</span> \<br>  -e TZ=Asia/Shanghai \<br>  -e USER=Neo \<br>  -e PASSWORD=RedPill$ \<br>  -p <span class="hljs-number">80</span>:<span class="hljs-number">80</span> \<br>  -p <span class="hljs-number">443</span>:<span class="hljs-number">443</span> \<br>  -v <span class="hljs-regexp">/zion/</span>share<span class="hljs-regexp">/nginx/</span>nginx.conf:<span class="hljs-regexp">/etc/</span>nginx/nginx.conf \<br>  -v <span class="hljs-regexp">/zion/</span>share<span class="hljs-regexp">/private:/</span><span class="hljs-keyword">private</span> \<br>  -v <span class="hljs-regexp">/zion/</span>share<span class="hljs-regexp">/public:/</span><span class="hljs-keyword">public</span> \<br>  --restart unless-stopped \<br>  vonsy/fancyindex:<span class="hljs-number">1.23</span>.<span class="hljs-number">3</span><br></code></pre></td></tr></table></figure>

<h3 id="Docker-Compose-File"><a href="#Docker-Compose-File" class="headerlink" title="Docker Compose File"></a>Docker Compose File</h3><figure class="highlight nestedtext"><table><tr><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-attribute">version</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2.1&quot;</span><br><span class="hljs-attribute">services</span><span class="hljs-punctuation">:</span><br>  <span class="hljs-attribute">transmission</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-attribute">image</span><span class="hljs-punctuation">:</span> <span class="hljs-string">vonsy/fancyindex:1.23.3</span><br>    <span class="hljs-attribute">container_name</span><span class="hljs-punctuation">:</span> <span class="hljs-string">fancyindex</span><br>    <span class="hljs-attribute">environment</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">PUID=3000</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">PGID=3000</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">TZ=Asia/Shanghai</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">USER=Neo</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">PASSWORD=RedPill$</span><br>    <span class="hljs-attribute">volumes</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/zion/share/nginx/nginx.conf:/etc/nginx/nginx.conf</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/zion/share/private:/private</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/zion/share/public:/public</span><br>    <span class="hljs-attribute">ports</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">80:80</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">443:443</span><br>    <span class="hljs-attribute">restart</span><span class="hljs-punctuation">:</span> <span class="hljs-string">unless-stopped</span><br></code></pre></td></tr></table></figure>

<h3 id="Docker-multi-stage-builds"><a href="#Docker-multi-stage-builds" class="headerlink" title="Docker multi-stage builds"></a>Docker multi-stage builds</h3><figure class="highlight apache"><table><tr><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> build --target builder -t fancyindexbuilder:<span class="hljs-number">1</span>.<span class="hljs-number">23</span>.<span class="hljs-number">3</span> .<br><span class="hljs-attribute">docker</span> build -t fancyindex:<span class="hljs-number">1</span>.<span class="hljs-number">23</span>.<span class="hljs-number">3</span> .<br></code></pre></td></tr></table></figure>

<h3 id="Customized-settings"><a href="#Customized-settings" class="headerlink" title="Customized settings"></a>Customized settings</h3><p>If you need to customize the settings, use docker cp to copy out the nginx.conf configuration file, modify the settings and mount it.</p>
<figure class="highlight arcade"><table><tr><td class="code"><pre><code class="hljs arcade">docker cp fancyindex:<span class="hljs-regexp">/etc/</span>nginx/nginx.conf ~<span class="hljs-regexp">/Desktop/</span><br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>GitHub Actions auto deploy hexo pages</title>
    <url>/2022/12/23-GitHub-Actions-auto-deploy-hexo-pages/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="Setup-Authorization-for-deployment"><a href="#Setup-Authorization-for-deployment" class="headerlink" title="Setup Authorization for deployment"></a>Setup Authorization for deployment</h2><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">&gt;&gt; ssh-keygen  -C <span class="hljs-string">&quot;your_email@example.com&quot;</span> -f github-deploy-key<br>&gt;&gt; ll github-deploy-key*                                                                                                                             13:36.32 五 12 23 2022 &gt;&gt;&gt;<br>.rw------- 2.6k jason 23 12 12:47 github-deploy-key<br>.rw-r--r--  573 jason 23 12 12:47 github-deploy-key.pub<br></code></pre></td></tr></table></figure>

<h2 id="Setup-authorization-in-github"><a href="#Setup-authorization-in-github" class="headerlink" title="Setup authorization in github"></a>Setup authorization in github</h2><p>Navigate to <code>Settings</code> -&gt; <code>Secrets</code> -&gt; <code>Actions</code> add SSH Private key and name it as <code>SSH_DEPLOY_KEY</code></p>
<p><img src="/../images/image-20221223134753592.png" alt="image-20221223134753592"></p>
<p>Navigate to <code>Settings</code> -&gt; <code>Deploy keys</code> add SSH public key and mark <code>Allow write access</code></p>
<p><img src="/../images/image-20221223135123108.png" alt="image-20221223135123108"></p>
<h2 id="Create-automation-workflow-file"><a href="#Create-automation-workflow-file" class="headerlink" title="Create automation workflow file"></a>Create automation workflow file</h2><p>Create <code>.github/workflows/main.yml</code>， copy it  to your <code>main.yml</code> and change repository and Git configuration. When it’s done, every time you push your new changes to Github，GitHub Actions will automatically deploy your hero website.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">name:</span> <span class="hljs-string">Deployment</span><br><span class="hljs-attr">on:</span> <span class="hljs-string">push</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">deployment:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">Deployment</span><br><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Check</span> <span class="hljs-string">Out</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v3</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Clone</span> <span class="hljs-string">Repo</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v3</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">repository:</span> <span class="hljs-string">Username/Repository</span>    <span class="hljs-comment"># You have to change to your own Repository Here</span><br>          <span class="hljs-attr">path:</span> <span class="hljs-string">.deploy_git</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">Node</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-node@v3</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">node-version:</span> <span class="hljs-number">16</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">Git</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          git config --global user.name &quot;Example&quot;   # Change it Based on your environment</span><br><span class="hljs-string">          git config --global user.email &quot;email@example.com&quot; # Change it Based on your environment</span><br><span class="hljs-string"></span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">SSH</span> <span class="hljs-string">Key</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          mkdir -p ~/.ssh</span><br><span class="hljs-string">          echo &quot;$&#123;&#123; secrets.SSH_DEPLOY_KEY &#125;&#125;&quot; &gt; ~/.ssh/id_rsa</span><br><span class="hljs-string">          chmod 600 ~/.ssh/id_rsa</span><br><span class="hljs-string"></span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          npm install --location=global hexo-cli</span><br><span class="hljs-string">          npm install</span><br><span class="hljs-string">          hexo d</span><br></code></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">git add . &amp;&amp; git commit -m <span class="hljs-string">&#x27;new post&#x27;</span> &amp;&amp; git push<br></code></pre></td></tr></table></figure>

<p><img src="/../images/image-20221223140859290.png" alt="image-20221223140859290"></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hackintosh on AMD Platform</title>
    <url>/2023/03/30-Hackintosh-on-AMD-Platform/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="Hackintosh-on-AMD-Platform"><a href="#Hackintosh-on-AMD-Platform" class="headerlink" title="Hackintosh on AMD Platform"></a>Hackintosh on AMD Platform</h3><h4 id="System-info"><a href="#System-info" class="headerlink" title="System info"></a>System info</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">macOS Version:</span> <span class="hljs-number">13.2</span><br><span class="hljs-attr">CPU:</span> <span class="hljs-string">AMD</span> <span class="hljs-string">Ryzen</span> <span class="hljs-number">9</span> <span class="hljs-string">5950X</span> <span class="hljs-number">16</span><span class="hljs-string">-Core</span> <span class="hljs-string">Processor</span><br><span class="hljs-attr">Motherboard:</span> <span class="hljs-string">ROG</span> <span class="hljs-string">STRIX</span> <span class="hljs-string">X570-I</span> <span class="hljs-string">GAMING</span> <span class="hljs-string">@ASUSTeK</span> <span class="hljs-string">COMPUTER</span> <span class="hljs-string">INC.</span><br><span class="hljs-attr">Graphics:</span> <span class="hljs-string">AMD</span> <span class="hljs-string">Radeon</span> <span class="hljs-string">RX</span> <span class="hljs-number">5700 </span><span class="hljs-string">XT</span><br><span class="hljs-attr">Memory:</span> <span class="hljs-string">32GB,</span> <span class="hljs-attr">Storage:</span> <span class="hljs-string">465GB</span><br></code></pre></td></tr></table></figure>

<h4 id="BIOS-SITTINGS"><a href="#BIOS-SITTINGS" class="headerlink" title="BIOS SITTINGS"></a>BIOS SITTINGS</h4><ul>
<li>Load defaults settings first</li>
<li><code>SVM</code>: enabled</li>
<li><code>Above-4G decoding</code>: enabled</li>
<li><code>Security boot</code> -&gt;<code>disabled</code></li>
<li><code> Fast boot</code>-&gt;<code> disabled</code></li>
<li><code>CSM</code>-&gt; <code>disabled</code></li>
<li><code>Network stack</code>-&gt;<code> disabled</code> (disable PXE)</li>
</ul>
<h5 id="EFI"><a href="#EFI" class="headerlink" title="EFI:"></a>EFI:</h5><h5 id="x570i-5950x-rx5700-eth0-wifi-Ventura-13-2-zip"><a href="#x570i-5950x-rx5700-eth0-wifi-Ventura-13-2-zip" class="headerlink" title="x570i-5950x-rx5700-eth0-wifi-Ventura-13.2.zip"></a><a href="https://github.com/Jas0n0ss/Hackintosh/blob/main/AMD-x570i-5950x-RX5700XT/EFI/x570i-5950x-rx5700-eth0-wifi-Ventura-13.2.zip">x570i-5950x-rx5700-eth0-wifi-Ventura-13.2.zip</a></h5><h5 id="Drivers"><a href="#Drivers" class="headerlink" title="Drivers"></a>Drivers</h5><h6 id="Ethernet"><a href="#Ethernet" class="headerlink" title="Ethernet:"></a>Ethernet:</h6><ul>
<li><p><a href="https://github.com/donatengit/AppleIGB/">https://github.com/donatengit/AppleIGB/</a></p>
<blockquote>
<p><strong><code>AppleLGB</code></strong></p>
</blockquote>
<p>Basically it can be worked, but it disconnected sometimes with no reason, To enable it you have to <code>make sure Above-4G decoding enabled</code> in <code>BIOS</code> and don’t forget to remove <code>npci=0x2000</code> in <code>boot-args</code></p>
</li>
<li><p><a href="https://github.com/acidanthera/IntelMausi">https://github.com/acidanthera/IntelMausi</a> (doesn’t work on my machine)</p>
</li>
<li><p><a href="https://github.com/khronokernel/SmallTree-I211-AT-patch">https://github.com/khronokernel/SmallTree-I211-AT-patch</a> (doesn’t work on my machine)</p>
</li>
</ul>
<p><a href="https://github.com/Jas0n0ss/Hackintosh/blob/main/AMD-x570i-5950x-RX5700XT/AMD/image-20230202143309046.png"><img src="https://github.com/Jas0n0ss/Hackintosh/raw/main/AMD-x570i-5950x-RX5700XT/AMD/image-20230202143309046.png" alt="image-20230202143309046"></a></p>
<p><a href="https://github.com/Jas0n0ss/Hackintosh/blob/main/AMD-x570i-5950x-RX5700XT/AMD/image-20230202143404829.png"><img src="https://github.com/Jas0n0ss/Hackintosh/raw/main/AMD-x570i-5950x-RX5700XT/AMD/image-20230202143404829.png" alt="image-20230202143404829"></a></p>
<p><a href="https://github.com/Jas0n0ss/Hackintosh/blob/main/AMD-x570i-5950x-RX5700XT/AMD/image-20230202143456722.png"><img src="https://github.com/Jas0n0ss/Hackintosh/raw/main/AMD-x570i-5950x-RX5700XT/AMD/image-20230202143456722.png" alt="image-20230202143456722"></a></p>
<h6 id="Intel-AX200"><a href="#Intel-AX200" class="headerlink" title="Intel AX200"></a>Intel AX200</h6><ul>
<li><p>WIFI: <a href="https://github.com/OpenIntelWireless/itlwm">https://github.com/OpenIntelWireless/itlwm</a></p>
<p><a href="https://github.com/Jas0n0ss/Hackintosh/blob/main/AMD-x570i-5950x-RX5700XT/AMD/image-20230202143144683.png"><img src="https://github.com/Jas0n0ss/Hackintosh/raw/main/AMD-x570i-5950x-RX5700XT/AMD/image-20230202143144683.png" alt="image-20230202143144683"></a></p>
<p><a href="https://github.com/Jas0n0ss/Hackintosh/blob/main/AMD-x570i-5950x-RX5700XT/AMD/image-20230202143528147.png"><img src="https://github.com/Jas0n0ss/Hackintosh/raw/main/AMD-x570i-5950x-RX5700XT/AMD/image-20230202143528147.png" alt="image-20230202143528147"></a></p>
</li>
<li><p>Bluetooth: <a href="https://github.com/OpenIntelWireless/IntelBluetoothFirmware">https://github.com/OpenIntelWireless/IntelBluetoothFirmware</a> (<code>not work for now</code>)</p>
</li>
</ul>
<h6 id="Dell-DW-1820A"><a href="#Dell-DW-1820A" class="headerlink" title="Dell DW 1820A"></a>Dell DW 1820A</h6><ul>
<li><p>WIFI (<code>Perfectly working and speed surrised me, Intel WIFI have speed issue </code>)</p>
<ul>
<li><a href="https://github.com/acidanthera/AirportBrcmFixup">https://github.com/acidanthera/AirportBrcmFixup</a></li>
</ul>
<p><a href="https://github.com/Jas0n0ss/Hackintosh/blob/main/AMD-x570i-5950x-RX5700XT/AMD/image-20230204003656662.png"><img src="https://github.com/Jas0n0ss/Hackintosh/raw/main/AMD-x570i-5950x-RX5700XT/AMD/image-20230204003656662.png" alt="image-20230204003656662"></a></p>
<p><a href="https://github.com/Jas0n0ss/Hackintosh/blob/main/AMD-x570i-5950x-RX5700XT/AMD/image-20230204003819994.png"><img src="https://github.com/Jas0n0ss/Hackintosh/raw/main/AMD-x570i-5950x-RX5700XT/AMD/image-20230204003819994.png" alt="image-20230204003819994"></a></p>
<p><a href="https://github.com/Jas0n0ss/Hackintosh/blob/main/AMD-x570i-5950x-RX5700XT/AMD/image-20230204003929258.png"><img src="https://github.com/Jas0n0ss/Hackintosh/raw/main/AMD-x570i-5950x-RX5700XT/AMD/image-20230204003929258.png" alt="image-20230204003929258"></a></p>
</li>
<li><p>Bluetooth (<code> Connection is good but Airdrop only could be discovered by other machine, itself can&#39;t discover by other machine</code>)</p>
<p><a href="https://github.com/acidanthera/BrcmPatchRAM">https://github.com/acidanthera/BrcmPatchRAM</a></p>
<p><a href="https://github.com/Jas0n0ss/Hackintosh/blob/main/AMD-x570i-5950x-RX5700XT/AMD/image-20230204004202202.png"><img src="https://github.com/Jas0n0ss/Hackintosh/raw/main/AMD-x570i-5950x-RX5700XT/AMD/image-20230204004202202.png" alt="image-20230204004202202"></a></p>
<p><a href="https://github.com/Jas0n0ss/Hackintosh/blob/main/AMD-x570i-5950x-RX5700XT/AMD/image-20230204004315399.png"><img src="https://github.com/Jas0n0ss/Hackintosh/raw/main/AMD-x570i-5950x-RX5700XT/AMD/image-20230204004315399.png" alt="image-20230204004315399"></a></p>
</li>
</ul>
<h5 id="Screenshots"><a href="#Screenshots" class="headerlink" title="Screenshots"></a>Screenshots</h5><p><a href="https://github.com/Jas0n0ss/Hackintosh/blob/main/AMD-x570i-5950x-RX5700XT/AMD/image-20230202143122254.png"><img src="https://github.com/Jas0n0ss/Hackintosh/raw/main/AMD-x570i-5950x-RX5700XT/AMD/image-20230202143122254.png" alt="image-20230202143122254"></a></p>
<p><a href="https://github.com/Jas0n0ss/Hackintosh/blob/main/AMD-x570i-5950x-RX5700XT/AMD/image-20230202143617686.png"><img src="https://github.com/Jas0n0ss/Hackintosh/raw/main/AMD-x570i-5950x-RX5700XT/AMD/image-20230202143617686.png" alt="image-20230202143617686"></a></p>
<p><a href="https://github.com/Jas0n0ss/Hackintosh/blob/main/AMD-x570i-5950x-RX5700XT/AMD/image-20230202143650381.png"><img src="https://github.com/Jas0n0ss/Hackintosh/raw/main/AMD-x570i-5950x-RX5700XT/AMD/image-20230202143650381.png" alt="image-20230202143650381"></a></p>
<p><a href="https://github.com/Jas0n0ss/Hackintosh/blob/main/AMD-x570i-5950x-RX5700XT/AMD/image-20230202210140122.png"><img src="https://github.com/Jas0n0ss/Hackintosh/raw/main/AMD-x570i-5950x-RX5700XT/AMD/image-20230202210140122.png" alt="image-20230202210140122"></a></p>
]]></content>
      <tags>
        <tag>Hackintosh</tag>
      </tags>
  </entry>
  <entry>
    <title>HeartBeat-DRDB-Mysql-high-Availability</title>
    <url>/2022/09/20-HeartBeat-DRDB-Mysql-HighAvalibity/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><strong>1.方案简介</strong></p>
<p>本方案采用Heartbeat双机热备软件来保证数据库的高稳定性和连续性，数据的一致性由DRBD这个工具来保证。默认情况下只有一台mysql在工作，当主mysql服务器出现问题后，系统将自动切换到备机上继续提供服务，当主数据库修复完毕，又将服务切回继续由主mysql提供服务。</p>
<p><strong>2.方案优缺点</strong></p>
<p>优点：安全性高、稳定性高、可用性高，出现故障自动切换。</p>
<p>缺点：只有一台服务器提供服务，成本相对较高，不方便扩展，可能会发生脑裂。</p>
<p><strong>3.软件介绍</strong></p>
<p>Heartbeat介绍</p>
<p>官方站点：<a href="http://linux-ha.org/wiki/Main_Page">http://linux-ha.org/wiki/Main_Page</a></p>
<p>heartbeat可以资源(VIP地址及程序服务)从一台有故障的服务器快速的转移到另一台正常的服务器提供服务，heartbeat和keepalived相似，heartbeat可以实现failover功能，但不能实现对后端的健康检查</p>
<p>DRBD介绍</p>
<p>官方站点：<a href="http://www.drbd.org/">http://www.drbd.org/</a></p>
<p>DRBD(DistributedReplicatedBlockDevice)是一个基于块设备级别在远程服务器直接同步和镜像数据的软件，用软件实现的、无共享的、服务器之间镜像块设备内容的存储复制解决方案。它可以实现在网络中两台服务器之间基于块设备级别的实时镜像或同步复制(两台服务器都写入成功)&#x2F;异步复制(本地服务器写入成功)，相当于网络的RAID1，由于是基于块设备(磁盘，LVM逻辑卷)，在文件系统的底层，所以数据复制要比cp命令更快。DRBD已经被MySQL官方写入文档手册作为推荐的高可用的方案之一</p>
<p><strong>4.方案拓扑</strong></p>
<p><img src="/../images/182048487448428.png"></p>
<p><strong>5.方案适用场景：</strong></p>
<p>适用于数据库访问量不太大，短期内访问量增长不会太快，对数据库可用性要求非常高的场景。</p>
<p>参考链接：<a href="https://www.cnblogs.com/gomysql/p/3674030.html">https://www.cnblogs.com/gomysql/p/3674030.html</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>Mysql</tag>
        <tag>DRDB</tag>
        <tag>high Availability</tag>
      </tags>
  </entry>
  <entry>
    <title>Homelab PXE Server iVentoy</title>
    <url>/2024/05/24-Homelab-PXE-Server-iVentoy/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="What-is-iVentoy"><a href="#What-is-iVentoy" class="headerlink" title="What is iVentoy"></a>What is iVentoy</h3><p><a href="https://www.iventoy.com/en/index.html">https://www.iventoy.com/en/index.html</a></p>
<ul>
<li>iVentoy is an enhanced version of the PXE server.</li>
<li>With iVentoy you can boot and install OS on multiple machines at the same time through the network.</li>
<li>iVentoy is extremely easy to use, without complicated configuration, just put the ISO file in the specified location and select PXE boot in the client machine.</li>
<li>iVentoy supports x86 Legacy BIOS, IA32 UEFI, x86_64 UEFI and ARM64 UEFI mode at the same time.</li>
<li>iVentoy support 110+ common types of OS (Windows&#x2F;WinPE&#x2F;Linux&#x2F;VMware) (<a href="https://www.iventoy.com/en/isolist.html">list</a>)。</li>
</ul>
<h3 id="Let’s-get-started"><a href="#Let’s-get-started" class="headerlink" title="Let’s get started"></a>Let’s get started</h3><h4 id="Docker-version"><a href="#Docker-version" class="headerlink" title="Docker version"></a>Docker version</h4><ul>
<li><p>Docker-cli</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">docker run -d --name=iventoy --net=host \<br>-v /opt/iventoy/data::/PXE/data \<br>-v /opt/iventoy/user:PXE/user \<br>-v /data/pxeiso:/PXE/iso \<br>--privileged=<span class="hljs-literal">true</span> amilys/iventoy:latest<br></code></pre></td></tr></table></figure>
</li>
<li><p>Docker-compose</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 启动后通过http://x.x.x.x:26000 来访问软件界面</span><br><span class="hljs-comment"># DHCP : External 模式的使用场景是 iVentoy 和第三方的DHCP Server位于同一个局域网内</span><br><span class="hljs-comment"># DHCP: ExternalNet 模式的使用场景是 iVentoy 和第三方的DHCP Server位于不同的局域网内</span><br><span class="hljs-comment"># PVE安装Windows时网卡模型，请选E1000</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">version:</span> <span class="hljs-string">&quot;3.8&quot;</span><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">iventoy:</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">iventoy</span><br>    <span class="hljs-attr">network_mode:</span> <span class="hljs-string">host</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/opt/iventoy/data:/PXE/data</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/opt/iventoy/user:/PXE/user</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/data/pxeiso:/PXE/iso</span><br>    <span class="hljs-attr">privileged:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">amilys/iventoy:latest</span><br></code></pre></td></tr></table></figure>
</li>
<li><p>Setup </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@home /opt/iventoy]<span class="hljs-comment"># docker-compose up -d</span><br>WARN[0000] /opt/iventoy/docker-compose.yml: `version` is obsolete<br>[+] Running 1/1<br> ✔ Container iventoy  Started<br> [root@home /opt/iventoy]<span class="hljs-comment"># ll /data/pxeiso/</span><br>total 21626580<br>-rwxr--r-- 1 root root 1595277312 May 24 09:50 Atlas_v0.5.2.iso<br>-rwxr--r-- 1 root root 2459566080 May 24 09:53 Fedora-Server-dvd-x86_64-37-1.7.iso<br>-rwxr--r-- 1 root root  930957312 May 24 09:49 FirPE-V1.9.1.iso<br>-rwxr--r-- 1 root root 6933184512 May 24 09:53 kali-linux-2023.3-installer-everything-amd64.iso<br>-rwxr--r-- 1 root root 3744464896 May 24 09:53 openEuler-22.03-LTS-SP1-x86_64-dvd.iso<br>-rwxr--r-- 1 root root 6482165760 May 24 09:50 windows11-customized.iso <br></code></pre></td></tr></table></figure></li>
</ul>
<h3 id="Initial-configuration"><a href="#Initial-configuration" class="headerlink" title="Initial configuration"></a>Initial configuration</h3><p>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD<br><img src="https://upic-1253467112.cos.ap-chengdu.myqcloud.com/uPic/image-20240524111511421.png" alt="image-20240524111511421"></p>
<p><img src="https://upic-1253467112.cos.ap-chengdu.myqcloud.com/uPic/image-20240524111547467.png" alt="image-20240524111547467"></p>
<p><img src="https://upic-1253467112.cos.ap-chengdu.myqcloud.com/uPic/image-20240524111612358.png" alt="image-20240524111612358"></p>
<h1 id=""><a href="#" class="headerlink" title=""></a><img src="https://upic-1253467112.cos.ap-chengdu.myqcloud.com/uPic/image-20240524111732417.png" alt="image-20240524111732417"></h1><p><img src="/../images/image-20240524104554676.png" alt="image-20240524104554676"></p>
<p><img src="/../images/image-20240524104537612.png" alt="image-20240524104537612"></p>
<p><img src="/../images/image-20240524104615881.png" alt="image-20240524104615881"></p>
<p><img src="/../images/image-20240524105534628.png" alt="image-20240524105534628"></p>
<p><img src="/../images/image-20240524105557332.png" alt="image-20240524105557332"></p>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>cloud</p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<h3 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h3><p>iVentoy VS ipxe : I think it is very easy to configure and setup.</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>pxe</tag>
      </tags>
  </entry>
  <entry>
    <title>How To integrate ChatGPT into Siri on your iPhone</title>
    <url>/2023/02/19-How-To-integrate-ChatGPT-into-Siri-on-your-iPhone/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><hr>
<h3 id="This-is-a-question-and-answer-be-generated-from-the-ChatGDP-on-how-to-integrate-chat-GPT-into-Siri"><a href="#This-is-a-question-and-answer-be-generated-from-the-ChatGDP-on-how-to-integrate-chat-GPT-into-Siri" class="headerlink" title="This is a question and answer be generated from the ChatGDP on how to integrate chat-GPT into Siri"></a>This is a question and answer be generated from the ChatGDP on how to integrate chat-GPT into Siri</h3><p>Very interesting. This is a war between artificial intelligence VS home assistance. This is the revolutionary just like first iPhone first come up, it’s about a game changing about all related industry and it’s a revolutionary. Should we be worried about ? I don’t know we’ll see.</p>
<p><img src="/../images/image-20230219213347827.png" alt="image-20230219213347827"></p>
<blockquote>
<p>Ask:</p>
</blockquote>
<p>How to integrate ChatGPT into Siri, when I say Hi Siri, ask something to Siri, Siri will turn ChatGPT for answers and Siri will read the answers back to me as response, maybe you can show me how to craete shortcut to do so in IPhone, I need very specific steps including how to authorization to chatGPT</p>
<blockquote>
<p>Answer</p>
</blockquote>
<p>Sure, here are the detailed steps to integrate ChatGPT into Siri and create a shortcut to ask Siri to chat with ChatGPT on your iPhone:</p>
<ol>
<li><strong>Create an OpenAI API Key:</strong><ul>
<li>If you don’t already have an OpenAI account, sign up for a new account at <strong><a href="https://beta.openai.com/signup/">https://beta.openai.com/signup/</a></strong>.</li>
<li>In your OpenAI account dashboard, click on the <strong>“API Keys”</strong> tab, then click on the <strong>“New API Key”</strong> button to create a new API Key.</li>
<li>Remember this API Key, you’ll need to use it in the following steps.</li>
</ul>
</li>
<li><strong>Create a new Siri Shortcut:</strong><ul>
<li>Open the Shortcuts app on your iPhone.</li>
<li>Tap the <strong>“+”</strong> button in the top right corner to create a new Shortcut.</li>
<li>Tap <strong>“Add Action”</strong> and search for <strong>“Text”</strong>, then add a new <strong>“Text”</strong> action.</li>
<li>In the text field of the <strong>“Text”</strong> action, type <strong>“Ask ChatGPT: “</strong> (or any phrase you want Siri to respond with).</li>
<li>Tap <strong>“Done”</strong> to save the <strong>“Text”</strong> action.</li>
</ul>
</li>
<li><strong>Add an OpenAI API request to the Siri Shortcut:</strong><ul>
<li>Tap <strong>“Add Action”</strong> and search for <strong>“Get Contents of URL”</strong>, then add a new <strong>“Get Contents of URL”</strong> action.</li>
<li>In the <strong>“Get Contents of URL”</strong> action, paste the following URL: <strong><a href="https://api.openai.com/v1/engines/davinci-codex/completions">https://api.openai.com/v1/engines/davinci-codex/completions</a></strong></li>
<li>In the <strong>“Headers”</strong> section, add a new header with the key <strong>“Authorization”</strong> and value <strong>“Bearer [YOUR OPENAI API KEY]”</strong> (replace <strong>“[YOUR OPENAI API KEY]”</strong> with the API Key you obtained in step 1).</li>
<li>In the <strong>“Query”</strong> section, add a new item with the key <strong>“prompt”</strong> and value <strong>“Hey Siri, [Ask Question]”</strong> (replace <strong>“[Ask Question]”</strong> with the variable Siri will ask you).</li>
<li>In the <strong>“Result”</strong> section, tap <strong>“Show More”</strong> and select <strong>“Text”</strong>.</li>
</ul>
</li>
<li><strong>Customize the response for the Siri Shortcut:</strong><ul>
<li>Tap <strong>“Add Action”</strong> and search for <strong>“Text”</strong>, then add a new <strong>“Text”</strong> action.</li>
<li>In the text field of the <strong>“Text”</strong> action, type <strong>“ChatGPT response: “</strong> (or any phrase you want Siri to respond with).</li>
<li>Tap <strong>“Done”</strong> to save the <strong>“Text”</strong> action.</li>
</ul>
</li>
<li><strong>Finish and test the Siri Shortcut:</strong><ul>
<li>Tap <strong>“Done”</strong> to finish the Siri Shortcut.</li>
<li>Test the Siri Shortcut by activating Siri and saying <strong>“Hey Siri, [Ask Question]”</strong>. Siri will ask you for the variable you added in step 3.</li>
<li>After providing the variable, Siri will call the OpenAI API to retrieve a response from ChatGPT and read it back to you.</li>
</ul>
</li>
</ol>
]]></content>
      <tags>
        <tag>OpenAI</tag>
      </tags>
  </entry>
  <entry>
    <title>How to customize iconfont icon in Hexo fluid theme</title>
    <url>/2024/02/07-How-to-customize-iconfont-icon-in-Hexo-fluid-theme/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="What-we-do-in-this-article"><a href="#What-we-do-in-this-article" class="headerlink" title="What we do in this article?"></a>What we do in this article?</h2><p>if you want to change the menu button ( <strong>Marked as red below the Picture</strong> ) as I did. This article is gonna help you to do that.</p>
<p><img src="/../images/image-20240207175312883.png" alt="image-20240207175312883"></p>
<h5 id="Use-default-icon"><a href="#Use-default-icon" class="headerlink" title="Use default icon"></a><strong>Use default icon</strong></h5><p>Please check fluid docs <a href="https://hexo.fluid-dev.com/docs/icon/#%E5%86%85%E7%BD%AE%E7%A4%BE%E4%BA%A4%E5%9B%BE%E6%A0%87">https://hexo.fluid-dev.com/docs/icon/</a></p>
<h5 id="Customize-icon"><a href="#Customize-icon" class="headerlink" title="Customize icon"></a><strong>Customize icon</strong></h5><ol>
<li><p>Search the icon from <a href="https://www.iconfont.cn/">https://www.iconfont.cn/</a> and add to your own Inventory.</p>
</li>
<li><p>Download the entire inventory with source code:</p>
<p><img src="/../images/image-20240207180914835.png" alt="image-20240207180914835.png"></p>
</li>
<li><p>Unzip the downloaded inventory and rename it, then copy to <code>hexo/themes/fluid/source/css</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># ls -l themes/fluid/source/css/custom_icon</span><br>total 64<br>-rw-r--r-- 1 jason  8429  2  7 17:16 demo.css<br>-rw-r--r-- 1 jason 15203  2  7 17:16 demo_index.html<br>-rw-r--r-- 1 jason   797  2  7 17:16 iconfont.css<br>-rw-r--r-- 1 jason 19634  2  7 17:16 iconfont.js<br>-rw-r--r-- 1 jason  1723  2  7 17:16 iconfont.json<br>-rw-r--r-- 1 jason  5080  2  7 17:16 iconfont.ttf<br></code></pre></td></tr></table></figure>
</li>
<li><p>Add <code>custom_css</code> (<strong>which download from last step</strong>) to hexo configuration file which is <code>_config.fluid.yml</code>:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># vim _config.fluid.yml</span><br><span class="hljs-comment"># The usage is the same as custom_js</span><br>custom_css:<br> 	- /css/custom_icon/iconfont.css <span class="hljs-comment"># make sure the path is correct</span><br></code></pre></td></tr></table></figure>
</li>
<li><p>Open <code>demo_index.html</code> and Find the <code>icon name</code> from <code>demo_index.html</code> just like below:</p>
<p><img src="/../images/image-20240207182153857.png" alt="image-20240207182153857"></p>
</li>
<li><p>Add new <code>icon name</code> to hexo configuration file (<code>_config.fluid.yml</code>):</p>
<p><img src="/../images/image-20240207182727863.png" alt="image-20240207182727863"></p>
</li>
<li><p>Save the changes and run <code>hexo g &amp;&amp; hexo s </code> to test.</p>
<p><img src="/../images/image-20240207183304203.png" alt="image-20240207183304203"></p>
</li>
</ol>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>fluid</tag>
      </tags>
  </entry>
  <entry>
    <title>Jellyfin CSS Skin</title>
    <url>/2024/05/21-Jellyfin-CSS-Skin/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage:"></a>Usage:</h2><h5 id="To-use-it-got-to-Setting-x3D-x3D-gt-Dashboard-x3D-x3D-gt-General-and-scroll-down-to-custom-css-and-paste-the-following-line"><a href="#To-use-it-got-to-Setting-x3D-x3D-gt-Dashboard-x3D-x3D-gt-General-and-scroll-down-to-custom-css-and-paste-the-following-line" class="headerlink" title="To use it, got to Setting &#x3D;&#x3D;&gt; Dashboard &#x3D;&#x3D;&gt; General and scroll down to custom css and paste the following line"></a>To use it, got to Setting &#x3D;&#x3D;&gt; Dashboard &#x3D;&#x3D;&gt; General and scroll down to custom css and paste the following line</h5><h3 id="Base-Version"><a href="#Base-Version" class="headerlink" title="Base Version:"></a>Base Version:</h3><h3 id="Auto-Update"><a href="#Auto-Update" class="headerlink" title="Auto Update:"></a>Auto Update:</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp">@<span class="hljs-function"><span class="hljs-keyword">import</span> <span class="hljs-title">url</span><span class="hljs-params">(<span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/prayag17/JellyFlix@latest/default.css&quot;</span>)</span></span>;<br></code></pre></td></tr></table></figure>

<h3 id="Custom-Version"><a href="#Custom-Version" class="headerlink" title="Custom Version:"></a>Custom Version:</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp">@<span class="hljs-function"><span class="hljs-keyword">import</span> <span class="hljs-title">url</span><span class="hljs-params">(<span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/prayag17/JellyFlix@&lt;version-number&gt;/default.css&quot;</span>)</span></span>;<br></code></pre></td></tr></table></figure>

<h3 id="With-Logos-recommended"><a href="#With-Logos-recommended" class="headerlink" title="With Logos(recommended):"></a>With Logos(recommended):</h3><h3 id="Auto-Update-1"><a href="#Auto-Update-1" class="headerlink" title="Auto Update:"></a>Auto Update:</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp">@<span class="hljs-function"><span class="hljs-keyword">import</span> <span class="hljs-title">url</span><span class="hljs-params">(<span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/prayag17/JellyFlix@latest/default.css&quot;</span>)</span></span>;<br>@<span class="hljs-function"><span class="hljs-keyword">import</span> <span class="hljs-title">url</span><span class="hljs-params">(<span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/prayag17/JellyFlix@latest/addons/Logo.css&quot;</span>)</span></span>;<br></code></pre></td></tr></table></figure>

<h3 id="Custom-Version-1"><a href="#Custom-Version-1" class="headerlink" title="Custom Version:"></a>Custom Version:</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp">@<span class="hljs-function"><span class="hljs-keyword">import</span> <span class="hljs-title">url</span><span class="hljs-params">(<span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/prayag17/JellyFlix@&lt;version-number&gt;/default.css&quot;</span>)</span></span>;<br>@<span class="hljs-function"><span class="hljs-keyword">import</span> <span class="hljs-title">url</span><span class="hljs-params">(<span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/prayag17/JellyFlix@&lt;version-number&gt;/addons/Logo.css&quot;</span>)</span></span>;<br></code></pre></td></tr></table></figure>



<h3 id="You-can-also-use-Jellyfin-colors-instead-of-Netflix-red"><a href="#You-can-also-use-Jellyfin-colors-instead-of-Netflix-red" class="headerlink" title="You can also use Jellyfin colors instead of Netflix red"></a>You can also use Jellyfin colors instead of Netflix red</h3><p>Jellyfin-Blue:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp">@<span class="hljs-function"><span class="hljs-keyword">import</span> <span class="hljs-title">url</span><span class="hljs-params">(<span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/prayag17/JellyFlix@9.0.4/addons/jf-blue.css&quot;</span>)</span></span>;<br></code></pre></td></tr></table></figure>

<p>Jellyfin-Purple:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp">@<span class="hljs-function"><span class="hljs-keyword">import</span> <span class="hljs-title">url</span><span class="hljs-params">(<span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/prayag17/JellyFlix@9.0.4/addons/jf-purple.css&quot;</span>)</span></span>;<br></code></pre></td></tr></table></figure>

<h3 id="Login"><a href="#Login" class="headerlink" title="Login"></a>Login</h3><p><img src="/../images/Login.jpg" alt="img"></p>
<h3 id="Home-Page"><a href="#Home-Page" class="headerlink" title="Home Page"></a>Home Page</h3><p><img src="/../images/Home.jpg" alt="img"></p>
<h3 id="Library"><a href="#Library" class="headerlink" title="Library"></a>Library</h3><p><img src="/../images/Movies.jpg" alt="img"> <img src="/../images/TV%20Shows.jpg" alt="img"></p>
<h3 id="Movie-Title-Page"><a href="#Movie-Title-Page" class="headerlink" title="Movie Title Page"></a>Movie Title Page</h3><p><img src="/../images/Title%20Page-Movie.jpg" alt="img"></p>
<h3 id="TV-Show-Title-page"><a href="#TV-Show-Title-page" class="headerlink" title="TV Show Title page"></a>TV Show Title page</h3><p><img src="/../images/Title%20Page-TV.jpg" alt="img"></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>Linux kernel Upgrade</title>
    <url>/2024/03/30-Linux-Upgrade-kernel/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="Linux-Kernel-升级"><a href="#Linux-Kernel-升级" class="headerlink" title="Linux Kernel 升级"></a>Linux Kernel 升级</h1><p>k8s,docker,cilium等很多功能、特性需要较新的linux内核支持，所以有必要在集群部署前对内核进行升级；CentOS7 和 Ubuntu16.04可以很方便的完成内核升级。</p>
<h2 id="CentOS7"><a href="#CentOS7" class="headerlink" title="CentOS7"></a>CentOS7</h2><p>红帽企业版 Linux 仓库网站 <a href="https://www.elrepo.org,主要提供各种硬件驱动(显卡、网卡、声卡等)和内核升级相关资源;兼容/">https://www.elrepo.org，主要提供各种硬件驱动（显卡、网卡、声卡等）和内核升级相关资源；兼容</a> CentOS7 内核升级。如下按照网站提示载入elrepo公钥及最新elrepo版本，然后按步骤升级内核（以安装长期支持版本 kernel-lt 为例）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 载入公钥</span><br>rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org<br><span class="hljs-comment"># 安装ELRepo</span><br>rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm<br><span class="hljs-comment"># 载入elrepo-kernel元数据</span><br>yum --disablerepo=\* --enablerepo=elrepo-kernel repolist<br><span class="hljs-comment"># 查看可用的rpm包</span><br>yum --disablerepo=\* --enablerepo=elrepo-kernel list kernel*<br><span class="hljs-comment"># 安装长期支持版本的kernel</span><br>yum --disablerepo=\* --enablerepo=elrepo-kernel install -y kernel-lt.x86_64<br><span class="hljs-comment"># 删除旧版本工具包</span><br>yum remove kernel-tools-libs.x86_64 kernel-tools.x86_64 -y<br><span class="hljs-comment"># 安装新版本工具包</span><br>yum --disablerepo=\* --enablerepo=elrepo-kernel install -y kernel-lt-tools.x86_64<br><br><span class="hljs-comment">#查看默认启动顺序</span><br>awk -F\<span class="hljs-string">&#x27; &#x27;</span><span class="hljs-variable">$1</span>==<span class="hljs-string">&quot;menuentry &quot;</span> &#123;<span class="hljs-built_in">print</span> <span class="hljs-variable">$2</span>&#125;<span class="hljs-string">&#x27; /etc/grub2.cfg</span><br><span class="hljs-string">CentOS Linux (4.4.183-1.el7.elrepo.x86_64) 7 (Core)</span><br><span class="hljs-string">CentOS Linux (3.10.0-327.10.1.el7.x86_64) 7 (Core)</span><br><span class="hljs-string">CentOS Linux (0-rescue-c52097a1078c403da03b8eddeac5080b) 7 (Core)</span><br><span class="hljs-string">#默认启动的顺序是从0开始，新内核是从头插入（目前位置在0，而4.4.4的是在1），所以需要选择0。</span><br><span class="hljs-string">grub2-set-default 0</span><br><span class="hljs-string">#重启并检查</span><br><span class="hljs-string">reboot</span><br></code></pre></td></tr></table></figure>

<h2 id="Ubuntu16-04"><a href="#Ubuntu16-04" class="headerlink" title="Ubuntu16.04"></a>Ubuntu16.04</h2><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">打开 http://kernel.ubuntu.com/~kernel-ppa/mainline/ 并选择列表中选择你需要的版本（以4.16.3为例）。<br>接下来，根据你的系统架构下载 如下.deb 文件：<br>Build <span class="hljs-keyword">for</span> amd64 succeeded (see BUILD.LOG.amd64):<br>  linux-headers-4.16.3-041603_4.16.3-041603.201804190730_all.deb<br>  linux-headers-4.16.3-041603-generic_4.16.3-041603.201804190730_amd64.deb<br>  linux-image-4.16.3-041603-generic_4.16.3-041603.201804190730_amd64.deb<br><span class="hljs-comment">#安装后重启即可</span><br>$ sudo dpkg -i *.deb<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>kernel</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux client  login windows SQL Server with keytab</title>
    <url>/2022/09/16-Linux-client-login-windows-SQL-Server-with-keytab/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h4 id="Linux-client-login-windows-SQL-Server-with-keytab"><a href="#Linux-client-login-windows-SQL-Server-with-keytab" class="headerlink" title="Linux client  login windows SQL Server with keytab"></a>Linux client  login windows SQL Server with keytab</h4><p><a href="https://docs.microsoft.com/en-us/sql/linux/sql-server-linux-active-directory-authentication?view=sql-server-ver16">https://docs.microsoft.com/en-us/sql/linux/sql-server-linux-active-directory-authentication?view=sql-server-ver16</a></p>
<ul>
<li>create sql login <code>SQLREPRO\sqlroot</code> and request kdc ticket<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[sqlroot@sqlrepro.edu@linux ~]$ kinit sqlroot@SQLREPRO.EDU<br>Password <span class="hljs-keyword">for</span> sqlroot@SQLREPRO.EDU:<br>[sqlroot@sqlrepro.edu@linux ~]$ kvno sqlroot@SQLREPRO.EDU<br>kvno: Server not found <span class="hljs-keyword">in</span> Kerberos database <span class="hljs-keyword">while</span> getting credentials <span class="hljs-keyword">for</span> sqlroot@SQLREPRO.EDU<br>[sqlroot@sqlrepro.edu@linux ~]$ kvno MSSQLSvc/primarydc.SQLREPRO.EDU:1433@SQLREPRO.EDU<br>MSSQLSvc/primarydc.SQLREPRO.EDU:1433@SQLREPRO.EDU: kvno = 2<br>[root@linux ~]<span class="hljs-comment"># sqlcmd -S primarydc -Usa -Q &#x27;CREATE LOGIN [SQLREPRO\sqlroot] FROM WINDOWS&#x27;-Q &#x27;CREATE LOGIN [SQLREPRO\sqlroot] FROM WINDOWS&#x27;</span><br>[root@linux ~]<span class="hljs-comment"># sqlcmd -S primarydc -Usa -Q &#x27; SELECT name  FROM sys.server_principals WHERE name like &quot;%sqlroot%&quot;&#x27;</span><br>Password:<br>name<br>------------------------------------------<br>SQLREPRO\sqlroot<br><br>(1 rows affected)<br></code></pre></td></tr></table></figure></li>
<li>create keytab on windows for user <code>sqlrepro\sqlroot</code><figure class="highlight powershell"><table><tr><td class="code"><pre><code class="hljs powershell">ktpass /princ MSSQLSvc/primarydc.SQLREPRO.EDU:<span class="hljs-number">1433</span>@SQLREPRO.EDU /ptype KRB5_NT_PRINCIPAL /crypto aes256<span class="hljs-literal">-sha1</span> /mapuser SQLREPRO\sqlroot /out sqlroot.keytab <span class="hljs-literal">-setpass</span> <span class="hljs-literal">-setupn</span> /kvno <span class="hljs-number">2</span> /pass MyPasswo0d1<br>ktpass /princ MSSQLSvc/primarydc.SQLREPRO.EDU:<span class="hljs-number">1433</span>@SQLREPRO.EDU /ptype KRB5_NT_PRINCIPAL /crypto rc4<span class="hljs-literal">-hmac-nt</span> /mapuser SQLREPRO\sqlroot /<span class="hljs-keyword">in</span> sqlroot.keytab /out sqlroot.keytab <span class="hljs-literal">-setpass</span> <span class="hljs-literal">-setupn</span> /kvno <span class="hljs-number">2</span> /pass MyPasswo0d1<br>ktpass /princ MSSQLSvc/primarydc.SQLREPRO.EDU:<span class="hljs-number">1433</span>@SQLREPRO.EDU /ptype KRB5_NT_PRINCIPAL /crypto aes256<span class="hljs-literal">-sha1</span> /mapuser SQLREPRO\sqlroot /<span class="hljs-keyword">in</span> sqlroot.keytab /out sqlroot.keytab <span class="hljs-literal">-setpass</span> <span class="hljs-literal">-setupn</span> /kvno <span class="hljs-number">2</span> /pass MyPasswo0d1<br>ktpass /princ MSSQLSvc/primarydc.SQLREPRO.EDU:<span class="hljs-number">1433</span>@SQLREPRO.EDU /ptype KRB5_NT_PRINCIPAL /crypto rc4<span class="hljs-literal">-hmac-nt</span> /mapuser SQLREPRO\sqlroot /<span class="hljs-keyword">in</span> sqlroot.keytab /out sqlroot.keytab <span class="hljs-literal">-setpass</span> <span class="hljs-literal">-setupn</span> /kvno <span class="hljs-number">2</span> /pass MyPasswo0d1<br>ktpass /princ sqlroot@SQLREPRO.EDU /ptype KRB5_NT_PRINCIPAL /crypto aes256<span class="hljs-literal">-sha1</span> /mapuser SQLREPRO\sqlroot /<span class="hljs-keyword">in</span> sqlroot.keytab /out sqlroot.keytab <span class="hljs-literal">-setpass</span> <span class="hljs-literal">-setupn</span> /kvno <span class="hljs-number">2</span> /pass MyPasswo0d1<br>ktpass /princ sqlroot@SQLREPRO.EDU /ptype KRB5_NT_PRINCIPAL /crypto rc4<span class="hljs-literal">-hmac-nt</span> /mapuser SQLREPRO\sqlroot  /<span class="hljs-keyword">in</span> sqlroot.keytab /out sqlroot.keytab <span class="hljs-literal">-setpass</span> <span class="hljs-literal">-setupn</span> /kvno <span class="hljs-number">2</span> /pass MyPasswo0d1<br></code></pre></td></tr></table></figure></li>
<li>copy the keytab to linux server and grant required permission<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># copy the sqlroot.keytab to linux server with winscp</span><br>[root@linux ~]<span class="hljs-comment"># chmod 755 /home/sqlroot@sqlrepro.edu/sqlroot.keytab</span><br>[root@linux ~]<span class="hljs-comment"># chown sqlroot@SQlREPRO.EDU:mssql /home/sqlroot@sqlrepro.edu/sqlroot.keytab</span><br>[sqlroot@sqlrepro.edu@linux ~]$ kinit sqlroot@SQLREPRO.EDU -k -t sqlroot.keytab<br>[sqlroot@sqlrepro.edu@linux ~]$ kvno MSSQLSvc/primarydc.SQLREPRO.EDU:1433@SQLREPRO.EDU<br>MSSQLSvc/primarydc.SQLREPRO.EDU:1433@SQLREPRO.EDU: kvno = 2<br>[sqlroot@sqlrepro.edu@linux ~]$ klist<br>Ticket cache: KEYRING:persistent:1626404610:krb_ccache_Hw8mQWy<br>Default principal: sqlroot@SQLREPRO.EDU<br><br>Valid starting       Expires              Service principal<br>08/15/2022 04:27:47  08/15/2022 14:27:44  MSSQLSvc/primarydc.SQLREPRO.EDU:1433@SQLREPRO.EDU<br>        renew until 08/22/2022 04:27:44<br>08/15/2022 04:27:44  08/15/2022 14:27:44  krbtgt/SQLREPRO.EDU@SQLREPRO.EDU<br>        renew until 08/22/2022 04:27:44<br></code></pre></td></tr></table></figure></li>
<li>test connection<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[sqlroot@sqlrepro.edu@linux ~]$ sqlcmd -S primarydc -E -Q <span class="hljs-string">&#x27;select system_user&#x27;</span><br>                                                                                                                   <br>----------------------------<br>SQLREPRO\sqlroot                                                                                                   <br><br>(1 rows affected)<br><br></code></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <tags>
        <tag>SQL Server</tag>
        <tag>AD</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux client with AD authentication login windows SQL Server</title>
    <url>/2022/09/16-Linux-client-with-AD-authentication-login-windows-SQL-Server/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote>
<p>Pre-Work</p>
</blockquote>
<ul>
<li>linux should join AD same as SQL Server</li>
<li>setspn on windows SQL Server for linux</li>
</ul>
<blockquote>
<p>Windows SQL Server</p>
</blockquote>
<figure class="highlight powershell"><table><tr><td class="code"><pre><code class="hljs powershell">C:\Users\Administrator&gt;setspn <span class="hljs-literal">-L</span> sqladmin<br>Registered ServicePrincipalNames <span class="hljs-keyword">for</span> CN=sqladmin,CN=Users,DC=sqlrepro,DC=edu:<br>        MSSQLSvc/primarydc.sqlrepro.edu:<span class="hljs-number">1433</span><br>        MSSQLSvc/primarydc:<span class="hljs-number">1433</span><br>        MSSQLSvc/<span class="hljs-number">2016</span>cl.sqlrepro.edu:<span class="hljs-number">1433</span><br><br>C:\Users\Administrator&gt;setspn <span class="hljs-literal">-S</span> MSSQLSvc/linux.sqlrepro.edu:<span class="hljs-number">1433</span> sqlrepro\sqladmin     <span class="hljs-comment"># linux.sqlrepro.edu is linux server which joined AD</span><br>Checking domain DC=sqlrepro,DC=edu<br><br>Registering ServicePrincipalNames <span class="hljs-keyword">for</span> CN=sqladmin,CN=Users,DC=sqlrepro,DC=edu<br>        MSSQLSvc/linux.sqlrepro.edu:<span class="hljs-number">1433</span><br>Updated object<br><br>C:\Users\Administrator&gt;setspn <span class="hljs-literal">-L</span> sqladmin<br>Registered ServicePrincipalNames <span class="hljs-keyword">for</span> CN=sqladmin,CN=Users,DC=sqlrepro,DC=edu:<br>        MSSQLSvc/linux.sqlrepro.edu:<span class="hljs-number">1433</span><br>        MSSQLSvc/primarydc.sqlrepro.edu:<span class="hljs-number">1433</span><br>        MSSQLSvc/primarydc:<span class="hljs-number">1433</span><br>        MSSQLSvc/<span class="hljs-number">2016</span>cl.sqlrepro.edu:<span class="hljs-number">1433</span><br></code></pre></td></tr></table></figure>
<blockquote>
<p>linux:</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[sqladmin@sqlrepro.edu@linux ~]$ hostname<br>linux.sqlrepro.edu<br>[sqladmin@sqlrepro.edu@linux ~]$ realm -v <span class="hljs-built_in">join</span> -U <span class="hljs-string">&quot;administrator@SQLREPRO.EDU&quot;</span> SQLREPRO.EDU<br> * Resolving: _ldap._tcp.sqlrepro.edu<br> * Performing LDAP DSE lookup on: 192.168.2.50<br> * Successfully discovered: sqlrepro.edu<br>realm: Already joined to this domain<br>[sqladmin@sqlrepro.edu@linux ~]$ <span class="hljs-built_in">id</span> sqladmin@SQLREPRO.EDU<br>uid=1626404604(sqladmin@sqlrepro.edu) gid=1626400513(domain <span class="hljs-built_in">users</span>@sqlrepro.edu) <span class="hljs-built_in">groups</span>=1626400513(domain <span class="hljs-built_in">users</span>@sqlrepro.edu)<br>[sqladmin@sqlrepro.edu@linux ~]$ kinit sqladmin@SQLREPRO.EDU<br>Password <span class="hljs-keyword">for</span> sqladmin@SQLREPRO.EDU:<br>[sqladmin@sqlrepro.edu@linux ~]$ klist<br>Ticket cache: KEYRING:persistent:1626404604:1626404604<br>Default principal: sqladmin@SQLREPRO.EDU<br><br>Valid starting       Expires              Service principal<br>08/15/2022 02:52:21  08/15/2022 12:52:21  krbtgt/SQLREPRO.EDU@SQLREPRO.EDU<br>        renew until 08/22/2022 02:52:18<br>[sqladmin@sqlrepro.edu@linux ~]$ <span class="hljs-built_in">whoami</span><br>sqladmin@sqlrepro.edu<br>[sqladmin@sqlrepro.edu@linux ~]$ sqlcmd -S primarydc -E -Q<span class="hljs-string">&#x27;select system_user&#x27;</span><br>                                                                                                           <br>---------------------------------------------------------------------------<br>SQLREPRO\sqladmin                                                                                          <br><br>(1 rows affected)<br><br></code></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>SQL Server</tag>
        <tag>AD</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux-system-performance-optimization</title>
    <url>/2024/03/27-Linux-system-performance-optimization/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><strong>一、影响 Linux 性能的各种因素</strong></p>
<p><strong>1、系统硬件资源</strong></p>
<p>（1）CPU</p>
<p>如何判断多核 CPU 与超线程</p>
<p>消耗 CPU 的业务：动态 web 服务、mail 服务</p>
<p>（2）内存</p>
<ul>
<li>物理内存与 swap 的取舍</li>
<li>选择 64 位 Linux 操作系统</li>
</ul>
<p>消耗内存的业务：内存数据库（redis&#x2F;hbase&#x2F;mongodb）</p>
<p>（3）磁盘 IO</p>
<ul>
<li>RAID 技术（RAID0&#x2F;1&#x2F;5&#x2F;01&#x2F;10）</li>
<li>SSD 磁盘</li>
</ul>
<p>消耗磁盘的业务：数据库服务器</p>
<p>（4）网络带宽</p>
<ul>
<li>网卡&#x2F;交换机的选择</li>
<li>操作系统双网卡绑定(bond&#x2F;team)</li>
</ul>
<p>消耗带宽的业务：hadoop 平台、视频业务平台</p>
<p><strong>2、操作系统相关资源</strong></p>
<p>（1）系统安装优化</p>
<p>磁盘分区、RAID 设置、swap 设置</p>
<p>（2）内核参数优化</p>
<p>ulimit -n（查看或设置用户能够打开的<strong>文件描述符</strong>（file descriptors）的最大数量，比如文件，套接字等）</p>
<p>ulimit -u（用来查看或设置用户能够创建的最大<strong>进程数量</strong>）</p>
<p>（3）文件系统优化</p>
<ul>
<li>ext2：Linux 下标准文件系统，无日志记录（inode）功能。</li>
<li>ext3：在ext2 基础上增加了日志记录功能（inode），仅支持 32000 个子目录。</li>
<li>ex4：ext3 的后续版本，Linux2.6.28 内核开始支持。无限子目录支持，快速 fsck。</li>
<li>xfs：高性能文件系统，Linux3.10 内核开始默认支持。</li>
</ul>
<p>建议：</p>
<p>读操作频繁，同时小文件众多的应用：首选 ext4 文件系统，接下来依次是 xfs、ext3</p>
<p>写操作频繁的应用，首选是 xfs，接下来依次是 ext4 和 ext3</p>
<p>对性能要求不高、数据安全要求不高的业务，ext3 是比较好的选择。</p>
<p><strong>3、程序问题</strong></p>
<p>此类问题需要开发人员查看代码，介入处理。但作为运维人员需要给出程序问题的有力证据。</p>
<p><strong>二、Linux 性能优化工具</strong></p>
<p><strong>1、CPU 性能评估工具</strong></p>
<p><strong>（1）vmstat（系统默认自带）</strong></p>
<p>利用 vmstat 命令可以对操作系统的内存信息、进程状态、CPU活劢等进行监视。</p>
<p>常用方式：<code>vmstat 2 5</code> : 表示每 2秒更新一次输出信息，统计 5 次后停止输出。</p>
<p><img src="/../images/image-20240328091921241.png" alt="image-20240328091921241"></p>
<p>对上面每项的输出解释如下：</p>
<ul>
<li><p>procs</p>
</li>
<li><p>r 列表示运行和等待 cpu 时间片的进程数， 这个值如果长期大于系统CPU 的个数，说明 CPU 不足，需要增加 CPU。</p>
</li>
<li><p>b 列表示在等待资源的进程数，比如正在等待 I&#x2F;O、或者内存交换等。</p>
</li>
<li><p>memory</p>
</li>
<li><p>swpd 列表示切换到内存交换区的内存数量（以 k为单位） 。如果 swpd 的值不为0，或者比较大，只要 si、so 的值长期为 0，这种情况下一般不用担心，不会影响系统性能。</p>
</li>
<li><p>free列表示当前空闲的物理内存数量（以 k为单位）</p>
</li>
<li><p>buff 列表示 buffers cache的内存数量，一般对块设备的读写才需要缓冲。</p>
</li>
<li><p>cache列表示 page cached 的内存数量，一般作为文件系统 cached，频繁访问的文件都会被 cached，如果 cache 值较大，说明 cached 的文件数较多，如果此时 IO 中 bi比较小，说明文件系统效率比较好。</p>
</li>
<li><p>swap</p>
</li>
<li><p>si列表示由磁盘调入内存，也就是内存进入内存交换区的数量。</p>
</li>
<li><p>so 列表示由内存调入磁盘，也就是内存交换区进入内存的数量。</p>
</li>
</ul>
<p>一般情况下， si、 so 的值都为 0， 如果 si、 so 的值长期不为 0， 则表示系统内存不足。需要增加系统内存。</p>
<ul>
<li><p>IO 项显示磁盘读写状况</p>
</li>
<li><p>Bi列表示从块设备读入数据的总量（即读磁盘） （每秒 kb） 。</p>
</li>
<li><p>Bo 列表示写入到块设备的数据总量（即写磁盘） （每秒 kb）。</p>
</li>
</ul>
<p>这里我们设置的 bi+bo 参考值为 1000，如果超过 1000，而且 wa值较大，则表示系统磁盘 IO 有问题，应该考虑提高磁盘的读写性能。</p>
<ul>
<li><p>system 显示采集间隔内发生的中断数</p>
</li>
<li><p>in 列表示在某一时间间隔中观测到的每秒设备中断数。</p>
</li>
<li><p>cs 列表示每秒产生的上下文切换次数。</p>
</li>
</ul>
<p>上面这 2 个值越大，会看到由内核消耗的 CPU 时间会越多。</p>
<ul>
<li><p>CPU 项显示了 CPU 的使用状态，此列是我们关注的重点。</p>
</li>
<li><p>us 列显示了用户进程消耗的 CPU 时间百分比。us 的值比较高时，说明用户进程消耗的 cpu 时间多，但是如果长期大于 50%，就需要考虑优化程序或算法。</p>
</li>
<li><p>sy列显示了内核进程消耗的 CPU 时间百分比。Sy的值较高时，说明内核消耗的CPU 资源很多。</p>
</li>
</ul>
<p>根据经验， us+sy的参考值为 80%， 如果 us+sy大于 80%说明可能存在 CPU 资源不足。</p>
<ul>
<li>id 列显示了 CPU 处在空闲状态的时间百分比。</li>
<li>wa 列显示了 IO 等待所占用的 CPU 时间百分比。wa 值越高，说明 IO 等待越严重，根据经验，wa 的参考值为 20%，如果 wa 超过 20%，说明 IO 等待严重，引起 IO 等待的原因可能是磁盘大量随机读写造成的， 也可能是磁盘或者磁盘控制器的带宽瓶颈造成的（主要是块操作） 。</li>
</ul>
<p>综上所述， 在对 CPU 的评估中， 需要重点注意的是procs 项 r 列的值和 CPU 项中 us、sy和 id 列的值。</p>
<p><strong>（2）iostat（需要安装 sysstat 工具包）</strong></p>
<p>iostat 是 I&#x2F;O statistics（输入&#x2F;输出统计）的缩写，主要的功能是对系统的磁盘 I&#x2F;O 操作进行监视。</p>
<p>常用方式：iostat -c 3 5</p>
<p>其中，-c 表示显示CPU 的使用情况，-d：显示磁盘的使用情况。</p>
<p><img src="/../images/image-20240328092822180.png" alt="image-20240328092822180"></p>
<p><strong>（3）uptime 命令</strong></p>
<p>uptime 是监控系统性能最常用的一个命令，主要用来统计系统当前的运行状况，输出的信息依次为：系统现在的时间、 系统从上次开机到现在运行了多长时间、 系统目前有多少登陆用户、系统在一分钟内、五分钟内、十五分钟内的平均负载。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@home ~]<span class="hljs-comment">#  uptime</span><br> 09:28:51 up 5 days,  2:29,  1 user,  load average: 0.60, 0.82, 0.90<br></code></pre></td></tr></table></figure>

<p><strong>2、内存性能评估</strong></p>
<p><strong>（1）free 命令</strong></p>
<p>free 命令是监控 linux 内存使用状况最常用的指令</p>
<p>常见用法：free –mh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@home ~]<span class="hljs-comment"># free -mh</span><br>               total        used        free      shared  buff/cache   available<br>Mem:           3.5Gi       1.2Gi       260Mi        51Mi       2.4Gi       2.3Gi<br>Swap:          3.8Gi       0.0Ki       3.8Gi<br></code></pre></td></tr></table></figure>

<ul>
<li><code>total</code>: 总内存量，表示系统中物理内存的总量。</li>
<li><code>used</code>: 已使用的内存量，表示当前已经被使用的物理内存量。</li>
<li><code>free</code>: 空闲内存量，表示当前系统中可用的空闲物理内存量。</li>
<li><code>shared</code>: 共享内存量，表示<strong>被多个进程共享使用</strong>的内存量。</li>
<li><code>buffers</code>: 缓冲区内存量，表示被内核用作缓冲的内存量，通常包括用于<strong>存储文件系统元数据的缓冲区</strong>。</li>
<li><code>cached</code>: 缓存内存量，表示被内核用作缓存的内存量，通常包括用于<strong>缓存文件系统数据的缓存区</strong>。</li>
</ul>
<p>在 swap 项可以看出，交换分区还未使用。所以从应用的角度来说，此系统内存资源还非常充足。</p>
<p>一般有这样一个经验公式：应用程序可用内存&#x2F;系统物理内存&gt;70%时，表示系统内存资源非常充足，不影响系统性能，应用程序可用内存&#x2F;系统物理内存&lt;20%时，表示系统内存资源紧缺，需要增加系统内存，20%&lt;应用程序可用内存&#x2F;系统物理内存&lt;70%时，表示系统内存资源基本能满足应用需求，暂时不影响系统性能。</p>
<p><strong>（2）sar&#x2F;pidstat</strong></p>
<p>此两个命令主要用于监控全部或指定进程占用系统资源的情况，如 CPU，内存、设备IO。</p>
<p>三个公用参数：-u（获取 CPU 状态） 、-r（获取内存状态） 、-d（获取磁盘）</p>
<p>常用组合：</p>
<p>sar -u 3 ：获取 cpu 3 秒内的状态</p>
<p>pidstat -r –p 1 3 获取内存 3 秒内的状态</p>
<p>看看以上两个命令的差别？</p>
<p>请看下面的一个输出：</p>
<p><img src="/../images/27422-20230615182653951-2108504987.png" alt="图片"></p>
<p>其中：</p>
<p>Kbmemfree 表示空闲物理内存大小，kbmemused 表示已使用的物理内存空间大小，%memused 表示已使用内存占总内存大小的百分比，kbbuffers 和 kbcached 分别表示Buffer Cache 和 Page Cache 的大小，kbcommit 和%commit 分别表示应用程序当前使用的内存大小和使用百分比。</p>
<p>可以看出 sar 的输出其实与 free的输出完全对应，不过 sar 更加人性化，不但给出了内存使用量，还给出了内存使用的百分比以及统计的平均值。从%commit 项可知，此系统目前内存资源充足。</p>
<p><strong>3、磁盘性能评估</strong></p>
<p><strong>（1）iostat –d 组合</strong></p>
<p>iostat –d 2 3</p>
<p>通过“iostat –d”命令组合也可以查看系统磁盘的使用状况，请看如下输出：</p>
<p><img src="/../images/27422-20230615182653947-73234349.png" alt="图片"></p>
<p>对上面每项的输出解释如下：</p>
<ul>
<li>Blk_read&#x2F;s 表示每秒读取的数据块数。</li>
<li>Blk_wrtn&#x2F;s 表示每秒写入的数据块数。</li>
<li>Blk_read 表示读取的所有块数。</li>
<li>Blk_wrtn 表示写入的所有块数。</li>
</ul>
<p><strong>（2）pidstat -d -p 31887 3</strong></p>
<p><strong>（3）sar -d 2 3</strong></p>
<p>通过“sar –d”组合，可以对系统的磁盘 IO 做一个基本的统计，请看下面的一个输出：</p>
<p><img src="/../images/27422-20230615182653990-29679493.png" alt="图片"></p>
<p>对上面每项的输出解释如下：</p>
<ul>
<li>DEV 表示磁盘设备名称。</li>
<li>tps 表示每秒到物理磁盘的传送数，也就是每秒的 I&#x2F;O 流量。一个传送就是一个 I&#x2F;O 请求，多个逻辑请求可以被合并为一个物理 I&#x2F;O 请求。</li>
<li>rd_sec&#x2F;s 表示每秒从设备读取的扇区数（1 扇区&#x3D;512 字节）。</li>
<li>wr_sec&#x2F;s 表示每秒写入设备的扇区数目。</li>
<li>avgrq-sz 表示平均每次设备 I&#x2F;O 操作的数据大小（以扇区为单位） 。</li>
<li>avgqu-sz 表示平均 I&#x2F;O 队列长度。</li>
<li>await 表示平均每次设备 I&#x2F;O 操作的等待时间（以毫秒为单位） 。</li>
<li>svctm表示平均每次设备 I&#x2F;O 操作的服务时间（以毫秒为单位） 。</li>
<li>%util表示一秒中有百分之几的时间用于 I&#x2F;O 操作。</li>
</ul>
<p>Linux 中 I&#x2F;O 请求系统与现实生活中超市购物排队系统有很多类似的地方，通过对超市购物排队系统的理解，可以很快掌握 linux 中 I&#x2F;O 运行机制。比如：</p>
<ul>
<li>avgrq-sz 类似于超市排队中每人所买东西的多少。</li>
<li>avgqu-sz 类似于超市排队中单位时间内平均排队的人数。</li>
<li>await 类似于超市排队中每人的等待时间。</li>
<li>svctm类似于超市排队中收银员的收款速度。</li>
<li>%util类似于超市收银台前有人排队的时间比例。</li>
</ul>
<p>对于磁盘 IO 性能，一般有如下评判标准：</p>
<p>正常情况下 svctm 应该是小于 await 值的，而 svctm 的大小和磁盘性能有关，CPU、内存的负荷也会对 svctm值造成影响，过多的请求也会间接的导致 svctm值的增加。</p>
<p>await 值的大小一般取决于 svctm 的值和 I&#x2F;O 队列长度以及 I&#x2F;O 请求模式，如果 svctm的值与 await 很接近，表示几乎没有 I&#x2F;O 等待，磁盘性能很好，如果 await 的值远高于 svctm的值，则表示 I&#x2F;O 队列等待太长，系统上运行的应用程序将变慢，此时可以通过更换更快的硬盘来解决问题。</p>
<p>%util 项的值也是衡量磁盘 I&#x2F;O 的一个重要指标，如果%util 接近 100%，表示磁盘产生的 I&#x2F;O 请求太多，I&#x2F;O 系统已经满负荷的在工作，该磁盘可能存在瓶颈。长期下去，势必影响系统的性能，可以通过优化程序或者通过更换更高、更快的磁盘来解决此问题。</p>
<p><strong>4、网络性能评估</strong></p>
<p><strong>（1）ping 命令</strong></p>
<p>请看下面的一个输出：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@home ~]<span class="hljs-comment"># ping -c 3 qq.com</span><br>PING qq.com (113.108.81.189) 56(84) bytes of data.<br>64 bytes from 113.108.81.189 (113.108.81.189): icmp_seq=1 ttl=53 time=33.5 ms<br>--- qq.com ping statistics ---<br>3 packets transmitted, 3 received, 0% packet loss, time 2003ms<br>rtt min/avg/max/mdev = 33.528/33.855/34.104/0.241 ms<br></code></pre></td></tr></table></figure>

<p>在这个输出中，time值显示了两台主机之间的网络延时情况，如果此值很大，则表示网络的延时很大，单位为毫秒。在这个输出的最后，是对上面输出信息的一个总结，packet loss 表示网络的丢包率，此值越小，表示网络的质量越高。</p>
<p><strong>（2）netstat 命令</strong></p>
<p>netstat –i （查看路由情况）</p>
<p>netstat –r（查看网络接口状态）</p>
<p>netstat -antlpe | grep <port> 常用于查看tcp端口的连接状态</p>
<p><strong>（3）mtr&#x2F;traceroute 命令</strong></p>
<p>跟踪网络路由状态，推荐使用 mtr，动态跟踪网络路由，用于排除网络问题非常方便。</p>
<p><img src="/../images/image-20240328101046998.png" alt="image-20240328101046998"></p>
<p><strong>三、系统性能分析标准</strong></p>
<p><img src="/../images/27422-20230615182653977-2062615856.png" alt="图片"></p>
<p><strong>四、linux 内核常用调优参数</strong></p>
<table>
<thead>
<tr>
<th>内核常用调优参数:</th>
</tr>
</thead>
<tbody><tr>
<td>01. vm.swappiness：该参数控制系统在内存不足时，内核将页面交换到磁盘的程度。默认值为60，建议值为10-30。<br/>02. vm.overcommit_memory：该参数控制系统是否允许超额分配内存。默认值为0，建议值为1。<br/>03. vm.dirty_ratio：该参数控制系统脏页占内存的比例。默认值为20，建议值为5-10。<br/>04. vm.dirty_background_ratio：该参数控制系统后台写入脏页的比例。默认值为10，建议值为1-5。<br/>05. vm.dirty_expire_centisecs：该参数控制系统脏页过期时间。默认值为3000，建议值为1000-2000。<br/>06. vm.dirty_writeback_centisecs：该参数控制系统写回脏页的时间间隔。默认值为500，建议值为100-200。<br/>07. vm.vfs_cache_pressure：该参数控制系统内核缓存的大小和清理频率。默认值为100，建议值为50-100。<br/>08. vm.min_free_kbytes：该参数控制系统保留的最小空闲内存。默认值为4096，建议值为65536。<br/>09. vm.max_map_count：该参数控制系统允许的最大内存映射数量。默认值为65530，建议值为262144。<br/>010. net.core.somaxconn：该参数控制系统TCP连接的最大排队数量。默认值为128，建议值为1024。<br/>011. net.core.netdev_max_backlog：该参数控制系统网络设备接收数据包的队列大小。默认值为1000，建议值为5000。<br/>012. net.core.rmem_max：该参数控制系统TCP接收缓冲区的最大大小。默认值为212992，建议值为524288。<br/>013. net.core.wmem_max：该参数控制系统TCP发送缓冲区的最大大小。默认值为212992，建议值为524288。<br/>014. net.ipv4.tcp_fin_timeout：该参数控制系统TCP连接关闭的超时时间。默认值为60，建议值为10-20。<br/>015. net.ipv4.tcp_tw_reuse：该参数控制系统是否允许重用TIME_WAIT状态的TCP连接。默认值为0，建议值为1。<br/>016. net.ipv4.tcp_tw_recycle：该参数控制系统是否启用TCP连接回收机制。默认值为0，建议值为1。<br/>017. net.ipv4.tcp_max_syn_backlog：该参数控制系统TCP连接请求队列的大小。默认值为128，建议值为1024。<br/>018. net.ipv4.tcp_keepalive_time：该参数控制系统TCP连接的保持时间。默认值为7200秒，建议值为600-1200。<br/>019. net.ipv4.tcp_max_tw_buckets：该参数控制系统可以处理的TIME_WAIT状态的TCP连接的最大数量。默认值为180000，建议值为262144。<br/>020. net.ipv4.ip_local_port_range：该参数控制系统可以使用的本地端口范围。默认值为32768-61000，建议值为1024-65535。<br/>021. net.ipv4.tcp_slow_start_after_idle：该参数控制系统TCP连接空闲一段时间后是否重新进入慢启动状态。默认值为1，建议值为0。<br/>022. net.ipv4.tcp_no_metrics_save：该参数控制系统是否保存TCP连接的性能指标。默认值为0，建议值为1。<br/>023. net.ipv4.tcp_mtu_probing：该参数控制系统是否启用TCP MTU探测。默认值为0，建议值为1。<br/>024. net.ipv4.tcp_congestion_control：该参数控制系统TCP拥塞控制算法。默认值为cubic，建议值为bbr。<br/>025. fs.file-max：该参数控制系统可以打开的文件句柄数量。默认值为65536，建议值为1048576。<br/>026. fs.nr_open：该参数控制系统可以打开的文件句柄数量。默认值为1048576，建议值为1048576。<br/>027. fs.inotify.max_user_watches：该参数控制系统可以监视的文件数量。默认值为8192，建议值为524288。<br/>028. kernel.sem：该参数控制系统信号量的数量。默认值为250，建议值为512-1024。<br/>029. kernel.shmmax：该参数控制系统的共享内存大小。默认值为4294967295，建议值为536870912。<br/>030. kernel.shmall：该参数控制系统的共享内存大小。默认值为2097152，建议值为134217728。<br/>031. kernel.pid_max：该参数控制系统可以创建的最大进程数。默认值为32768，建议值为524288。<br/>032. kernel.core_pattern：该参数控制系统在出现核心转储文件时的文件名格式。默认值为core，建议值为&#x2F;corefiles&#x2F;core-%e-%s-%u-%g-%p-%t。<br/>033. kernel.msgmnb：该参数控制系统消息队列的最大大小。默认值为16384，建议值为65536。<br/>034. kernel.msgmax：该参数控制系统消息队列的最大大小。默认值为8192，建议值为65536。<br/>035. kernel.sysrq：该参数控制系统是否允许使用SysRq键。默认值为1，建议值为0。<br/>036. kernel.printk：该参数控制系统内核日志的输出级别。默认值为4 4 1 7，建议值为3 3 3 3。<br/>037. kernel.randomize_va_space：该参数控制系统是否启用地址空间随机化。默认值为2，建议值为2。<br/>038. kernel.nmi_watchdog：该参数控制系统是否启用NMI watchdog。默认值为1，建议值为0。<br/>039. kernel.softlockup_panic：该参数控制系统是否在软锁定时触发内核崩溃。默认值为0，建议值为1。<br/>040. kernel.hung_task_panic：该参数控制系统是否在任务超时时触发内核崩溃。默认值为0，建议值为1。<br/>041. kernel.panic：该参数控制系统在内核崩溃时的行为。默认值为0，建议值为10。<br/>042. kernel.panic_on_oops：该参数控制系统在Oops发生时是否触发内核崩溃。默认值为0，建议值为1。<br/>043. kernel.exec-shield：该参数控制系统是否启用执行保护。默认值为1，建议值为1。<br/>044. kernel.dmesg_restrict：该参数控制系统是否限制非特权用户访问dmesg。默认值为1，建议值为1。</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>Manage docker remotely</title>
    <url>/2023/01/13-Manage-docker-remotely/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote>
<p>Why I’m doing this? </p>
</blockquote>
<p>I just want to have a docker environment and I don’t want installed it on my machine,sometime is too huge to install docker on workstation machines(install <code>docker desktop</code> on macOS will at latest 4GB Storage and take some memory). macOS don’t have docker cli service only have desktop which I don’t want to have a GUI.</p>
<p>At meanwhile I have docker installed on my remote server, I’m thinking what if we <code>manage remote docker</code> just like <code>kubectl</code>, the fact is this is workable. So let’s get started:</p>
<h3 id="Remote-Server"><a href="#Remote-Server" class="headerlink" title="Remote Server"></a>Remote Server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># on remote docker host</span><br>&gt;_ root ~ <span class="hljs-comment"># mkdir /etc/systemd/system/docker.service.d</span><br>&gt;_ root ~ <span class="hljs-comment"># vim /etc/systemd/system/docker.service.d/docker.conf</span><br>&gt;_ root ~ <span class="hljs-comment"># cat /etc/systemd/system/docker.service.d/docker.conf</span><br>[Service]<br>ExecStart=<br>ExecStart=/usr/bin/dockerd<br><span class="hljs-comment"># check listen port</span><br>&gt;_ root ~ <span class="hljs-comment"># grep ExecStart /usr/lib/systemd/system/docker.service</span><br>ExecStart=/usr/bin/dockerd  -H tcp://0.0.0.0:4243 -H unix:///var/run/docker.sock --selinux-enabled=<span class="hljs-literal">false</span>  --log-opt max-size=1g<br><span class="hljs-comment"># make port keep same as service file</span><br>&gt;_ root ~ <span class="hljs-comment"># vim /etc/docker/daemon.json</span><br>&gt;_ root ~ <span class="hljs-comment"># cat /etc/docker/daemon.json</span><br>&#123;<br>  <span class="hljs-string">&quot;hosts&quot;</span>:[<br>    <span class="hljs-string">&quot;unix:///var/run/docker.sock&quot;</span>,<br>    <span class="hljs-string">&quot;tcp://0.0.0.0:4243&quot;</span><br>  ]<br>&#125;<br>&gt;_ root ~ <span class="hljs-comment"># systemctl daemon-reload</span><br>&gt;_ root ~ <span class="hljs-comment"># systemctl restart docker</span><br></code></pre></td></tr></table></figure>

<h3 id="Client"><a href="#Client" class="headerlink" title="Client"></a>Client</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># on macOS install docker command cli</span><br>~ » brew install docker<br>~ » docker  -H bo.ms:4243 version <br>Client: Docker Engine - Community<br> Version:           20.10.22<br> API version:       1.41<br> ...<br>~ » <span class="hljs-built_in">export</span> DOCKER_HOST=<span class="hljs-string">&quot;tcp://bo.ms:4243&quot;</span><br>~ » <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;export DOCKER_HOST=&quot;</span>tcp://bo.ms:4243<span class="hljs-string">&quot;&quot;</span> &gt;&gt; ~/.zshrc<br>~ » <span class="hljs-built_in">source</span> ~/.zshrc<br>~ » docker ps | grep ldap<br>bc8ea256297e   osixia/openldap    <span class="hljs-string">&quot;/container/tool/run&quot;</span>    7 days ago    Up 13 minutes   0.0.0.0:389-&gt;389/tcp, :::389-&gt;389/tcp, 0.0.0.0:636-&gt;636/tcp, :::636-&gt;636/tcp                                                      ldap<br></code></pre></td></tr></table></figure>

<blockquote>
<p>This is just a test environment for test purpose, for production we have to configure TLS to make sure the communication between client and server is secure.</p>
</blockquote>
<p>Here is an example of tutorial how how to configure it with ssl certificate. </p>
<p><a href="https://juejin.cn/post/7120568388216160270">https://juejin.cn/post/7120568388216160270</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Mount WebDav on linux</title>
    <url>/2023/09/18-Mount-WebDav-on-linux/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h4 id="Install-davfs2"><a href="#Install-davfs2" class="headerlink" title="Install  davfs2"></a>Install  <code>davfs2</code></h4><blockquote>
<p>davfs2 is a Linux tool for connecting to WebDAV shares and mount as  local disks</p>
</blockquote>
<h5 id="Install-davfs2-and-manully-mount"><a href="#Install-davfs2-and-manully-mount" class="headerlink" title="Install davfs2 and manully mount"></a>Install <code>davfs2</code> and manully mount</h5><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># for rocky/rhel9</span><br>root@srv:~<span class="hljs-comment"># yum-config-manager --add-repo http://www.city-fan.org/ftp/contrib/yum-repo/rhel9/x86_64/</span><br>root@srv:~<span class="hljs-comment"># yum search davfs2</span><br>Last metadata expiration check: 0:51:06 ago on Mon 18 Sep 2023 11:50:44 PM CST.<br>========================================================================== Name Exactly Matched: davfs2 ==========================================================================<br>davfs2.x86_64 : A filesystem driver <span class="hljs-keyword">for</span> WebDAV<br>root@srv:~<span class="hljs-comment"># yum install davfs2.x86_64 -yq</span><br><span class="hljs-comment"># will need user and password when mount webdav</span><br>root@srv:~<span class="hljs-comment"># mkdir /aliyun/ &amp;&amp; mount.davfs http://alist.srv/dav/ /aliyun</span><br>root@srv:~<span class="hljs-comment"># df -Th | grep aliyun</span><br>http://alist.srv/dav/  fuse      1.3T  763G  509G  61% /aliyun<br></code></pre></td></tr></table></figure>

<h5 id="Auto-mount-webdav-when-system-system-startup"><a href="#Auto-mount-webdav-when-system-system-startup" class="headerlink" title="Auto mount webdav when system system startup"></a>Auto mount webdav when system system startup</h5><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># uncomment and edit use_locks to 0</span><br>root@srv:~<span class="hljs-comment"># grep use_lock /etc/davfs2/davfs2.conf</span><br>use_locks       0<br><span class="hljs-comment"># append &quot;https://pan.cloud.com/dav user password&quot;</span><br>root@srv:~<span class="hljs-comment"># vim /etc/davfs2/secrets</span><br>root@srv:~<span class="hljs-comment"># tail -n1 /etc/davfs2/secrets</span><br>http://alist.srv/dav admin westlife<br>root@srv:~<span class="hljs-comment"># echo &quot;mount.davfs http://alist.srv/dav /aliyun/&quot; &gt;&gt;/etc/rc.d/rc.local</span><br>root@srv:~<span class="hljs-comment"># chmod +x /etc/rc.d/rc.local &amp;&amp; tail /etc/rc.d/rc.local | grep dav</span><br>mount.davfs http://alist.srv/dav/ /aliyun/<br></code></pre></td></tr></table></figure>

<p>When mount aliyundrive to local linux server,  all media content should be able add to <code>Plex</code> , then we can enjoy the <code>Plex</code> +<code>aliyun</code>+ <code>webdav</code>.</p>
<p><img src="/../images/image-20230919005809861.png" alt="image-20230919005809861"></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>webdav</tag>
      </tags>
  </entry>
  <entry>
    <title>Offline install docker</title>
    <url>/2022/12/23-Offline-install-docker/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote>
<p>场景</p>
</blockquote>
<p>有时候会面临这样的场景，环境不允许连接到外部网络，但是又需要安装Docker的场景，下面我们来用离线二进制的方式安装Docker。</p>
<p><a href="https://download.docker.com/linux/static/stable/x86_64/">https://download.docker.com/linux/static/stable/x86_64/</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">wget https://download.docker.com/linux/static/stable/x86_64/docker-20.10.9.tgz  <span class="hljs-comment"># 下载二进制离线安装包</span><br><span class="hljs-comment"># https://raw.githubusercontent.com/liumiaocn/easypack/master/docker/install-docker.sh</span><br>wget https://raw.githubusercontent.com/liumiaocn/easypack/master/docker/install-docker.sh  <span class="hljs-comment"># 一个自动化解压并复制二进制文件到相应PATH</span><br><span class="hljs-built_in">chmod</span> +x install-docker.sh<br>./install-docker.sh docker-20.10.9.tgz<br>docker version --short<br></code></pre></td></tr></table></figure>

<blockquote>
<p>一键自动化安装</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">curl -fsSL get.docker.com | CHANNEL=stable sh<br></code></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Prometheus+Grafana+cAdvisor to Monitor Docker</title>
    <url>/2023/01/16-Prometheus-Grafana-cAdvisor-to-Monitor-Docker/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=2007234347&auto=1&height=66"></iframe>

<hr>
<h2 id="Prometheus-Grafana-cAdvisor-to-Monitor-Docker"><a href="#Prometheus-Grafana-cAdvisor-to-Monitor-Docker" class="headerlink" title="Prometheus+Grafana+cAdvisor to Monitor Docker"></a>Prometheus+Grafana+cAdvisor to Monitor Docker</h2><h3 id="监控系统概述"><a href="#监控系统概述" class="headerlink" title="监控系统概述"></a>监控系统概述</h3><p><strong><code>cAdvisor</code></strong> <strong>（Container Advisor） ：</strong>用于收集正在运行的容器资源使用和性能信息。<br>开源地址：<a href="https://github.com/google/cadvisor">https://github.com/google/cadvisor</a></p>
<p><strong><code>Prometheus</code>（普罗米修斯）：</strong>容器监控系统。<br>官网地址：<a href="https://prometheus.io/">https://prometheus.io</a><br>开源地址：<a href="https://github.com/prometheus">https://github.com/prometheus</a></p>
<p><strong><code>Grafana</code>：</strong>是一个开源的度量分析和可视化系统。<br>开源地址：<a href="https://grafana.com/grafana">https://grafana.com/grafana</a></p>
<p><strong>工作流：</strong></p>
<p><code>cAdvisor</code> （采集所有容器资源利用率）-&gt;<code>Prometheus</code>（收集与存储）-&gt;<code>Grafana</code>（可视化展示）</p>
<h3 id="监控系统部署"><a href="#监控系统部署" class="headerlink" title="监控系统部署"></a>监控系统部署</h3><ul>
<li>Docker部署cAdvisor</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@bo ~]<span class="hljs-comment"># docker run -d --name=cadvisor \</span><br>--volume=/:/rootfs:ro \<br>--volume=/var/run:/var/run:ro \<br>--volume=/sys:/sys:ro \<br>--volume=/var/lib/docker/:/var/lib/docker:ro \<br>--volume=/dev/disk/:/dev/disk:ro \<br>--publish=8080:8080 \  <span class="hljs-comment"># 信息采集URL将会是http://&lt;host_ip&gt;:8080/metrics</span><br>google/cadvisor:latest<br></code></pre></td></tr></table></figure>

<p><img src="/../images/image-20230116131056702.png" alt="image-20230116131056702"></p>
<p>以下部署的监控或者其他信息采集URL都默认都将是<code>http://&lt;host_ip&gt;:&lt;port&gt;/metrics</code></p>
<ul>
<li>Docker部署Prometheus</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 首次运行Prometheus，并把/etc/prometheus配置copy出来</span><br>[root@bo ~]<span class="hljs-comment"># docker run -d --rm --name=prometheus -p 9099:9090 prom/prometheus </span><br>[root@bo ~]<span class="hljs-comment"># docker cp prometheus:/etc/prometheus/prometheus.yml /mnt/prometheus/</span><br>[root@bo ~]<span class="hljs-comment"># docker rm -f prometheus</span><br><span class="hljs-comment"># 再次运行Prometheus，将其配置文件持久化到本地，方便修改</span><br>[root@kvm ~]<span class="hljs-comment"># docker run -d --rm --name=prometheus -p 9099:9090 \</span><br>  -v /mnt/prometheus/:/etc/prometheus/  prom/prometheus<br></code></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 修改prometheus配置</span><br><span class="hljs-comment"># 注意yaml语法格式缩进，可以默认在vim设置一个tab两个缩进 tw=2 sw=2</span><br>[root@bo ~]<span class="hljs-comment"># echo &quot;set ts=2 sw=2&quot; &gt;&gt;/etc/vimrc</span><br>[root@bo ~]<span class="hljs-comment"># vim /mnt/prometheus/prometheus.yml </span><br><span class="hljs-comment"># 被监控端配置</span><br>scrape_configs:<br>  - job_name: <span class="hljs-string">&quot;docker-monitor&quot;</span>           <span class="hljs-comment"># job表示分组，通过job_name定义组名，给组员打上标签方便管理</span><br>    static_configs:<br>      - targets: [<span class="hljs-string">&quot;192.168.3.22:8080&quot;</span>]   <span class="hljs-comment"># targets表示被监控端instances</span><br>  - job_name: <span class="hljs-string">&quot;node-exporter&quot;</span><br>    static_configs:<br>      - targets: [<span class="hljs-string">&quot;192.168.3.22:9100&quot;</span>]<br>  - job_name: <span class="hljs-string">&quot;Prometheus&quot;</span><br>    static_configs:<br>      - targets: [<span class="hljs-string">&quot;192.168.3.22:9099&quot;</span>]<br>  <span class="hljs-comment"># 如果一个Job里面由多个数据节点需要监控，可以参考如下配置：</span><br>  <span class="hljs-comment">#- job_name: &quot;Prometheus&quot;</span><br>  <span class="hljs-comment">#  static_configs:</span><br>  <span class="hljs-comment">#     - targets: [&quot;10.9.169.146:8080&quot;,&quot;192.168.0.164:8080&quot;]  # 增加一个待监控节点</span><br>[root@bo ~]<span class="hljs-comment"># docker restart prometheus</span><br></code></pre></td></tr></table></figure>

<p><img src="/../images/image-20230116132735805.png" alt="image-20230116132735805"></p>
<p><img src="/../images/image-20230116132922290.png" alt="image-20230116132922290"></p>
<ul>
<li><p>Docker部署Grafana</p>
<p><a href="https://grafana.com/grafana/download?platform=docker&edition=oss">https://grafana.com/grafana/download?platform=docker&amp;edition=oss</a></p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@bo ~]<span class="hljs-comment"># docker run -d --name=grafana -p 3000:3000 grafana/grafana-oss</span><br><span class="hljs-comment"># 默认登录密码admin/admin</span><br></code></pre></td></tr></table></figure>

<h3 id="Grafana展示"><a href="#Grafana展示" class="headerlink" title="Grafana展示"></a>Grafana展示</h3><ul>
<li>添加grafana数据源（<code>Home</code>-&gt;<code>Add DataSource</code>-&gt;<code>Prometheus</code>-<code>save&amp;test</code>）</li>
</ul>
<p><img src="/../images/image-20230116134431790.png" alt="image-20230116134431790"></p>
<p><img src="/../images/image-20230116134402040.png" alt="image-20230116134402040"></p>
<p><img src="/../images/image-20230116134538087.png" alt="image-20230116134538087"></p>
<ul>
<li><p>监控docker主机模板(<code>Dashboards</code> -&gt;<code>Import</code>-<code>193</code>-<code>load</code> )</p>
<p>监控Docker主机模板ID：193，根据ID添加监控模版</p>
</li>
</ul>
<p><img src="/../images/image-20230116135716332.png" alt="image-20230116135716332"></p>
]]></content>
      <categories>
        <category>devops</category>
      </categories>
      <tags>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>Public network access LAN network setup Tutorial</title>
    <url>/2023/11/11-Public-network-access-LAN-network-setup-Tutorial/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h5 id="Why-I-write-this-article"><a href="#Why-I-write-this-article" class="headerlink" title="Why I write this article ?"></a>Why I write this article ?</h5><p>Because I have some test environment or Applications running on my Home server, the problem is when I leave the <code>LAN</code> net work, everything become unaccessible. That’s a very big problem and here’s a solution to solve this problem.</p>
<h5 id="Network-topology"><a href="#Network-topology" class="headerlink" title="Network topology"></a>Network topology</h5><blockquote>
<p><strong>home.msft.vip</strong>——&gt;<strong>192.168.3.200 ????</strong></p>
</blockquote>
<p><img src="/../images/R2S_taobao_solution.svg" alt="img"></p>
<h5 id="DDNS-on-R2S-optional"><a href="#DDNS-on-R2S-optional" class="headerlink" title="DDNS on R2S(optional)"></a>DDNS on R2S(optional)</h5><blockquote>
<p>NOTE</p>
</blockquote>
<ul>
<li><p>if you have an <code>static public IP address</code> from <code>network provider</code> just skip this step and add a <code>A record</code> with<code> IP address and domain</code>. </p>
</li>
<li><p>For my own scenario, I don’t have <code>static public IP address</code> from <code>China Unicom</code>，the Public address changes time to time，DDNS is for this case, it will update <code>changed IP and A record with domain </code>on Tencent Cloud.</p>
</li>
</ul>
<p><a href="https://github.com/Tencent-Cloud-Plugins/tencentcloud-openwrt-plugin-ddns">https://github.com/Tencent-Cloud-Plugins/tencentcloud-openwrt-plugin-ddns</a></p>
<h6 id="Install-Tencent-ddns-plugin-on-openwrt"><a href="#Install-Tencent-ddns-plugin-on-openwrt" class="headerlink" title="Install Tencent ddns plugin on openwrt"></a>Install Tencent ddns plugin on openwrt</h6><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Install tencent ddns plugin</span><br>wget http://openwrt-tencentddns-1301800460.cos.ap-guangzhou.myqcloud.com/luci-app-tencentddns_0.1.0-1_all.ipk<br>opkg install luci-app-tencentddns_0.1.0-1_all.ipk<br></code></pre></td></tr></table></figure>

<h6 id="Configure-Tencent-ddns-plugin"><a href="#Configure-Tencent-ddns-plugin" class="headerlink" title="Configure Tencent ddns plugin"></a>Configure Tencent ddns plugin</h6><ul>
<li><p>make sure r2s <code>WAN</code> portal use <code>PPPoe</code></p>
<p><img src="/../images/image-20231111203603553.png"></p>
</li>
<li><p>access token create ：<a href="https://console.dnspod.cn/account/token/token">https://console.dnspod.cn/account/token/token</a></p>
</li>
<li><p>make sure you have your own domain : <a href="https://console.dnspod.cn/dns/list">https://console.dnspod.cn/dns/list</a></p>
</li>
<li><p>Configure :</p>
</li>
</ul>
<p><img src="/../images/image-20231111201949739.png"></p>
<p><img src="/../images/image-20231111203252552.png"></p>
<p>After about steps, you should have a domain which point to your public IP from network provider.</p>
<h5 id="Configure-network-port-forwards-DMZ"><a href="#Configure-network-port-forwards-DMZ" class="headerlink" title="Configure network port forwards (DMZ)"></a>Configure network port forwards (DMZ)</h5><p>All network traffics from your domain with forward to <code>192.168.4.5</code>. For most cases, that’s it. BUT <code>192.168.4.5</code> actually is my router , so I have to set another port forward on my router .</p>
<h6 id="Network-port-forwards-DMZ-on-R2S"><a href="#Network-port-forwards-DMZ-on-R2S" class="headerlink" title="Network port forwards (DMZ) on R2S"></a>Network port forwards (DMZ) on <strong>R2S</strong></h6><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@r2swrt:08:45 PM ~] <span class="hljs-comment"># vim /etc/config/firewall</span><br>config redirect<br>	option target <span class="hljs-string">&#x27;DNAT&#x27;</span><br>	option src <span class="hljs-string">&#x27;wan&#x27;</span><br>	option dest <span class="hljs-string">&#x27;lan&#x27;</span><br>	option src_dport <span class="hljs-string">&#x27;1-65535&#x27;</span><br>	option dest_ip <span class="hljs-string">&#x27;192.168.4.5&#x27;</span>  <span class="hljs-comment"># target </span><br>	option dest_port <span class="hljs-string">&#x27;1-65535&#x27;</span><br>	option name <span class="hljs-string">&#x27;DMZ&#x27;</span><br>	option family <span class="hljs-string">&#x27;ipv4&#x27;</span><br>	list proto <span class="hljs-string">&#x27;tcp&#x27;</span><br>	list proto <span class="hljs-string">&#x27;udp&#x27;</span><br>	list proto <span class="hljs-string">&#x27;icmp&#x27;</span><br>	[root@r2swrt:08:45 PM ~] <span class="hljs-comment"># /etc/init.d/firewall restart</span><br></code></pre></td></tr></table></figure>

<p>Or use web UI:</p>
<p><img src="/../images/image-20231111205045973.png" alt="image-20231111205045973"></p>
<p><img src="/../images/image-20231111205123713.png" alt="image-20231111205123713"></p>
<p>Now all network traffic from Public domain will been forwarded to router, last thing we have to do is configure another port forward to the real my real server.</p>
<h6 id="Configure-port-forward-on-router-Xiaomi"><a href="#Configure-port-forward-on-router-Xiaomi" class="headerlink" title="Configure port forward on router(Xiaomi)"></a>Configure port forward on router(Xiaomi)</h6><p><img src="/../images/image-20231111210225228.png" alt="image-20231111210225228"></p>
<h5 id="Fanal-work-and-validate"><a href="#Fanal-work-and-validate" class="headerlink" title="Fanal work and validate"></a>Fanal work and validate</h5><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">jason@MacbookPro  ~  nslookup home.msft.vip<br>Server:		192.168.5.1<br>Address:	192.168.5.1<span class="hljs-comment">#53</span><br><br>Non-authoritative answer:<br>Name:	home.msft.vip<br>Address: 10.1.15.251<br><br>jason@MacbookPro  ~  ssh root@home.msft.vip<br>Last login: Sat Nov 11 22:05:34 2023 from 192.168.3.106<br>[root@home ~]<span class="hljs-comment"># hostname -i</span><br>192.168.3.200<br></code></pre></td></tr></table></figure>

<h5 id="Improvement"><a href="#Improvement" class="headerlink" title="Improvement"></a>Improvement</h5><p>As you can see there are some limits when use <code>Tencent DDNS Plugin</code>: <strong>only can update one sub domain each time</strong>.</p>
<p><code>ddns-go Plugin</code> could fix this problem and could update multiple domains one time , let’s get started:</p>
<h6 id="Install-ddns-go-any-server-is-fine"><a href="#Install-ddns-go-any-server-is-fine" class="headerlink" title="Install ddns-go (any server is fine)"></a>Install <code>ddns-go</code> (any server is fine)</h6><p><a href="https://github.com/jeessy2/ddns-go/releases">https://github.com/jeessy2/ddns-go/releases</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># </span><br><span class="hljs-built_in">mkdir</span> /mnt/ddns/ &amp;&amp; <span class="hljs-built_in">cd</span> /mnt/ddns/ &amp;&amp; https://github.com/jeessy2/ddns-go/releases/download/v5.6.6/ddns-go_5.6.6_linux_x86_64.tar.gz <br>tar zxvf ddns-go_5.6.6_linux_x86_64.tar.gz <br><span class="hljs-comment"># install and Register to service</span><br>./ddns-go -s install <span class="hljs-string">&quot;-l&quot;</span> <span class="hljs-string">&quot;:9877&quot;</span> <span class="hljs-string">&quot;-f&quot;</span> <span class="hljs-string">&quot;60&quot;</span> <span class="hljs-string">&quot;-cacheTimes&quot;</span> <span class="hljs-string">&quot;5&quot;</span> <span class="hljs-string">&quot;-c&quot;</span> <span class="hljs-string">&quot;/mnt/ddns/ddns-go.yaml&quot;</span><br><span class="hljs-comment"># make sure service is running</span><br>systemctl status ddns-go.service<br></code></pre></td></tr></table></figure>

<h6 id="Go-to-webUI-to-configure"><a href="#Go-to-webUI-to-configure" class="headerlink" title="Go to webUI to configure"></a>Go to webUI to configure</h6><p><img src="/../images/image-20231112031548084.png" alt="image-20231112031548084"></p>
<p><img src="/../images/image-20231112031646675.png" alt="image-20231112031646675"></p>
<blockquote>
<p>Note</p>
</blockquote>
<p>How we got IP addr, I try to update same ip from <code>r2s</code> server which have installed <code>Tencent ddns</code> and use <code>command</code> to get it. For different devices and different network, you have to test the command meet your own requires. below is my output which is correct.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@homesrv /mnt/ddns]<span class="hljs-comment"># ssh root@r2s &#x27;ifconfig pppoe-wan | grep Mask | cut -d: -f2 | cut -d&quot; &quot; -f1&#x27;</span><br>10.1.112.196<br></code></pre></td></tr></table></figure>

<p>After all setting update complete then don’t forget to save your changes. Wait a few seconds, then check the logs:</p>
<p><img src="/../images/image-20231112032524073.png" alt="image-20231112032524073"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@homesrv /mnt/ddns]<span class="hljs-comment"># nslookup gfn.msft.vip</span><br>Server:		192.168.4.1<br>Address:	192.168.4.1<span class="hljs-comment">#53</span><br><br>Non-authoritative answer:<br>Name:	gfn.msft.vip<br>Address: 10.1.112.196<br><br>[root@homesrv /mnt/ddns]<span class="hljs-comment"># nslookup dav.msft.vip</span><br>Server:		192.168.4.1<br>Address:	192.168.4.1<span class="hljs-comment">#53</span><br><br>Non-authoritative answer:<br>Name:	dav.msft.vip<br>Address: 10.1.112.196<br></code></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>LAN</tag>
        <tag>DDNS</tag>
        <tag>DMZ</tag>
      </tags>
  </entry>
  <entry>
    <title>Pxe-install-or-rescure.md</title>
    <url>/2022/09/19-Pxe-install-or-rescure/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@localhost ~]<span class="hljs-comment"># yum install httpd tftp-server dhcpd syslinux system-config-kickstart -y </span><br></code></pre></td></tr></table></figure>
<ul>
<li>配置HTTP共享</li>
</ul>
<hr>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">[root@localhost ~] mkdir <span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/html/</span>redhat&#123;<span class="hljs-number">73</span>,<span class="hljs-number">73</span>,<span class="hljs-number">68</span>&#125; -p<br>[root@localhost ~] mount <span class="hljs-regexp">/iso/</span>rhel-server7.<span class="hljs-number">2</span>****.iso <span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/html/</span>redhat72<br>[root@localhost ~] mount <span class="hljs-regexp">/iso/</span>rhel-server7.<span class="hljs-number">3</span>***.iso <span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/html/</span>redhat73<br>[root@localhost ~] mount <span class="hljs-regexp">/iso/</span>rhel-server6.<span class="hljs-number">8</span>***.iso <span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/html/</span>redhat68<br>[root@localhost ~] service httpd start<br>[root@localhost ~] chkconfig httpd on<br></code></pre></td></tr></table></figure>
<hr>
<ul>
<li>system-config-kickstart:</li>
</ul>
<blockquote>
<p>运行system-config-kickstart，最后把ks.cfg文件保存到httpd共享的不同目录下，可以用ksvalidator命令检查语法错误，中共配合三个ks文件分别保存在&#x2F;var&#x2F;www&#x2F;html&#x2F;ks7,ks72,ks68目录下</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@localhost ~] system-config-kickstart<br>[root@localhost ~] ksvalidator <span class="hljs-comment"># 检查ks.cfg语法</span><br></code></pre></td></tr></table></figure>
<ul>
<li>Tftp-server:</li>
</ul>
<figure class="highlight rust"><table><tr><td class="code"><pre><code class="hljs rust">[root@localhost ~]# vim /etc/xinetd.d/tftp <br><span class="hljs-number">13</span>         server_args             = -s /var/lib/tftpboot<br> <span class="hljs-number">14</span>         disable                 = no  #yes修改为no<br> <span class="hljs-number">15</span>         per_source              = <span class="hljs-number">11</span><br> <span class="hljs-number">16</span>         cps                     = <span class="hljs-number">100</span> <span class="hljs-number">2</span><br>[root@localhost linux]# cd /var/lib/tftpboot/<br>[root@localhost tftpboot]# cp /var/www/html/redhat72/isolinux/vmlinuz redhat72/<br>[root@localhost tftpboot]# cp /var/www/html/source/redhat72/isolinux/initrd.img redhat72/<br># redhat6.<span class="hljs-number">8</span>和redhat7.<span class="hljs-number">3</span>一样，从挂载镜像中将initrd.img,vmlinuz 复制到http共享目录中的对应文件夹<br>[root@localhost tftpboot]# mkdir pxelinux.cfg <br>[root@localhost tftpboot]# cp /var/www/html/redhat73/isolinux/isolinux.cfg ./pxelinux.cfg/default<br>[root@localhost tftpboot]# cp /var/www/html/source/redhat73/isolinux/vesamenu.c32 .<br># isolinux.cfg和vesamenu.c32任意一个系统的考个过来都可以<br>[root@localhost tftpboot]# cp /usr/share/syslinux/pxelinux.<span class="hljs-number">0</span> .<br># pxelinux.<span class="hljs-number">0</span> 此文件是在安装主机获得dhcp分配的ip以后要读取的文件<br><br>[root@localhost tftpboot]# cat pxelinux.cfg/default<br>default vesamenu.c32<br>timeout <span class="hljs-number">30</span>  #<span class="hljs-number">30</span>代表<span class="hljs-number">3</span>秒选择时间，默认<span class="hljs-number">600</span>（即一分钟）<br>display boot.msg<br>...<br>menu separator # insert an empty line<br>menu separator # insert an empty line<br><br>##########################################################################<br>################# INSTALL CONFIG OPTION BEGIN ############################<br>##########################################################################<br><br>label linux<br>  menu label ^Install RedHat <span class="hljs-number">7.3</span> Linux # install menu<br>  kernel redhat73/vmlinuz<br>  #此处不再需要写repo地址了，因为在ks.cfg文件中已经指定了从哪里获取相应的镜像,也指定了安装过程中的各种选择<br>  append initrd=redhat73/initrd.img  ks=http:<span class="hljs-comment">//192.168.1.100/ks7/ks.cfg  </span><br><br>label linux<br>  menu label ^Install RedHat <span class="hljs-number">7.2</span> Linux <br>  #此处也必须要指定内核文件的准确位置，默认读取的内核文件在tftpboot下，此处我们部署的是多个版本，故具体版本读取相应目录下的文件<br>  kernel redhat72/vmlinuz<br>  append initrd=redhat72/initrd.img  ks=http:<span class="hljs-comment">//192.168.1.100/ks72/ks.cfg </span><br><br>label linux<br>  menu label  ^Install RedHat <span class="hljs-number">6.8</span> Linux<br>  kernel redhat68/vmlinuz<br>  append initrd=redhat68/initrd.img  ks=http:<span class="hljs-comment">//192.168.1.100/ks6/ksmini.cfg </span><br><br>############# END LINE FOR LEBEL INSTALL OPTIONS ######################################<br><br><br>######################################################<br>######### Rescue Mode <span class="hljs-keyword">for</span> <span class="hljs-title class_">all</span> options config     #####<br>######################################################<br><br># utilities submenu<br>menu begin ^Rescue Mode<br>  menu title Rescue Mode<br><br> label rescue<br>  menu indent count <span class="hljs-number">5</span><br>  menu label ^Rescue mode <span class="hljs-keyword">for</span> <span class="hljs-title class_">RedHat</span> <span class="hljs-number">7.3</span> <br>  text help<br>  If the system will not boot, this lets you access files<br>  and edit config files to <span class="hljs-keyword">try</span> to get it booting again.<br>  endtext<br>  kernel redhat73/vmlinuz<br>  append initrd=redhat73/initrd.img repo=http:<span class="hljs-comment">//192.168.1.100/source/redhat73 rescue quiet</span><br>  #挽救环境必须写repo地址，此处不是安装，故也不需要ks文件，所以此处必须指定从哪里获取挽救环境所需要的资源<br><br> label rescue<br>  menu indent count <span class="hljs-number">5</span><br>  menu label ^Rescue mode <span class="hljs-keyword">for</span> <span class="hljs-title class_">RedHat</span> <span class="hljs-number">7.2</span> <br>  text help<br>  If the system will not boot, this lets you access files<br>  and edit config files to <span class="hljs-keyword">try</span> to get it booting again.<br>  endtext<br>  kernel redhat72/vmlinuz<br>  append initrd=redhat72/initrd.img repo=http:<span class="hljs-comment">//192.168.1.100/source/redhat72 rescue quiet</span><br><br><br> label rescue<br>  menu indent count <span class="hljs-number">5</span><br>  menu label ^Rescue mode <span class="hljs-keyword">for</span> <span class="hljs-title class_">RedHat</span> <span class="hljs-number">6.8</span> <br>  text help<br>  If the system will not boot, this lets you access files<br>  and edit config files to <span class="hljs-keyword">try</span> to get it booting again.<br>  endtext<br>  kernel redhat68/vmlinuz<br>  append initrd=redhat68/initrd.img repo=http:<span class="hljs-comment">//192.168.1.100/source/redhat68  rescue quiet</span><br><br>label returntomain<br>  menu label Return to ^main menu<br>  menu exit<br><br>menu end<br><br>###################### END LINE FOR RESCUE MODE ########################################<br></code></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@localhost ~]<span class="hljs-comment"># systemctl start tftp</span><br>[root@localhost ~]<span class="hljs-comment"># systemctl enable tftp</span><br></code></pre></td></tr></table></figure>

<ul>
<li>DHCP的配置：</li>
</ul>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><code class="hljs pgsql">[root@localhost tftpboot]# cat /etc/dhcp/dhcpd.conf |grep -v <span class="hljs-string">&#x27;#&#x27;</span> <br><span class="hljs-keyword">option</span> <span class="hljs-keyword">domain</span>-<span class="hljs-type">name</span> &quot;example.com&quot;;<br><span class="hljs-keyword">option</span> <span class="hljs-keyword">domain</span>-<span class="hljs-type">name</span>-servers <span class="hljs-number">192.168</span><span class="hljs-number">.1</span><span class="hljs-number">.100</span>;<br><span class="hljs-keyword">default</span>-lease-<span class="hljs-type">time</span> <span class="hljs-number">600</span>;<br>max-lease-<span class="hljs-type">time</span> <span class="hljs-number">7200</span>;<br><span class="hljs-keyword">log</span>-facility local7;<br><br>subnet <span class="hljs-number">192.168</span><span class="hljs-number">.1</span><span class="hljs-number">.0</span> netmask <span class="hljs-number">255.255</span><span class="hljs-number">.255</span><span class="hljs-number">.0</span> &#123;<br>  <span class="hljs-keyword">range</span> <span class="hljs-number">192.168</span><span class="hljs-number">.1</span><span class="hljs-number">.20</span> <span class="hljs-number">192.168</span><span class="hljs-number">.1</span><span class="hljs-number">.99</span>;<br>  <span class="hljs-keyword">option</span> routers <span class="hljs-number">192.168</span><span class="hljs-number">.1</span><span class="hljs-number">.250</span>;<br>  next-<span class="hljs-keyword">server</span> <span class="hljs-number">192.168</span><span class="hljs-number">.1</span><span class="hljs-number">.100</span>;<br>  filename &quot;pxelinux.0&quot;; # 这里很重要，对应TFTP哪里的设定<br>&#125;<br></code></pre></td></tr></table></figure>
<ul>
<li>Firewall</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@localhost tftpboot]<span class="hljs-comment"># firewall-cmd --add-service=httpd --permanent </span><br>[root@localhost tftpboot]<span class="hljs-comment"># firewall-cmd --add-service=tftp --permanent </span><br>[root@localhost tftpboot]<span class="hljs-comment"># firewall-cmd --list-all</span><br>public (active)<br>  target: default<br>  icmp-block-inversion: no<br>  interfaces: br0 enp8s0 wlp9s0<br>  sources: <br>  services: dhcpv6-client ftp http ssh tftp <span class="hljs-comment">##说明添加上了</span><br>  ports: 4505/tcp 4506/tcp<br>  protocols: <br>  masquerade: <span class="hljs-built_in">yes</span><br>  forward-ports: <br>  sourceports: <br>  icmp-blocks: <br>  rich rules: <br>  rule family=<span class="hljs-string">&quot;ipv4&quot;</span> <span class="hljs-built_in">source</span> address=<span class="hljs-string">&quot;192.168.0.10&quot;</span> masquerade<br></code></pre></td></tr></table></figure>
<p><img src="/../images/pxe1.png" alt="这里写图片描述"><br><img src="/../images/pxe2.png" alt="这里写图片描述"><br><img src="/../images/pxe3.png" alt="这里写图片描述"></p>
]]></content>
      <tags>
        <tag>pxe</tag>
      </tags>
  </entry>
  <entry>
    <title>Python Downloader &amp; FFmpeg</title>
    <url>/2024/03/30-Python-Downloader-FFmpeg/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="2aad998cf4fd6882ab6423ea957d440bc7dfc463ed73891d04ec237724c333fe"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Password ?</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>Redis tutorial</title>
    <url>/2022/12/23-Redis-tutorial/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Redis 是高性能 NoSQL 内存 key-value 数据库，支持数据的持久化、备份、事物、发布&#x2F;订阅、通知、key 过期等特性。</p>
<p>键的类型只能为字符串，值支持五种数据类型：字符串、列表、集合、散列表、有序集合。</p>
<h3 id="1-数据类型"><a href="#1-数据类型" class="headerlink" title="1 数据类型"></a>1 数据类型</h3><p>Redis支持五种数据类型：</p>
<ul>
<li><strong>String</strong><br>最基本类型，类似Memcached，二进制安全。一个键最大存储512MB</li>
<li><strong>Hash</strong><br>string类型的映射表，特别适合存储对象。每个 hash 可以存储 2^32-1 键值对。</li>
<li><strong>List</strong><br>string类型的列表，按照插入顺序排序。最多可存2^32-1元素。</li>
<li><strong>Set</strong><br>string类型的无序集合，通过哈希表实现，成员元素唯一。最大的成员数为 2^32-1。</li>
<li><strong>zset</strong><br>string类型的有序集合，成员元素唯一。每个元素关联一个double类型的分数。通过分数排序。</li>
</ul>
<h3 id="2-数据结构"><a href="#2-数据结构" class="headerlink" title="2 数据结构"></a>2 数据结构</h3><h4 id="2-1-字典"><a href="#2-1-字典" class="headerlink" title="2.1 字典"></a>2.1 字典</h4><h5 id="1）dictht"><a href="#1）dictht" class="headerlink" title="1）dictht"></a>1）dictht</h5><p>dictht 是一个散列表结构，使用拉链法解决哈希冲突。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">dictht</span> &#123;</span><br>    dictEntry **table;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> size;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> sizemask;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> used;<br>&#125; dictht;<br></code></pre></td></tr></table></figure>

<h5 id="2）dictEntry"><a href="#2）dictEntry" class="headerlink" title="2）dictEntry"></a>2）dictEntry</h5><figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">dictEntry</span> &#123;</span><br>    <span class="hljs-type">void</span> *key;<br>    <span class="hljs-class"><span class="hljs-keyword">union</span> &#123;</span><br>        <span class="hljs-type">void</span> *val;<br>        <span class="hljs-type">uint64_t</span> u64;<br>        <span class="hljs-type">int64_t</span> s64;<br>        <span class="hljs-type">double</span> d;<br>    &#125; v;<br>    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">dictEntry</span> *<span class="hljs-title">next</span>;</span><br>&#125; dictEntry;<br></code></pre></td></tr></table></figure>

<h5 id="3）dict"><a href="#3）dict" class="headerlink" title="3）dict"></a>3）dict</h5><p>Redis 的字典 dict 中包含两个哈希表 dictht，这是为了方便进行 rehash 操作。在扩容时，将其中一个 dictht 上的键值对 rehash 到另一个 dictht 上面，完成之后释放空间并交换两个 dictht 的角色。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">dict</span> &#123;</span><br>    dictType *type;<br>    <span class="hljs-type">void</span> *privdata;<br>    dictht ht[<span class="hljs-number">2</span>];<br>    <span class="hljs-type">long</span> rehashidx; <span class="hljs-comment">/* rehashing not in progress if rehashidx == -1 */</span><br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> iterators; <span class="hljs-comment">/* number of iterators currently running */</span><br>&#125; dict;<br></code></pre></td></tr></table></figure>

<h5 id="4）rehash"><a href="#4）rehash" class="headerlink" title="4）rehash"></a>4）rehash</h5><p>rehash 操作不是一次性完成，而是采用渐进方式，这是为了避免一次性执行过多的 rehash 操作给服务器带来过大的负担。</p>
<p>渐进式 rehash 通过记录 dict 的 rehashidx 完成，它从 0 开始，然后每执行一次 rehash 都会递增。例如在一次 rehash 中，要把 dict[0] rehash 到 dict[1]，这一次会把 dict[0] 上 table[rehashidx] 的键值对 rehash 到 dict[1] 上，dict[0] 的 table[rehashidx] 指向 null，并令 rehashidx++。</p>
<p>在 rehash 期间，每次对字典执行添加、删除、查找或者更新操作时，都会执行一次渐进式 rehash。</p>
<p>采用渐进式 rehash 会导致字典中的数据分散在两个 dictht 上，因此对字典的查找操作也需要到对应的 dictht 去执行。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> <span class="hljs-title function_">dictRehash</span><span class="hljs-params">(dict *d, <span class="hljs-type">int</span> n)</span> &#123;<br>    <span class="hljs-type">int</span> empty_visits = n * <span class="hljs-number">10</span>; <span class="hljs-comment">/* Max number of empty buckets to visit. */</span><br>    <span class="hljs-keyword">if</span> (!dictIsRehashing(d)) <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br><br>    <span class="hljs-keyword">while</span> (n-- &amp;&amp; d-&gt;ht[<span class="hljs-number">0</span>].used != <span class="hljs-number">0</span>) &#123;<br>        dictEntry *de, *nextde;<br><br>        <span class="hljs-comment">/* Note that rehashidx can&#x27;t overflow as we are sure there are more</span><br><span class="hljs-comment">         * elements because ht[0].used != 0 */</span><br>        assert(d-&gt;ht[<span class="hljs-number">0</span>].size &gt; (<span class="hljs-type">unsigned</span> <span class="hljs-type">long</span>) d-&gt;rehashidx);<br>        <span class="hljs-keyword">while</span> (d-&gt;ht[<span class="hljs-number">0</span>].table[d-&gt;rehashidx] == <span class="hljs-literal">NULL</span>) &#123;<br>            d-&gt;rehashidx++;<br>            <span class="hljs-keyword">if</span> (--empty_visits == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>        &#125;<br>        de = d-&gt;ht[<span class="hljs-number">0</span>].table[d-&gt;rehashidx];<br>        <span class="hljs-comment">/* Move all the keys in this bucket from the old to the new hash HT */</span><br>        <span class="hljs-keyword">while</span> (de) &#123;<br>            <span class="hljs-type">uint64_t</span> h;<br><br>            nextde = de-&gt;next;<br>            <span class="hljs-comment">/* Get the index in the new hash table */</span><br>            h = dictHashKey(d, de-&gt;key) &amp; d-&gt;ht[<span class="hljs-number">1</span>].sizemask;<br>            de-&gt;next = d-&gt;ht[<span class="hljs-number">1</span>].table[h];<br>            d-&gt;ht[<span class="hljs-number">1</span>].table[h] = de;<br>            d-&gt;ht[<span class="hljs-number">0</span>].used--;<br>            d-&gt;ht[<span class="hljs-number">1</span>].used++;<br>            de = nextde;<br>        &#125;<br>        d-&gt;ht[<span class="hljs-number">0</span>].table[d-&gt;rehashidx] = <span class="hljs-literal">NULL</span>;<br>        d-&gt;rehashidx++;<br>    &#125;<br><br>    <span class="hljs-comment">/* Check if we already rehashed the whole table... */</span><br>    <span class="hljs-keyword">if</span> (d-&gt;ht[<span class="hljs-number">0</span>].used == <span class="hljs-number">0</span>) &#123;<br>        zfree(d-&gt;ht[<span class="hljs-number">0</span>].table);<br>        d-&gt;ht[<span class="hljs-number">0</span>] = d-&gt;ht[<span class="hljs-number">1</span>];<br>        _dictReset(&amp;d-&gt;ht[<span class="hljs-number">1</span>]);<br>        d-&gt;rehashidx = <span class="hljs-number">-1</span>;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br><br>    <span class="hljs-comment">/* More to rehash... */</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>&#125;<br></code></pre></td></tr></table></figure>

<h4 id="2-2-跳跃表"><a href="#2-2-跳跃表" class="headerlink" title="2.2 跳跃表"></a>2.2 跳跃表</h4><p>是有序集合的底层实现之一。</p>
<p>跳跃表是基于多指针有序链表实现的，可以看成多个有序链表。</p>
<p><a href="https://cdn.jsdelivr.net/gh/wujun234/images@master/1579599270964.png"><img src="/../images/1579599270964.png" alt="img"></a></p>
<p>在查找时，从上层指针开始查找，找到对应的区间之后再到下一层去查找。下图演示了查找 22 的过程。</p>
<p><a href="https://cdn.jsdelivr.net/gh/wujun234/images@master/1579599297542.png"><img src="/../images/1579599297542.png" alt="img"></a></p>
<p>与红黑树等平衡树相比，跳跃表具有以下优点：</p>
<ul>
<li>插入速度非常快速，因为不需要进行旋转等操作来维护平衡性；</li>
<li>更容易实现；</li>
<li>支持无锁操作。</li>
</ul>
<h3 id="3-使用场景"><a href="#3-使用场景" class="headerlink" title="3 使用场景"></a>3 使用场景</h3><h4 id="3-1-计数器"><a href="#3-1-计数器" class="headerlink" title="3.1 计数器"></a>3.1 计数器</h4><p>可以对 String 进行自增自减运算，从而实现计数器功能。</p>
<p>Redis 这种内存型数据库的读写性能非常高，很适合存储频繁读写的计数量。</p>
<h4 id="3-2-缓存"><a href="#3-2-缓存" class="headerlink" title="3.2 缓存"></a>3.2 缓存</h4><p>将热点数据放到内存中，设置内存的最大使用量以及淘汰策略来保证缓存的命中率。</p>
<h4 id="3-3-查找表"><a href="#3-3-查找表" class="headerlink" title="3.3 查找表"></a>3.3 查找表</h4><p>例如 DNS 记录就很适合使用 Redis 进行存储。</p>
<p>查找表和缓存类似，也是利用了 Redis 快速的查找特性。但是查找表的内容不能失效，而缓存的内容可以失效，因为缓存不作为可靠的数据来源。</p>
<h4 id="3-4-消息队列"><a href="#3-4-消息队列" class="headerlink" title="3.4 消息队列"></a>3.4 消息队列</h4><p>List 是一个双向链表，可以通过 lpush 和 rpop 写入和读取消息</p>
<p>不过最好使用 Kafka、RabbitMQ 等消息中间件。</p>
<h4 id="3-5-会话缓存"><a href="#3-5-会话缓存" class="headerlink" title="3.5 会话缓存"></a>3.5 会话缓存</h4><p>可以使用 Redis 来统一存储多台应用服务器的会话信息。</p>
<p>当应用服务器不再存储用户的会话信息，也就不再具有状态，一个用户可以请求任意一个应用服务器，从而更容易实现高可用性以及可伸缩性。</p>
<h4 id="3-6-分布式锁实现"><a href="#3-6-分布式锁实现" class="headerlink" title="3.6 分布式锁实现"></a>3.6 分布式锁实现</h4><p>在分布式场景下，无法使用单机环境下的锁来对多个节点上的进程进行同步。</p>
<p>可以使用 Redis 自带的 SETNX 命令实现分布式锁，除此之外，还可以使用官方提供的 RedLock 分布式锁实现。</p>
<h4 id="3-7-其它"><a href="#3-7-其它" class="headerlink" title="3.7 其它"></a>3.7 其它</h4><p>Set 可以实现交集、并集等操作，从而实现共同好友等功能。</p>
<p>ZSet 可以实现有序性操作，从而实现排行榜等功能。</p>
<h3 id="4-Redis-命令"><a href="#4-Redis-命令" class="headerlink" title="4 Redis 命令"></a>4 Redis 命令</h3><ul>
<li>redis-cli：启动客户端<br>-r：重复执行<br>-i : 每隔几秒执行一次<br>-x : 读取标准输入<br>-c：连接redis集群时使用<br>-a：加入redis密码<br>–slave：把客户端模拟成所连接redis节点的从节点，获得数据库更新信息<br>–latency：测试客户端到redis服务器的网络延迟<br>–stat：实时监控redis信息<br>–raw：返回格式化后的结果<br>–no-raw：返回原始格式</li>
<li>redis-cli -h host -p port -a password：连接远程 redis 服务</li>
<li>slowlog get：慢查询</li>
<li>info memory：内存信息</li>
</ul>
<h3 id="5-数据淘汰策略"><a href="#5-数据淘汰策略" class="headerlink" title="5 数据淘汰策略"></a>5 数据淘汰策略</h3><p>可以设置内存最大使用量，当内存使用量超出时，会施行数据淘汰策略。</p>
<p>Redis 具体有 6 种淘汰策略：</p>
<table>
<thead>
<tr>
<th>策略</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>volatile-lru</td>
<td>从已设置过期时间的数据集中挑选最近最少使用的数据淘汰</td>
</tr>
<tr>
<td>volatile-ttl</td>
<td>从已设置过期时间的数据集中挑选将要过期的数据淘汰</td>
</tr>
<tr>
<td>volatile-random</td>
<td>从已设置过期时间的数据集中任意选择数据淘汰</td>
</tr>
<tr>
<td>allkeys-lru</td>
<td>从所有数据集中挑选最近最少使用的数据淘汰</td>
</tr>
<tr>
<td>allkeys-random</td>
<td>从所有数据集中任意选择数据进行淘汰</td>
</tr>
<tr>
<td>noeviction</td>
<td>禁止驱逐数据</td>
</tr>
</tbody></table>
<p>作为内存数据库，出于对性能和内存消耗的考虑，Redis 的淘汰算法实际实现上并非针对所有 key，而是抽样一小部分并且从中选出被淘汰的 key。</p>
<p>使用 Redis 缓存数据时，为了提高缓存命中率，需要保证缓存数据都是热点数据。可以将内存最大使用量设置为热点数据占用的内存量，然后启用 allkeys-lru 淘汰策略，将最近最少使用的数据淘汰。</p>
<p>Redis 4.0 引入了 volatile-lfu 和 allkeys-lfu 淘汰策略，LFU 策略通过统计访问频率，将访问频率最少的键值对淘汰。</p>
<h3 id="6-持久化"><a href="#6-持久化" class="headerlink" title="6 持久化"></a>6 持久化</h3><p>Redis 是内存型数据库，为了保证数据在断电后不会丢失，需要将内存中的数据持久化到硬盘上。</p>
<h4 id="1）RDB-持久化"><a href="#1）RDB-持久化" class="headerlink" title="1）RDB 持久化"></a>1）RDB 持久化</h4><p>将某个时间点的所有数据都存放到硬盘上。</p>
<p>可以将快照复制到其它服务器从而创建具有相同数据的服务器副本。</p>
<p>如果系统发生故障，将会丢失最后一次创建快照之后的数据。</p>
<p>如果数据量很大，保存快照的时间会很长。</p>
<h4 id="2）AOF-持久化"><a href="#2）AOF-持久化" class="headerlink" title="2）AOF 持久化"></a>2）AOF 持久化</h4><p>将写命令添加到 AOF 文件（Append Only File）的末尾。</p>
<p>使用 AOF 持久化需要设置同步选项，从而确保写命令同步到磁盘文件上的时机。这是因为对文件进行写入并不会马上将内容同步到磁盘上，而是先存储到缓冲区，然后由操作系统决定什么时候同步到磁盘。有以下同步选项：</p>
<table>
<thead>
<tr>
<th align="center">选项</th>
<th align="center">同步频率</th>
</tr>
</thead>
<tbody><tr>
<td align="center">always</td>
<td align="center">每个写命令都同步</td>
</tr>
<tr>
<td align="center">everysec</td>
<td align="center">每秒同步一次</td>
</tr>
<tr>
<td align="center">no</td>
<td align="center">让操作系统来决定何时同步</td>
</tr>
</tbody></table>
<ul>
<li>always 选项会严重减低服务器的性能；</li>
<li>everysec 选项比较合适，可以保证系统崩溃时只会丢失一秒左右的数据，并且 Redis 每秒执行一次同步对服务器性能几乎没有任何影响；</li>
<li>no 选项并不能给服务器性能带来多大的提升，而且也会增加系统崩溃时数据丢失的数量。</li>
</ul>
<p>随着服务器写请求的增多，AOF 文件会越来越大。Redis 提供了一种将 AOF 重写的特性，能够去除 AOF 文件中的冗余写命令。</p>
<h3 id="7-Redis-事务"><a href="#7-Redis-事务" class="headerlink" title="7 Redis 事务"></a>7 Redis 事务</h3><p><strong>Redis 事务不遵循 ACID，中间出错，后面继续执行</strong></p>
<ul>
<li>multi：开启事务</li>
<li>exec：提交事务</li>
<li>discard：回滚事务</li>
<li>watch：监听事务（乐观锁）</li>
</ul>
<p>一个事务包含了多个命令，服务器在执行事务期间，不会改去执行其它客户端的命令请求。</p>
<p>事务中的多个命令被一次性发送给服务器，而不是一条一条发送，这种方式被称为流水线，它可以减少客户端与服务器之间的网络通信次数从而提升性能。</p>
<p>Redis 最简单的事务实现方式是使用 MULTI 和 EXEC 命令将事务操作包围起来。</p>
<h3 id="8-事件"><a href="#8-事件" class="headerlink" title="8 事件"></a>8 事件</h3><p>Redis 服务器是一个事件驱动程序。</p>
<h4 id="8-1-文件事件"><a href="#8-1-文件事件" class="headerlink" title="8.1 文件事件"></a>8.1 文件事件</h4><p>服务器通过套接字与客户端或者其它服务器进行通信，文件事件就是对套接字操作的抽象。</p>
<p>Redis 基于 Reactor 模式开发了自己的网络事件处理器，使用 I&#x2F;O 多路复用程序来同时监听多个套接字，并将到达的事件传送给文件事件分派器，分派器会根据套接字产生的事件类型调用相应的事件处理器。</p>
<p><a href="https://cdn.jsdelivr.net/gh/wujun234/images@master/1579600777968.png"><img src="/../images/1579600777968.png" alt="img"></a></p>
<h4 id="8-2-时间事件"><a href="#8-2-时间事件" class="headerlink" title="8.2 时间事件"></a>8.2 时间事件</h4><p>服务器有一些操作需要在给定的时间点执行，时间事件是对这类定时操作的抽象。</p>
<p>时间事件又分为：</p>
<ul>
<li>定时事件：是让一段程序在指定的时间之内执行一次；</li>
<li>周期性事件：是让一段程序每隔指定时间就执行一次。</li>
</ul>
<p>Redis 将所有时间事件都放在一个无序链表中，通过遍历整个链表查找出已到达的时间事件，并调用相应的事件处理器。</p>
<h4 id="8-3-事件的调度与执行"><a href="#8-3-事件的调度与执行" class="headerlink" title="8.3 事件的调度与执行"></a>8.3 事件的调度与执行</h4><p>服务器需要不断监听文件事件的套接字才能得到待处理的文件事件，但是不能一直监听，否则时间事件无法在规定的时间内执行，因此监听时间应该根据距离现在最近的时间事件来决定。</p>
<p>事件调度与执行由 aeProcessEvents 函数负责，伪代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">aeProcessEvents</span>():<br>    <span class="hljs-comment"># 获取到达时间离当前时间最接近的时间事件</span><br>    time_event = aeSearchNearestTimer()<br>    <span class="hljs-comment"># 计算最接近的时间事件距离到达还有多少毫秒</span><br>    remaind_ms = time_event.when - unix_ts_now()<br>    <span class="hljs-comment"># 如果事件已到达，那么 remaind_ms 的值可能为负数，将它设为 0</span><br>    <span class="hljs-keyword">if</span> remaind_ms &lt; <span class="hljs-number">0</span>:<br>        remaind_ms = <span class="hljs-number">0</span><br>    <span class="hljs-comment"># 根据 remaind_ms 的值，创建 timeval</span><br>    timeval = create_timeval_with_ms(remaind_ms)<br>    <span class="hljs-comment"># 阻塞并等待文件事件产生，最大阻塞时间由传入的 timeval 决定</span><br>    aeApiPoll(timeval)<br>    <span class="hljs-comment"># 处理所有已产生的文件事件</span><br>    procesFileEvents()<br>    <span class="hljs-comment"># 处理所有已到达的时间事件</span><br>    processTimeEvents()<br></code></pre></td></tr></table></figure>

<p>将 aeProcessEvents 函数置于一个循环里面，加上初始化和清理函数，就构成了 Redis 服务器的主函数，伪代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>    <span class="hljs-comment"># 初始化服务器</span><br>    init_server()<br>    <span class="hljs-comment"># 一直处理事件，直到服务器关闭为止</span><br>    <span class="hljs-keyword">while</span> server_is_not_shutdown():<br>        aeProcessEvents()<br>    <span class="hljs-comment"># 服务器关闭，执行清理操作</span><br>    clean_server()<br></code></pre></td></tr></table></figure>

<p>从事件处理的角度来看，服务器运行流程如下：</p>
<p><a href="https://cdn.jsdelivr.net/gh/wujun234/images@master/1579600848611.png"><img src="/../images/1579600848611.png" alt="img"></a></p>
<h3 id="9-Redis-备份与恢复"><a href="#9-Redis-备份与恢复" class="headerlink" title="9 Redis 备份与恢复"></a>9 Redis 备份与恢复</h3><ul>
<li>备份：<br>SAVE 命令：在安装目录创建dump.rdb文件。<br>BGSAVE命令：后台执行SAVE 。<br>AOF：保存命令，文件名appendonly.aof。需redis.conf中开启配置</li>
<li>恢复：将备份文件移到安装目录并启动服务</li>
</ul>
<h3 id="10-Redis-主从分离"><a href="#10-Redis-主从分离" class="headerlink" title="10 Redis 主从分离"></a>10 Redis 主从分离</h3><ol>
<li>将 redis.conf 拷贝多份，并且创建多个目录，每个目录中都有自己的redis.conf 配置文件</li>
<li>配置启动Maste<br>修改端口、pidfile（启动redis 时linux 分配的pid 进程号）</li>
<li>配置启动Slave<br>修改端口号和pid 文件，配置文件中配置从服务“slaveof 127.0.0.1 6380”或“masterauth ”</li>
<li>设置读写分离<br>在主服务器中设置“slave-read-only yes”</li>
</ol>
<h3 id="11-Redis-哨兵"><a href="#11-Redis-哨兵" class="headerlink" title="11 Redis 哨兵"></a>11 Redis 哨兵</h3><p>Sentinel 系统可以监视任意多个主服务器，以其从服务器，在被监视的主服务器下线时，自动将下线主服务器的某个从服务器升级为新的主服务器。</p>
<ol>
<li>配置Sentinel<br>在sentinel.conf 配置文件中port属性设置sentinel 的端口</li>
<li>启动Sentinel<br>&#x2F;sentinel$ redis-sentinel sentinel.conf</li>
</ol>
<h3 id="12-Redis-Cluster"><a href="#12-Redis-Cluster" class="headerlink" title="12 Redis Cluster"></a>12 Redis Cluster</h3><p>redis3.0开始提供了redis的分布式集群模式，redis-cluster把所有的物理节点映射到[0-16383]slot上,cluster 负责维护node&lt;-&gt;slot&lt;-&gt;value，保存时将 key 大致均等地哈希映射到不同的节点</p>
<ol>
<li>集群中redis节点彼此互联，客户端连接集群中任一可用节点即可</li>
<li>集群中超过半数的节点检测失效时，节点fail</li>
</ol>
<h3 id="13-分片"><a href="#13-分片" class="headerlink" title="13 分片"></a>13 分片</h3><p>分片是将数据划分为多个部分的方法，可以将数据存储到多台机器里面，这种方法在解决某些问题时可以获得线性级别的性能提升。</p>
<p>假设有 4 个 Redis 实例 R0，R1，R2，R3，还有很多表示用户的键 user:1，user:2，… ，有不同的方式来选择一个指定的键存储在哪个实例中。</p>
<ul>
<li>最简单的方式是范围分片，例如用户 id 从 0<del>1000 的存储到实例 R0 中，用户 id 从 1001</del>2000 的存储到实例 R1 中，等等。但是这样需要维护一张映射范围表，维护操作代价很高。</li>
<li>还有一种方式是哈希分片，使用 CRC32 哈希函数将键转换为一个数字，再对实例数量求模就能知道应该存储的实例。</li>
</ul>
<p>根据执行分片的位置，可以分为三种分片方式：</p>
<ul>
<li>客户端分片：客户端使用一致性哈希等算法决定键应当分布到哪个节点。</li>
<li>代理分片：将客户端请求发送到代理上，由代理转发请求到正确的节点上。</li>
<li>服务器分片：Redis Cluster。</li>
</ul>
<h3 id="14-Redis-与-Memcached-的区别"><a href="#14-Redis-与-Memcached-的区别" class="headerlink" title="14 Redis 与 Memcached 的区别"></a>14 Redis 与 Memcached 的区别</h3><h4 id="1）数据类型"><a href="#1）数据类型" class="headerlink" title="1）数据类型"></a>1）数据类型</h4><ul>
<li>Memcached 仅支持字符串类型</li>
<li>Redis 支持五种不同的数据类型</li>
</ul>
<h4 id="2）数据持久化"><a href="#2）数据持久化" class="headerlink" title="2）数据持久化"></a>2）数据持久化</h4><ul>
<li>Memcached 不支持持久化。</li>
<li>Redis 支持两种持久化策略：RDB 快照和 AOF 日志</li>
</ul>
<h4 id="3）分布式"><a href="#3）分布式" class="headerlink" title="3）分布式"></a>3）分布式</h4><ul>
<li>Memcached 不支持分布式，只能通过在客户端使用一致性哈希来实现分布式存储，这种方式在存储和查询时都需要先在客户端计算一次数据所在的节点。</li>
<li>Redis Cluster 实现了分布式的支持。</li>
</ul>
<h4 id="4）内存管理机制"><a href="#4）内存管理机制" class="headerlink" title="4）内存管理机制"></a>4）内存管理机制</h4><ul>
<li>Memcached 使用预分配的内存池，存在空间浪费<ul>
<li>Memcached 将内存分割成特定长度的块来存储数据，以完全解决内存碎片的问题。但是这种方式会使得内存的利用率不高，例如块的大小为 128 bytes，只存储 100 bytes 的数据，那么剩下的 28 bytes 就浪费掉了。</li>
</ul>
</li>
<li>Redis 使用现场申请内存的方式，存在内存碎片<ul>
<li>在 Redis 中，并不是所有数据都一直存储在内存中，可以将一些很久没用的 value 交换到磁盘，而 Memcached 的数据则会一直在内存中。</li>
</ul>
</li>
</ul>
<h4 id="5）事务"><a href="#5）事务" class="headerlink" title="5）事务"></a>5）事务</h4><ul>
<li>Memcached 提供了 cas 命令</li>
<li>Redis 没有，只提供了事务</li>
</ul>
<h4 id="6）线程"><a href="#6）线程" class="headerlink" title="6）线程"></a>6）线程</h4><ul>
<li>Memcached 是多线程，非阻塞 IO 复用的网络模型</li>
<li>Redis 使用单线程的 IO 复用模型</li>
</ul>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Register sql server to azure arc</title>
    <url>/2022/12/23-Register-sql-server-to-azure-arc/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Microsoft official document:</p>
<p><a href="https://learn.microsoft.com/en-us/sql/sql-server/azure-arc/connect?view=sql-server-ver16&tabs=azure,windows">https://learn.microsoft.com/en-us/sql/sql-server/azure-arc/connect?view=sql-server-ver16&amp;tabs=azure%2Cwindows</a></p>
<p>Before starting, make sure we have fully meet the Prerequisites:</p>
<p><img src="/../images/1715511-20221222205753749-1157153513.png" alt="img"></p>
<ul>
<li><p>How to assign Azure Connected SQL Server Onboarding roles in azure portal:</p>
<p><a href="https://learn.microsoft.com/en-us/azure/role-based-access-control/role-assignments-portal?tabs=current">https://learn.microsoft.com/en-us/azure/role-based-access-control/role-assignments-portal?tabs=current</a></p>
</li>
<li><p>How to Assign Microsoft.AzureArcData under your subscription :</p>
<p>Login azure portal, navigate to <code>Subscriptions</code>-&gt;<code>subscription name</code>-&gt;<code>settings-</code>&gt; <code>Resource providers</code>-&gt;search <code>arc</code>-&gt;make sure the status is <code>registered</code></p>
<p><img src="/../images/1715511-20221222205824394-894464917.png" alt="img"></p>
</li>
</ul>
<p>If <code>Microsoft.AzureArcData</code> is <strong>not</strong> <code>registered</code>, please follow below steps to register resource provider:</p>
<p><a href="https://learn.microsoft.com/en-us/powershell/module/az.resources/register-azresourceprovider?view=azps-8.3.0">https://learn.microsoft.com/en-us/powershell/module/az.resources/register-azresourceprovider?view=azps-8.3.0</a></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># Run with powershell with administrator</span><br><span class="hljs-comment"># install az.resource module</span><br><span class="hljs-built_in">PS</span> C:\WINDOWS\system32&gt; <span class="hljs-built_in">Install-Module</span> <span class="hljs-literal">-Name</span> Az.Resources <span class="hljs-literal">-RequiredVersion</span> <span class="hljs-number">2.5</span>.<span class="hljs-number">0</span><br> <br><span class="hljs-comment"># connect to your azure account</span><br><span class="hljs-built_in">PS</span> C:\WINDOWS\system32&gt; <span class="hljs-built_in">Connect-AzAccount</span><br> <br><span class="hljs-comment"># register the resource provider</span><br><span class="hljs-built_in">PS</span> C:\Users\hubo&gt; <span class="hljs-built_in">Register-AzResourceProvider</span> <span class="hljs-literal">-ProviderNamespace</span> Microsoft.AzureArcData<br> <br><span class="hljs-comment"># Check register status</span><br><span class="hljs-built_in">PS</span> C:\Users\hubo&gt; <span class="hljs-built_in">Get-AzResourceProvider</span> <span class="hljs-literal">-ProviderNamespace</span> Microsoft.AzureArcData<br></code></pre></td></tr></table></figure>

<p>After above steps, we should be fully prepared to register sql server to azure arc. then we can follow below steps to register to azure arc:</p>
<p><a href="https://learn.microsoft.com/en-us/sql/sql-server/azure-arc/connect?view=sql-server-ver16&tabs=azure,windows">https://learn.microsoft.com/en-us/sql/sql-server/azure-arc/connect?view=sql-server-ver16&amp;tabs=azure%2Cwindows</a></p>
]]></content>
      <categories>
        <category>Azure</category>
      </categories>
      <tags>
        <tag>azure arc</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL Server AG with Docker without Pacemaker</title>
    <url>/2024/03/30-SQL-Server-AG-with-Docker-without-Pacemaker/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><ul>
<li>Prepare the Dockerfile with HA feather</li>
<li>Build image with Dockerfile just created</li>
<li>Create the SQL server nodes with the image which with HA feather</li>
<li>Create the certs ,master key and logins on each nodes</li>
<li>Sync all certs to each other</li>
<li>Create AG group and Endpoint on Primary Node</li>
<li>Two Secondary nodes join AG group</li>
<li>Create TestDB and add TestDB to AG</li>
<li>Change roles on each node to test</li>
</ul>
<hr>
<p><a href="https://github.com/Jas0n0ss/Docker-SQL-AG">https://github.com/Jas0n0ss/Docker-SQL-AG/</a></p>
<hr>
<p><img src="/../images/1715511-20220105144225714-1041686735.png"><br><img src="/../images/1715511-20220105144327090-1077591348.png"><br><img src="/../images/1715511-20220105144402422-1188916047.png"><br><img src="/../images/1715511-20220105144415932-612773261.png"><br><img src="/../images/1715511-20220105144427114-1558719089.png"><br><img src="/../images/1715511-20220105144448505-296327747.png"><br><img src="/../images/1715511-20220105144457299-1527380142.png"></p>
<hr>
<p>证书在&#x2F;tmp会有问题，换个路径存放证书即可<br><img src="/../images/1715511-20220105143559627-1907507850.png"><br><img src="/../images/1715511-20220105143707741-1262841328.png"><br><img src="/../images/1715511-20220105143848282-859248208.png"></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>sqlserver</tag>
      </tags>
  </entry>
  <entry>
    <title>Static web resources hosted on Cloudflare and Azure</title>
    <url>/2024/05/10-Static-web-resources-hosted-on-Cloudflare-and-Azure/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="Deploy-to-Cloudflare"><a href="#Deploy-to-Cloudflare" class="headerlink" title="Deploy to Cloudflare"></a>Deploy to Cloudflare</h3><style>.embed-container {
    position: relative;
    padding-bottom: 56.25%;
    height: 0;
    overflow: hidden;
    max-width: 100%;
  }
  .embed-container iframe, .embed-container object, .embed-container embed {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  </style>

<div class="embed-container"><iframe src="https://www.youtube.com/embed/hIB8DuFeSpU" allowfullscreen frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe></div>

<p><img src="/../images/image-20240511015744816.png" alt="image-20240511015744816"></p>
<p><img src="/../images/image-20240511014856247.png" alt="image-20240511014856247"></p>
<hr>
<h3 id="Deploy-to-Azure"><a href="#Deploy-to-Azure" class="headerlink" title="Deploy to Azure"></a>Deploy to Azure</h3><p>91PRGfEWssk</p>
<style>.embed-container {
    position: relative;
    padding-bottom: 56.25%;
    height: 0;
    overflow: hidden;
    max-width: 100%;
  }
  .embed-container iframe, .embed-container object, .embed-container embed {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  </style>

<div class="embed-container"><iframe src="https://www.youtube.com/embed/91PRGfEWssk" allowfullscreen frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe></div>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>pages</tag>
      </tags>
  </entry>
  <entry>
    <title>Travel map for 2024</title>
    <url>/2024/02/06-Travel-map-for-202402/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="97f168b02df3356a851a1c7d4ffa3d16e4e96133833f4e065e306d8129e430ef">52e655b51742b1dd46867bef910a97b2db9ba6092c6bfdeda662da662da9e5a961fc0a4b9e620b460ad1cf485dd1d3abda4e28cfa94781494b861f785f328adc0ecce698cc9a2c28255abc6aa8c373634f3da5f24680836182d725fa90f28c60a42c1d6255174bd75bd3360182b20d07e14f97f0bb7f6774e1d886e70ae00fde17b53801d7ae01e3115529677de5b40ff0e823de7147d581deb04cec4eda69a21af016324d5d57849299d7b1da19b3b6961837a23422c1e6b9ecd06e7fdc6eb38814906e62fc48ff76c117b9bc047f52660b7a748daca1cf479c9b8135ce6164c5cac818e1948c92a07e215b35c33bd87499f046495cfca051d574438ee80fa7d6d37c1403c2a8d91d34dbecdffbf74565dd4565bfd03f632c831d4273ab408999dbd2bafa15bc01c8aba2e2b55e01ff6b48b7743d08059ebfb7d46dbe9a1c6cec8841bc95fa53176c97d21101bbb60b2e69b08fbb63ed9cad46f603679b869319c0d9e7971ace4baee9cb2b79caa93c91e5654275431f271cb3d693d7879c2146bc181309a9e1005664c58fcad40a65e19069da8a1a2e72f68996bfa0dee0c78cb2e22078b9f1531bb9927e6c6b10740d7ad7a32f5c0140619797c99898d6916318e753e33f26ee3a7573d7b38d6bb23dc897a790ea4104a174a8b3cfdc845fdb052832d839dac723face46efd32b2f4076aaa42970a65d2a1d9700080ee27b935f5d3c6a1ea12db46b1d820b137ae16ca0ba0c3e57feb72cb4b3a76051f88e9978647a18aa596c667f14bef9b8405cca9dc2b21affc491d8491408d014a26166b8e18a8e1f7860d37d647f52266a5bfbe8dded65fbfef1e466c69059c542e25013f143c383468be3d05c8ecd151c50cbb54b0d9365740c1396f7581aa83d1e31adc29a72976ce90853cc64ebbf4b5f3aeadd85b4ef3c6f2ae513a8cd497ab7bd40b193d5ad23629ed45c60f6d737cce4d482a2ac60001e54e9df5048b77d59a1ea3472b7da447df054c2e46e71e265953e9d9fd048269cf9ea20daaef7220c610888d0c0f37eb77ece2ab69a84d2955c41bd638769991c659d63c8bc2e8ab1dbce376ffc431f130de497d77c93bd257b5bc301a05da5f7bfa90e58b39a0baabc15596b0786e0d0beddcff091a1ad0d5191908720adcffa70f695c45a15778392d8546240b221d1d00f22ae9fb2c69d3e0d261e39a82dd9d63ed3330eb7e6890ef721c9cf7b18f4fefb010d36e9363094bb44cc8b6daaaa069b605f89de4351d188eb5708fc0f5671d69aa5f0538e1e1355b35497ec86117a19264ebd0f6648bc7570808e789b02b8a4e9f8d2611470e43d0d856c48721b6104c30bf7ad956cd1e976a395fc77c2b73636b665758c3df119bc7a647d15f42186b396426012ab9491eea608864db71fc8ef30a5f6ec7308499bf66b4ccfe9a922b1cd4cd761cd35f2164ae0788ce4c71dd8a9593269f0213607abf681aaa45ec840fd2cd6f81d7b542b3d4c0dd925a3537aed0336d2e77e4131f9afb8606d4bd8f0498c769fafc351db34d14a26fbe8a32a00e7c4e748581c977c4538f901fb80191d16509d67df89f6ee05f404494203fe9152ed953ac3bcf8ea0e054c4a8f385a04f26f50b9165facf351481a55f503285ab294d8ab62c258b298c96c6ef1493d02f6e0b8740dae1451f1711c7c60d98a03ddc779fe69ed25c1966e07540c7bcea81c01cea7922a5d215332dc6e2348701d71ad52c6136dc1872a14595f1358d506908924978ff42d3347d94d2fc1b834e8fd7bc2fa75e0f715eb667e2665ee32e65159ed9807855cadc45310f1d55c4c394575dc9640f63e9f364b91211489903c202bc06a1ee7fc96c02c1d06b41b4c858632b04225c07554a4ec4c2cebdc20f152bb6f0450f2905b96f732ec8ebd88a40c0f55a8daecff81ca9e0097acb3cf7be0d558429384ec7d0bdb6d586cf07f3cb1c591e55d3f988ebf9de6668d5db585e91cffea9f220b0225f132faf2693211073bc624e28207e3df0be481235d39d2961140162c5fe4a4c672a40eaa9ed5e1f6e2562809e67347453efb0743cc1b6ebaa75f844c32d8300d0ead6bec44769a9fe3a6eaba44a9556fd2d912fa3eeb362b4f4f24c54745635ed7b2a3fc19767e487e95b620c58774618d68bcbd29afc3bc90c377cd447d971ec514935f4b3dd0227462ac8953e1e6134593d25eaa20fda2df9e1538f43985dc681d40d5c6a8118490be0754769db6ffe180386b924ab8a7e5161aeece635a32178599bfd552a6c87a8d9b7f8fe01a13e0f6fcc62886d6d4db3ecd0806a7827db4feca859864f990772a859a48fd90edc11d30f4a3d23dceb07505409e8a2fae79611eb75e87def97bba89438affbabe80b3d49f75f7381b19b36d</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">ENTER THE PASSWORD!!!</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
  <entry>
    <title>Traveling map 202310</title>
    <url>/2023/09/29-Traveling-map-202310/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="2023-国庆自驾游安排"><a href="#2023-国庆自驾游安排" class="headerlink" title="2023 国庆自驾游安排"></a>2023 国庆自驾游安排</h3><h3 id="自驾游路线"><a href="#自驾游路线" class="headerlink" title="自驾游路线"></a>自驾游路线</h3><p><img src="/../images/image-20230929115426312.png" alt="image-20230929115426312"></p>
<h4 id="行程安排"><a href="#行程安排" class="headerlink" title="行程安排"></a>行程安排</h4><table>
<thead>
<tr>
<th align="center">行程</th>
<th align="center">距离</th>
<th align="center">当地景点</th>
<th>驾驶时长</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><strong>西安-宝鸡</strong></td>
<td align="center"><strong>170KM</strong></td>
<td align="center"><em><strong>法门寺、太白山国家森林公园、钓鱼台、周公庙、五丈原诸葛亮庙、凤翔东湖、嘉陵江源头风景区、关山草原、炎帝陵祠、宝鸡青铜器博物馆</strong></em></td>
<td><strong>2.5H</strong></td>
</tr>
<tr>
<td align="center"><strong>宝鸡-固原</strong></td>
<td align="center"><strong>255KM</strong></td>
<td align="center"><em><strong>火石寨国家地质公园，固原博物馆，六盘山国家森林公园，六盘山红军长征纪念馆，须弥山石窟 ，老龙潭红崖老巷子，六盘玩美乐园，六盘天池</strong></em></td>
<td><strong>3H</strong></td>
</tr>
<tr>
<td align="center"><strong>固原-中卫</strong></td>
<td align="center"><strong>218KM</strong></td>
<td align="center"><em><strong>沙坡头，腾格里沙漠，66号公路，南北长滩村落，寺口子，通湖草原，金沙岛</strong></em></td>
<td><strong>2H</strong></td>
</tr>
<tr>
<td align="center"><strong>中卫-兰州</strong></td>
<td align="center"><strong>280KM</strong></td>
<td align="center"><em><strong>乾武门、榆中市民公园、团庄遗址、小西湖、第五泉、达川粉黛乱子草花海、五一山省级森林生态旅游区、兰州西津东路清真大寺、金城公园、甘肃省博物馆</strong></em></td>
<td><strong>3.5H</strong></td>
</tr>
<tr>
<td align="center"><strong>兰州-天水</strong></td>
<td align="center"><strong>300KM</strong></td>
<td align="center"><em><strong>仙人崖，麦积山石窟，南郭寺，大象山，伏羲庙，天水博物馆，李崖遗迹</strong></em></td>
<td><strong>4H</strong></td>
</tr>
<tr>
<td align="center"><strong>天水-宝鸡</strong></td>
<td align="center"><strong>194KM</strong></td>
<td align="center"><em><strong>法门寺、太白山国家森林公园、钓鱼台、周公庙、五丈原诸葛亮庙、凤翔东湖、嘉陵江源头风景区、关山草原、炎帝陵祠、宝鸡青铜器博物馆</strong></em></td>
<td><strong>2.5H</strong></td>
</tr>
<tr>
<td align="center"><strong>宝鸡-西安</strong></td>
<td align="center"><strong>170KM</strong></td>
<td align="center">None</td>
<td><strong>2H</strong></td>
</tr>
</tbody></table>
<h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul>
<li><p>出发前请务必检查好**<code>驾驶证</code>和<code>个人证件</code>**,  <strong>带好要穿的厚衣服，再带一条毛毯，防止你冷</strong>，标出路过的城市，选好休息和加油的地方。</p>
</li>
<li><p>向老司机或者在网上询问将要跑的这些路的路况，做到心里有数。</p>
</li>
<li><p><strong>准备好路上的应急食物</strong>，尤其是要多买些巧克力，因为巧克力是高热量食物。<strong>水是必备的，特别是纯净水</strong>，不但人喝，车子有的时候也要使用。比如发动机冷却水缺乏，纯净水可以应急。长距离下坡刹车过热，可以使用纯净水降温等。</p>
</li>
<li><p><strong>准备个小药箱，把退烧、痢疾、感冒的药准备些</strong>。最好有个急救包，预防意外伤害。</p>
</li>
<li><p>准备帐篷等野营需要的东西，预备一些自己喜欢的光盘，路上听自己喜欢的乐曲可以消除旅途寂寞和疲劳。准备好照相机和足量的胶卷，不要在景区购买胶卷，数码相机和手机不要忘带充电器。相机手机等贵重物品最好自备可密封的胶袋、防潮袋以防万一。</p>
</li>
<li><p><strong>最好随身携带好钱和身份证、驾驶证、行车证等人和车的证件</strong>。手袋、行包等行李及贵重物品在离车时切勿放在车外可观察到的地方，以免引贼。</p>
</li>
<li><p><strong>最重要的是把自己的车彻底的检测一下，常规检查机油、冷却液、助力油、玻璃水，重点检查轮胎、备胎胎压和轮胎磨损是不是正常</strong>，轮胎上有没有扎钉子。看看<strong>千斤顶和更换轮胎的工具</strong>是不是在车上，带一个<strong>轮胎充气泵</strong>也许有用处。有可能的话去4S店使用计算机检查一下发动机、刹车、ABS和电路情况。</p>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Understanding-Locking-in-SQL-Server</title>
    <url>/2022/09/19-Understanding-Locking-in-SQL-Server/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><style>.embed-container {
    position: relative;
    padding-bottom: 56.25%;
    height: 0;
    overflow: hidden;
    max-width: 100%;
  }
  .embed-container iframe, .embed-container object, .embed-container embed {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  </style>

<div class="embed-container"><iframe src="https://www.youtube.com/embed/-zgFVWCieVI" allowfullscreen frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe></div>

<blockquote>
<p>Thinking</p>
</blockquote>
<ul>
<li>What is Resource types in locking of SQL Server?</li>
<li>What is Lock Modes in SQL Server?</li>
</ul>
<p>It gives live view of looking at different type of lock modes as well as the resources types where the locks are placed. It describes in greater detail about RID, Key, Page, Extent, Table and DB Resource types in SQL Server Locking concept. It also explains Shared Locks, Update Lock, Exclusive Locks, Intent Lock, Schema Lock and Bulk Update locks in SQL Server.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">--Script that you can run to look at Live Locks and resource types in SQL Server:</span><br><span class="hljs-keyword">exec</span> sp_lock;<br>GO<br></code></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>SQL Server</tag>
        <tag>Deadlock</tag>
        <tag>Performance</tag>
      </tags>
  </entry>
  <entry>
    <title>VMware-Workstation-Pro-16-license-keys</title>
    <url>/2022/09/19-VMware-Workstation-Pro-16-license-keys/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Install new VMware Workstation Pro 16</p>
<p><a href="https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html">https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html</a></p>
<p>Keys Here:</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ZF3R0</span>-FHED2-M80TY-<span class="hljs-number">8</span>QYGC-NPKYF<br><span class="hljs-attribute">YF390</span>-<span class="hljs-number">0</span>HF8P-M81RQ-<span class="hljs-number">2</span>DXQE-M2UT6<br><span class="hljs-attribute">ZF71R</span>-DMX85-<span class="hljs-number">08</span>DQY-<span class="hljs-number">8</span>YMNC-PPHV8<br></code></pre></td></tr></table></figure>
<p>Here is Latest VMware Workstation Pro 16 Key 100% Working</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ZF3R0</span>-FHED2-M80TY-<span class="hljs-number">8</span>QYGC-NPKYF<br><span class="hljs-attribute">YF390</span>-<span class="hljs-number">0</span>HF8P-M81RQ-<span class="hljs-number">2</span>DXQE-M2UT6<br><span class="hljs-attribute">ZF71R</span>-DMX85-<span class="hljs-number">08</span>DQY-<span class="hljs-number">8</span>YMNC-PPHV8<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>VMware</tag>
      </tags>
  </entry>
  <entry>
    <title>alpine nginx docker image</title>
    <url>/2023/08/24-alpine-nginx-docker-image/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>This is a demo for build nginx docker image use nginx source code from alpine base image, let’s jump in and get started:</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-comment"># Dockerfile</span><br><span class="hljs-keyword">FROM</span> alpine:latest<br><span class="hljs-keyword">RUN</span><span class="language-bash"> apk update &amp;&amp; apk upgrade</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> apk add build-base pcre pcre-dev openssl openssl-dev zlib zlib-dev wget curl</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> <span class="hljs-built_in">rm</span> -rf /var/cache/apk/*</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> wget https://nginx.org/download/nginx-1.25.2.tar.gz</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> tar -zxvf nginx-1.25.2.tar.gz</span><br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> ./nginx-1.25.2</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> ./configure --prefix=/opt/nginx </span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> make -j4</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> make -j4 install</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> make clean</span><br><span class="hljs-keyword">ENV</span> PATH $PATH:/opt/nginx/sbin<br><span class="hljs-keyword">EXPOSE</span> <span class="hljs-number">80</span><br><span class="hljs-keyword">ENTRYPOINT</span><span class="language-bash"> [<span class="hljs-string">&quot;nginx&quot;</span>, <span class="hljs-string">&quot;-g&quot;</span>, <span class="hljs-string">&quot;daemon off;&quot;</span>]</span><br></code></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">jason@MacbookPro  ~/Desktop/azure/containerapp/src  ll<br>.rw-r--r-- 453 jason 25 8 01:34 Dockerfile<br>jason@MacbookPro  ~/Desktop/azure/containerapp/src  docker build -t iibmer/ngx-alpine:1.25.2 .<br>jason@MacbookPro  ~/Desktop/azure/containerapp/src  docker images | grep iibmer/ngx<br>iibmer/ngx-alpine              1.25.2    b00d6f4aed3c   Less than a second ago   242MB<br>jason@MacbookPro  ~/Desktop/azure/containerapp/src  docker run -itd -p 100:80 iibmer/ngx-alpine:1.25.2<br>2e7e8497166a78774495eb2da99e41d2a3c5301a6659a603f17a6d879034aebd<br>jason@MacbookPro  ~/Desktop/azure/containerapp/src  curl -I bo.lan:100<br>HTTP/1.1 200 OK<br>Server: nginx/1.25.2<br>Date: Thu, 24 Aug 2023 17:41:10 GMT<br>Content-Type: text/html<br>Content-Length: 615<br>Last-Modified: Thu, 24 Aug 2023 17:39:10 GMT<br>Connection: keep-alive<br>ETag: <span class="hljs-string">&quot;64e795be-267&quot;</span><br>Accept-Ranges: bytes<br></code></pre></td></tr></table></figure>

<p><img src="/../images/image-20230825014046006.png" alt="image-20230825014046006"></p>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>alpine-nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>ansible-manage-windows-server</title>
    <url>/2022/09/20-ansible-manage-windows-server/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h4 id="Windows-Server-Ansible-Setup"><a href="#Windows-Server-Ansible-Setup" class="headerlink" title="Windows Server Ansible Setup"></a>Windows Server Ansible Setup</h4><h5 id="1-Upgrade-Powershell-to-V4-0-above"><a href="#1-Upgrade-Powershell-to-V4-0-above" class="headerlink" title="1.Upgrade Powershell to V4.0 above"></a>1.Upgrade Powershell to V4.0 above</h5><figure class="highlight powershell"><table><tr><td class="code"><pre><code class="hljs powershell"><span class="hljs-number">1</span>. 检查powershell版本<br><span class="hljs-built_in">get-host</span><br><br><span class="hljs-number">2</span>. 下载并安装Microsoft .NET Framework <span class="hljs-number">4.5</span><br>下载地址：<br>https://download.microsoft.com/download/B/A/<span class="hljs-number">4</span>/BA4A7E71<span class="hljs-literal">-2906-4B2D-A0E1-80CF16844F5F</span>/dotNetFx45_Full_setup.exe<br><br><span class="hljs-number">3</span>. 下载并安装powershell4.<span class="hljs-number">0</span>(Windows Management Framework <span class="hljs-number">4.0</span> )<br>下载地址：<br>https://download.microsoft.com/download/<span class="hljs-number">3</span>/D/<span class="hljs-number">6</span>/<span class="hljs-number">3</span>D61D262<span class="hljs-literal">-8549-4769-A660-230B67E15B25</span>/Windows6.<span class="hljs-number">1</span><span class="hljs-literal">-KB2819745-x64-MultiPkg</span>.msu<br></code></pre></td></tr></table></figure>

<blockquote>
<p>注意： 先安装.NET Framework 4.5 ，然后安装powershell4.0，安装完成之后重启windows服务器</p>
</blockquote>
<h5 id="2-Enable-Winrm-and-Enable-Powershell-Remote-Management"><a href="#2-Enable-Winrm-and-Enable-Powershell-Remote-Management" class="headerlink" title="2. Enable Winrm and Enable Powershell Remote Management"></a>2. Enable Winrm and Enable Powershell Remote Management</h5><figure class="highlight powershell"><table><tr><td class="code"><pre><code class="hljs powershell"><span class="hljs-number">1</span>. 查看powershell执行策略<br><span class="hljs-built_in">get-executionpolicy</span><br><br><span class="hljs-number">2</span>. 更改powershell执行策略为remotesigned<br><span class="hljs-built_in">set-executionpolicy</span> remotesigned<br><br><span class="hljs-number">3</span>. 配置winrm service并启动服务<br>winrm quickconfig<br><br><span class="hljs-number">4</span>. 查看winrm service启动监听状态<br>winrm enumerate winrm/config/listener<br><br><span class="hljs-number">5</span>. 修改winrm配置，启用远程连接认证<br>winrm <span class="hljs-built_in">set</span> winrm/config/service/auth <span class="hljs-string">&#x27;@&#123;Basic=&quot;true&quot;&#125;&#x27;</span><br>winrm <span class="hljs-built_in">set</span> winrm/config/service <span class="hljs-string">&#x27;@&#123;AllowUnencrypted=&quot;true&quot;&#125;&#x27;</span><br></code></pre></td></tr></table></figure>

<h5 id="3-Windows-firewall-open-for-Winrm"><a href="#3-Windows-firewall-open-for-Winrm" class="headerlink" title="3. Windows firewall open for Winrm"></a>3. Windows firewall open for Winrm</h5><figure class="highlight powershell"><table><tr><td class="code"><pre><code class="hljs powershell">查看winrm service启动监听状态<br>winrm enumerate winrm/config/listener<br>添加防火墙信任规则，允许<span class="hljs-number">5985</span>端口通过<br></code></pre></td></tr></table></figure>

<h5 id="4-Ansible-master"><a href="#4-Ansible-master" class="headerlink" title="4.  Ansible master"></a>4.  Ansible master</h5><h6 id="1-Ansible-master-configure"><a href="#1-Ansible-master-configure" class="headerlink" title="1. Ansible master configure"></a>1. Ansible master configure</h6><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 添加windows客户端连接信息</span><br>vim /etc/ansible/hosts<br>[win]<br>172.16.37.3 ansible_ssh_user=<span class="hljs-string">&quot;Administrator&quot;</span> ansible_ssh_pass=<span class="hljs-string">&quot;Westlife@#ibm&quot;</span> ansible_ssh_port=5985 ansible_connection=<span class="hljs-string">&quot;winrm&quot;</span> ansible_winrm_server_cert_validation=ignore<br><br><span class="hljs-comment"># 安装winrm 模块</span><br>pip search pywinrm <span class="hljs-comment"># pip search 没办法用了</span><br>pi p install pywinrm <span class="hljs-comment"># 无法安装，需要具体版本</span><br>pip install <span class="hljs-string">&quot;pywinrm&gt;=0.2.2&quot;</span>  <span class="hljs-comment"># 这样安装</span><br></code></pre></td></tr></table></figure>

<h6 id="2-测试ping探测windows客户主机是否存活"><a href="#2-测试ping探测windows客户主机是否存活" class="headerlink" title="2. 测试ping探测windows客户主机是否存活"></a>2. 测试ping探测windows客户主机是否存活</h6><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">ansible win -m win_ping<br></code></pre></td></tr></table></figure>

<h6 id="3-测试文件管理"><a href="#3-测试文件管理" class="headerlink" title="3. 测试文件管理"></a>3. 测试文件管理</h6><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">测试在windows主机执行远程创建目录<br><span class="hljs-comment"># ansible win -m win_file -a &#x27;dest=c:\config_dir state=directory&#x27;</span><br><br>测试将ansible主机上的/etc/hosts文件同步到windows主机的指定目录下<br><span class="hljs-comment"># ansible win -m win_copy -a &#x27;src=/etc/hosts dest=c:\config_dir\hosts.txt&#x27;</span><br><br>删除文件<br><span class="hljs-comment"># ansible win -m win_file -a &#x27;dest=c:\config_dir\hosts.txt state=absent&#x27;</span><br><br>删除目录<br><span class="hljs-comment"># ansible win -m win_file -a &#x27;dest=c:\config_dir2 state=absent&#x27;</span><br></code></pre></td></tr></table></figure>

<h6 id="4-测试远程执行cmd命令"><a href="#4-测试远程执行cmd命令" class="headerlink" title="4. 测试远程执行cmd命令"></a>4. 测试远程执行cmd命令</h6><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># ansible win -m win_shell -a &#x27;ipconfig&#x27;</span><br></code></pre></td></tr></table></figure>

<h6 id="5-远程重启windows服务器"><a href="#5-远程重启windows服务器" class="headerlink" title="5. 远程重启windows服务器"></a>5. 远程重启windows服务器</h6><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># ansible 172.16.10.23 -m win_reboot</span><br><br><span class="hljs-comment"># ansible 172.16.10.23 -m win_shell -a &#x27;shutdown -r -t 0&#x27;</span><br></code></pre></td></tr></table></figure>

<h6 id="6-Windows服务管理"><a href="#6-Windows服务管理" class="headerlink" title="6. Windows服务管理"></a>6. Windows服务管理</h6><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">Ansible命令格式：<br>ansible [主机|主机组] -m win_shell -a “net stop|start 服务名”<br></code></pre></td></tr></table></figure>

<h6 id="7-测试创建用户-远程在windows客户端上创建用户"><a href="#7-测试创建用户-远程在windows客户端上创建用户" class="headerlink" title="7. 测试创建用户(远程在windows客户端上创建用户)"></a>7. 测试创建用户(远程在windows客户端上创建用户)</h6><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># ansible win -m win_user -a &quot;name=winuser passwd=windows&quot;</span><br></code></pre></td></tr></table></figure>

<h6 id="8-使用举例"><a href="#8-使用举例" class="headerlink" title="8. 使用举例"></a>8. 使用举例</h6><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">ansible-console<br>root@all (3)[f:10]$ <span class="hljs-built_in">cd</span> win<br>root@win (1)[f:10]$ list<br>172.16.37.3<br>root@win (1)[f:10]$ win_hostname name=win2k2016  <span class="hljs-comment">#更改主机名</span><br>172.16.37.3 | CHANGED =&gt; &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-string">&quot;old_name&quot;</span>: <span class="hljs-string">&quot;WIN-UIS7GLE4Q9K&quot;</span>,<br>    <span class="hljs-string">&quot;reboot_required&quot;</span>: <span class="hljs-literal">true</span><br>&#125;<br>root@win (1)[f:10]$ win_reboot msg=<span class="hljs-string">&quot;Ansible reboot in next 15s!!!&quot;</span> pre_reboot_delay=15  <span class="hljs-comment">#重启机器</span><br>172.16.37.3 | CHANGED =&gt; &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-string">&quot;elapsed&quot;</span>: 190,<br>    <span class="hljs-string">&quot;rebooted&quot;</span>: <span class="hljs-literal">true</span><br>&#125;<br>root@win (1)[f:10]$ win_<br>Display all 106 possibilities? (y or n)<br>win_acl                      win_environment              win_netbios                  win_scheduled_task<br>win_acl_inheritance          win_eventlog                 win_nssm                     win_scheduled_task_stat<br>win_audit_policy_system      win_eventlog_entry           win_optional_feature         win_security_policy<br>win_audit_rule               win_feature                  win_owner                    win_service<br>win_certificate_store        win_file                     win_package                  win_share<br></code></pre></td></tr></table></figure>
<h4 id="常用的ansible-模块"><a href="#常用的ansible-模块" class="headerlink" title="常用的ansible 模块"></a>常用的ansible 模块</h4><p>参考地址：</p>
<p><a href="http://www.yunweipai.com/go?_=1c6a53dc99aHR0cHM6Ly9kb2NzLmFuc2libGUuY29tL2Fuc2libGUvbGF0ZXN0L21vZHVsZXMvbW9kdWxlc19ieV9jYXRlZ29yeS5odG1s">https://docs.ansible.com/ansible/latest/modules/modules_by_category.html</a></p>
<hr>
<p>常用的模块：</p>
<p><code>ping</code>，<code>command</code> ，<code>shell</code> ，<code>script</code>，<code>copy</code> ， <code>fetch</code>，<code>hostname</code>，<code>file</code>，<code>unarchive</code>  ， <code>archive</code>，<code>yum</code>，<code>cron</code>，<code>service</code>，<code>user</code> ， <code>group</code>，<code>lineinfile</code> ，<code>replace</code>，<code>setup</code>…</p>
<p>command &amp; shell:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 注意区别和相同</span><br><span class="hljs-comment"># command 不能识别变量以及引号内容</span><br>root@unix (2)[f:10]$ <span class="hljs-built_in">command</span> <span class="hljs-built_in">echo</span> <span class="hljs-variable">$HOSTNAME</span><br>172.16.37.2 | CHANGED | rc=0 &gt;&gt;<br><span class="hljs-variable">$HOSTNAME</span><br>172.16.37.4 | CHANGED | rc=0 &gt;&gt;<br><span class="hljs-variable">$HOSTNAME</span><br>root@unix (2)[f:10]$ shell <span class="hljs-built_in">echo</span> <span class="hljs-variable">$HOSTNAME</span><br>172.16.37.2 | CHANGED | rc=0 &gt;&gt;<br>ansible-master<br>172.16.37.4 | CHANGED | rc=0 &gt;&gt;<br>ansible-node1<br>root@node1 (1)[f:10]$ shell <span class="hljs-built_in">echo</span> passwd |passwd --stdin <span class="hljs-built_in">test</span><br>172.16.37.4 | CHANGED | rc=0 &gt;&gt;<br>更改用户 <span class="hljs-built_in">test</span> 的密码 。<br>passwd：所有的身份验证令牌已经成功更新。<br>root@node1 (1)[f:10]$ <span class="hljs-built_in">command</span> <span class="hljs-built_in">echo</span> passwd |passwd --stdin <span class="hljs-built_in">test</span><br>172.16.37.4 | CHANGED | rc=0 &gt;&gt;<br>passwd |passwd --stdin <span class="hljs-built_in">test</span><br></code></pre></td></tr></table></figure>

<p>unarchive &amp; archive:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">ansible all -m unarchive -a <span class="hljs-string">&#x27;src=/tmp/foo.zip dest=/data copy=no mode=0777&#x27;</span><br>ansible all -m unarchive -a <span class="hljs-string">&#x27;src=https://example.com/example.zip dest=/data copy=no&#x27;</span><br>ansible websrvs -m archive  -a <span class="hljs-string">&#x27;path=/var/log/ dest=/data/log.tar.bz2 format=bz2  owner=wang mode=0600&#x27;</span><br></code></pre></td></tr></table></figure>

<p>cron:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#备份数据库脚本</span><br>[root@centos8 ~]<span class="hljs-comment">#cat mysql_backup.sh </span><br>mysqldump -A -F --single-transaction --master-data=2 -q -uroot |gzip &gt; /data/mysql_date +%F_%T.sql.gz<br><span class="hljs-comment">#创建任务</span><br>ansible 10.0.0.8 -m cron -a <span class="hljs-string">&#x27;hour=2 minute=30 weekday=1-5 name=&quot;backup mysql&quot; job=/root/mysql_backup.sh&#x27;</span><br>ansible websrvs   -m cron -a <span class="hljs-string">&quot;minute=*/5 job=&#x27;/usr/sbin/ntpdate 172.20.0.1 &amp;&gt;/dev/null&#x27; name=Synctime&quot;</span><br><span class="hljs-comment">#禁用计划任务</span><br>ansible websrvs   -m cron -a <span class="hljs-string">&quot;minute=*/5 job=&#x27;/usr/sbin/ntpdate 172.20.0.1 &amp;&gt;/dev/null&#x27; name=Synctime disabled=yes&quot;</span><br><span class="hljs-comment">#启用计划任务</span><br>ansible websrvs   -m cron -a <span class="hljs-string">&quot;minute=*/5 job=&#x27;/usr/sbin/ntpdate 172.20.0.1 &amp;&gt;/dev/null&#x27; name=Synctime disabled=no&quot;</span><br><span class="hljs-comment">#删除任务</span><br>ansible websrvs -m cron -a <span class="hljs-string">&quot;name=&#x27;backup mysql&#x27; state=absent&quot;</span><br>ansible websrvs -m cron -a <span class="hljs-string">&#x27;state=absent name=Synctime&#x27;</span><br></code></pre></td></tr></table></figure>

<p>service:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">ansible all -m service -a <span class="hljs-string">&#x27;name=httpd state=started enabled=yes&#x27;</span><br>ansible all -m service -a <span class="hljs-string">&#x27;name=httpd state=stopped&#x27;</span><br>ansible all -m service -a <span class="hljs-string">&#x27;name=httpd state=reloaded’</span><br><span class="hljs-string">ansible all -m shell -a &quot;sed -i &#x27;</span>s/^Listen 80/Listen 8080/<span class="hljs-string">&#x27; /etc/httpd/conf/httpd.conf&quot;</span><br><span class="hljs-string">ansible all -m service -a &#x27;</span>name=httpd state=restarted<span class="hljs-string">&#x27; </span><br></code></pre></td></tr></table></figure>

<p>user &amp; group:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#创建用户</span><br>ansible all -m user -a <span class="hljs-string">&#x27;name=user1 comment=“test user” uid=2048 home=/app/user1 group=root&#x27;</span><br>ansible all -m user -a <span class="hljs-string">&#x27;name=nginx comment=nginx uid=88 group=nginx groups=&quot;root,daemon&quot; shell=/sbin/nologin system=yes create_home=no  home=/data/nginx non_unique=yes&#x27;</span><br><span class="hljs-comment">#删除用户及家目录等数据</span><br>ansible all -m user -a <span class="hljs-string">&#x27;name=nginx state=absent remove=yes&#x27;</span><br><span class="hljs-comment">#创建组</span><br>ansible websrvs -m group  -a <span class="hljs-string">&#x27;name=nginx gid=88 system=yes&#x27;</span><br><span class="hljs-comment">#删除组</span><br>ansible websrvs -m group  -a <span class="hljs-string">&#x27;name=nginx state=absent&#x27;</span><br></code></pre></td></tr></table></figure>

<p>lineinfile:</p>
<p>ansible在使用sed进行替换时，经常会遇到需要转义的问题，而且ansible在遇到特殊符号进行替换时，存在问题，无法正常进行替换 。其实在ansible自身提供了两个模块：lineinfile模块和replace模块，可以方便的进行替换功能：相当于sed，可以修改文件内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">ansible all -m   lineinfile -a <span class="hljs-string">&quot;path=/etc/selinux/config regexp=&#x27;^SELINUX=&#x27; line=&#x27;SELINUX=enforcing&#x27;&quot;</span><br>ansible all -m lineinfile  -a <span class="hljs-string">&#x27;dest=/etc/fstab state=absent regexp=&quot;^#&quot;&#x27;</span><br></code></pre></td></tr></table></figure>
<p>replace:</p>
<p>该模块有点类似于sed命令，主要也是基于正则进行匹配和替换</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">ansible all -m replace -a <span class="hljs-string">&quot;path=/etc/fstab regexp=&#x27;^(UUID.*)&#x27; replace=&#x27;#\1&#x27;&quot;</span>  <br>ansible all -m replace -a <span class="hljs-string">&quot;path=/etc/fstab regexp=&#x27;^#(.*)&#x27; replace=&#x27;\1&#x27;&quot;</span><br></code></pre></td></tr></table></figure>

<p>setup:</p>
<p>setup 模块来收集主机的系统信息，这些 facts 信息可以直接以变量的形式使用，但是如果主机较多，会影响执行速度，可以使用<code>gather_facts: no</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">ansible all -m setup<br>ansible all -m setup -a <span class="hljs-string">&quot;filter=ansible_os_family</span><br><span class="hljs-string">ansible all -m setup -a &quot;</span>filter=ansible_hostname<span class="hljs-string">&quot;</span><br></code></pre></td></tr></table></figure>

<p>  <a href="https://www.cnblogs.com/keerya/p/7987886.html">https://www.cnblogs.com/keerya/p/7987886.html</a></p>
<p>  <a href="https://www.cnblogs.com/keerya/p/8004566.html">https://www.cnblogs.com/keerya/p/8004566.html</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>Ansible</tag>
      </tags>
  </entry>
  <entry>
    <title>ansible manager windows server</title>
    <url>/2024/03/30-ansible-manager-windows-server/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h5 id="windows被控端配置："><a href="#windows被控端配置：" class="headerlink" title="windows被控端配置："></a>windows被控端配置：</h5><ul>
<li><p>确保被控机器powershell version 大于等于4.0</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">PS</span> C:\Users\Administrator&gt; Get-Host | findstr.exe Version<br><span class="hljs-attribute">Version</span>          : <span class="hljs-number">5</span>.<span class="hljs-number">1</span>.<span class="hljs-number">17763</span>.<span class="hljs-number">2090</span><br></code></pre></td></tr></table></figure>

<blockquote>
<p>Powershell Version 如果低于4.0</p>
</blockquote>
<ul>
<li><p><a href="http://download.microsoft.com/download/B/A/4/BA4A7E71-2906-4B2D-A0E1-80CF16844F5F/dotNetFx45_Full_x86_x64.exe">Microsoft .NET Framework 4.5</a></p>
</li>
<li><p><a href="https://download.microsoft.com/download/3/D/6/3D61D262-8549-4769-A660-230B67E15B25/Windows6.1-KB2819745-x64-MultiPkg.msu">Powershell4.0</a></p>
</li>
</ul>
</li>
<li><p>配置winrm</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">PS</span> C:\Users\Administrator&gt; winrm quickconfig  <span class="hljs-comment">#配置winrm service并启动服务</span><br><span class="hljs-built_in">PS</span> C:\Users\Administrator&gt; winrm enumerate winrm/config/listener  <span class="hljs-comment">#查看winrm service启动监听状态</span><br><span class="hljs-built_in">PS</span> C:\Users\Administrator&gt; winrm <span class="hljs-built_in">set</span> winrm/config/service/auth <span class="hljs-string">&#x27;@&#123;Basic=&quot;true&quot;&#125;&#x27;</span> <span class="hljs-comment">#启用远程连接认证 </span><br><span class="hljs-built_in">PS</span> C:\Users\Administrator&gt; winrm <span class="hljs-built_in">set</span> winrm/config/service <span class="hljs-string">&#x27;@&#123;AllowUnencrypted=&quot;true&quot;&#125;&#x27;</span> <span class="hljs-comment">#启用远程连接认证</span><br><span class="hljs-built_in">PS</span> C:\Users\Administrator&gt; winrm enumerate winrm/config/listener <span class="hljs-comment">#检查winrm服务正确是否启动</span><br></code></pre></td></tr></table></figure>
</li>
<li><p>修改相关授权策略</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">PS</span> C:\Users\Administrator&gt; <span class="hljs-built_in">get-executionpolicy</span> <span class="hljs-comment">#查看powershell执行策略</span><br><span class="hljs-built_in">PS</span> C:\Users\Administrator&gt; <span class="hljs-built_in">set-executionpolicy</span> remotesigned <span class="hljs-comment">#更改powershell执行策略为remotesigned</span><br></code></pre></td></tr></table></figure>
</li>
<li><p>添加防火墙入站规则，放通5985&#x2F;tcp端口</p>
</li>
</ul>
<h5 id="Linux-ansible控制端："><a href="#Linux-ansible控制端：" class="headerlink" title="Linux ansible控制端："></a>Linux ansible控制端：</h5><ul>
<li><p>安装<code>ansible</code>以及python模块<code>pywinrm</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># ansible install with yum or pip or source code</span><br>[root@raspberry ~]<span class="hljs-comment"># yum install ansible -y</span><br>[root@raspberry ~]<span class="hljs-comment"># ansible --version</span><br>ansible 2.9.23<br>  config file = /etc/ansible/ansible.cfg<br>  configured module search path = [u<span class="hljs-string">&#x27;/root/.ansible/plugins/modules&#x27;</span>, u<span class="hljs-string">&#x27;/usr/share/ansible/plugins/modules&#x27;</span>]<br>  ansible python module location = /usr/lib/python2.7/site-packages/ansible<br>  executable location = /usr/bin/ansible<br>  python version = 2.7.5 (default, Oct 14 2020, 14:44:55) [GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]<br></code></pre></td></tr></table></figure>
</li>
<li><p>添加Inventory</p>
<blockquote>
<p>传统方式添加</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@raspberry ~]<span class="hljs-comment"># vim /etc/ansible/hosts</span><br>[win]<br>192.168.0.100 ansible_ssh_user=<span class="hljs-string">&quot;WIN_USER&quot;</span> ansible_ssh_pass=<span class="hljs-string">&quot;WIN_PASSWORD&quot;</span> ansible_ssh_port=5985 ansible_connection=<span class="hljs-string">&quot;winrm&quot;</span> ansible_winrm_server_cert_validation=ignore<br></code></pre></td></tr></table></figure>

<blockquote>
<p>也可以采用yaml格式定义inventory（保持缩进一致）：</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@raspberry</span> <span class="hljs-string">~</span>]<span class="hljs-comment"># vim /etc/ansible/hosts_yml</span><br><span class="hljs-attr">all:</span><br>  <span class="hljs-attr">children:</span><br>    <span class="hljs-attr">win:</span> <span class="hljs-comment">#主机组1</span><br>      <span class="hljs-attr">hosts:</span><br>        <span class="hljs-attr">192.168.0.100:</span> <span class="hljs-comment">#主机</span><br>      <span class="hljs-attr">vars:</span>  <span class="hljs-comment">#此变量只在windows主机组里生效</span><br>        <span class="hljs-attr">ansible_user:</span> <span class="hljs-string">WIN_USER</span><br>        <span class="hljs-attr">ansible_password:</span> <span class="hljs-string">WIN_PASSWORD</span><br>        <span class="hljs-attr">ansible_port:</span> <span class="hljs-number">5985</span><br>        <span class="hljs-attr">ansible_connection:</span> <span class="hljs-string">winrm</span><br>        <span class="hljs-attr">ansible_winrm_server_cert_validation:</span> <span class="hljs-string">ignore</span><br></code></pre></td></tr></table></figure>
</li>
<li><p>更多ansible配置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@raspberry ~]<span class="hljs-comment"># vim /etc/ansible/ansible.cfg</span><br></code></pre></td></tr></table></figure></li>
</ul>
<h5 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h5><ul>
<li><p>测试连通性</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@raspberry ~]<span class="hljs-comment"># ansible win -m win_ping</span><br>192.168.0.100 | SUCCESS =&gt; &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">false</span>,<br>    <span class="hljs-string">&quot;ping&quot;</span>: <span class="hljs-string">&quot;pong&quot;</span><br>&#125;<br>[root@raspberry ~]<span class="hljs-comment"># ansible -i /etc/ansible/hosts_yml win -m win_ping</span><br>192.168.0.100 | SUCCESS =&gt; &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">false</span>,<br>    <span class="hljs-string">&quot;ping&quot;</span>: <span class="hljs-string">&quot;pong&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>ansible</tag>
      </tags>
  </entry>
  <entry>
    <title>Create Azure Arc-enabled sqlmi instance using OpenShift tool</title>
    <url>/2022/09/23-arc-enbaled-sqlmi-instance/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="Create-Azure-Arc-enabled-sqlmi-instance-using-OpenShift-tool"><a href="#Create-Azure-Arc-enabled-sqlmi-instance-using-OpenShift-tool" class="headerlink" title="Create Azure Arc-enabled sqlmi instance using OpenShift tool"></a>Create Azure Arc-enabled sqlmi instance using OpenShift tool</h3><blockquote>
<p> Microsoft official doc reference</p>
</blockquote>
<p><a href="https://docs.microsoft.com/en-us/azure/azure-arc/data/create-data-controller-using-kubernetes-native-tools">https://docs.microsoft.com/en-us/azure/azure-arc/data/create-data-controller-using-kubernetes-native-tools</a></p>
<p><strong>Overview Steps:</strong><br><a href="https://docs.microsoft.com/en-us/azure/azure-arc/data/create-data-controller-using-kubernetes-native-tools#overview">https://docs.microsoft.com/en-us/azure/azure-arc/data/create-data-controller-using-kubernetes-native-tools#overview</a></p>
<ol>
<li>Create the custom resource definitions for the Arc data controller, Azure SQL managed instance, and PostgreSQL Hyperscale.</li>
<li>Create a namespace in which the data controller will be created.</li>
<li>Create the bootstrapper service including the replica set, service account, role, and role binding.</li>
<li>Create a secret for the data controller administrator username and password.</li>
<li>Create the webhook deployment job, cluster role and cluster role binding.</li>
<li>Create the data controller.</li>
<li>Create sqlmi instance.</li>
</ol>
<hr>
<p><strong>Prerequisites</strong></p>
<ul>
<li><p><code>kubectl</code> or <code>oc</code> command installed on your local machine<br>install <code>kubectl</code> how to:</p>
<p><a href="https://kubernetes.io/docs/tasks/tools/">https://kubernetes.io/docs/tasks/tools/</a><br>install <code>oc</code> how to:</p>
<p><a href="https://mirror.openshift.com/pub/openshift-v4/clients/ocp/stable/">https://mirror.openshift.com/pub/openshift-v4/clients/ocp/stable/</a></p>
</li>
<li><p>Setup <code>k8s cluster</code> or <code>openshift</code> cluster(skipped on-premise)</p>
<h5 id="Create-an-Azure-Red-Hat-OpenShift-cluster-with-azure-cli"><a href="#Create-an-Azure-Red-Hat-OpenShift-cluster-with-azure-cli" class="headerlink" title="Create an Azure Red Hat OpenShift cluster with azure-cli"></a>Create an Azure Red Hat OpenShift cluster with <code>azure-cli</code></h5><p><a href="https://docs.microsoft.com/en-us/azure/openshift/tutorial-create-cluster">https://docs.microsoft.com/en-us/azure/openshift/tutorial-create-cluster</a></p>
<p>when <code>openshift</code> cluster setup complete:</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># will need for authentication </span><br>az ad <span class="hljs-built_in">sp</span> create<span class="hljs-literal">-for-rbac</span> <span class="hljs-literal">--name</span> jason<span class="hljs-literal">-azarc</span>  <span class="hljs-literal">--role</span> Contributor <span class="hljs-literal">--scopes</span> /subscriptions/&lt;subscription ID&gt;/resourceGroups/&lt;<span class="hljs-built_in">group</span> Name&gt;<br>&#123;<br>  <span class="hljs-string">&quot;appId&quot;</span>: <span class="hljs-string">&quot;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&quot;</span>,<br>  <span class="hljs-string">&quot;displayName&quot;</span>: <span class="hljs-string">&quot;jason-azarc&quot;</span>,<br>  <span class="hljs-string">&quot;password&quot;</span>: <span class="hljs-string">&quot;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&quot;</span>,<br>  <span class="hljs-string">&quot;tenant&quot;</span>: <span class="hljs-string">&quot;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&quot;</span><br>&#125;<br><span class="hljs-comment"># </span><br><span class="hljs-comment"># note down the appID and password</span><br></code></pre></td></tr></table></figure>

<h5 id="Connect-to-an-Azure-Red-Hat-OpenShift-cluster"><a href="#Connect-to-an-Azure-Red-Hat-OpenShift-cluster" class="headerlink" title="Connect to an Azure Red Hat OpenShift cluster"></a>Connect to an Azure Red Hat OpenShift cluster</h5><p><a href="https://docs.microsoft.com/en-us/azure/openshift/tutorial-connect-cluster">https://docs.microsoft.com/en-us/azure/openshift/tutorial-connect-cluster</a></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># list console login info</span><br>az aro list<span class="hljs-literal">-credentials</span> <span class="hljs-literal">--name</span> ocluster <span class="hljs-literal">--resource-group</span> az<span class="hljs-literal">-arc</span><br><span class="hljs-comment"># list azure openshift cluster info</span><br><span class="hljs-built_in">PS</span> C:\Users\hubo&gt; az aro list <span class="hljs-literal">-o</span> table<br>Name      ResourceGroup    Location    ProvisioningState    WorkerCount    URL<br><span class="hljs-literal">--------</span>  <span class="hljs-literal">---------------</span>  <span class="hljs-literal">----------</span>  <span class="hljs-literal">-------------------</span>  <span class="hljs-literal">-------------</span>  <span class="hljs-literal">-----------------------------------------------------------</span><br>ocluster  az<span class="hljs-literal">-arc</span>           eastus      Succeeded            <span class="hljs-number">4</span>              https://console<span class="hljs-literal">-openshift-console</span>.xxxxxxx.io/<br><span class="hljs-comment"># login in openshift</span><br>[<span class="hljs-type">root</span>@<span class="hljs-type">azk8s</span>-<span class="hljs-type">oc</span> ~]<span class="hljs-comment"># oc login &lt;API URL&gt; -u kubeadmin -p &lt;password&gt;</span><br>Login successful.<br>You have access to <span class="hljs-number">68</span> projects, the list has been suppressed. You can list all projects with <span class="hljs-string">&#x27;oc projects&#x27;</span><br><br><span class="hljs-keyword">Using</span> project <span class="hljs-string">&quot;default&quot;</span>.<br>Welcome! See <span class="hljs-string">&#x27;oc help&#x27;</span> to get started<br></code></pre></td></tr></table></figure></li>
</ul>
<h4 id="Create-a-namespace-in-which-the-data-controller-will-be-created"><a href="#Create-a-namespace-in-which-the-data-controller-will-be-created" class="headerlink" title="Create a namespace in which the data controller will be created"></a>Create a namespace in which the data controller will be created</h4><figure class="highlight angelscript"><table><tr><td class="code"><pre><code class="hljs angelscript"><span class="hljs-string">[root@azk8s-oc ~]</span># oc create <span class="hljs-keyword">namespace</span> <span class="hljs-symbol">arc</span><br><span class="hljs-symbol">namespace</span>/<span class="hljs-symbol">arc</span> <span class="hljs-symbol">created</span><br></code></pre></td></tr></table></figure>

<blockquote>
<p>if use <code>openshift</code> cluster, need to edit namespace </p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@azk8s-oc ~]<span class="hljs-comment"># oc edit namespace arc</span><br>namespace/arc edited<br>...<br>openshift.io/sa.scc.supplemental-groups: 1000700001/10000<br>openshift.io/sa.scc.uid-range: 1000700001/10000<br>...<br></code></pre></td></tr></table></figure>

<h4 id="Create-the-custom-resource-definitions"><a href="#Create-the-custom-resource-definitions" class="headerlink" title="Create the custom resource definitions"></a>Create the custom resource definitions</h4><p><a href="https://docs.microsoft.com/en-us/azure/azure-arc/data/create-data-controller-using-kubernetes-native-tools#create-the-custom-resource-definitions">https://docs.microsoft.com/en-us/azure/azure-arc/data/create-data-controller-using-kubernetes-native-tools#create-the-custom-resource-definitions</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@azk8s-oc arc]<span class="hljs-comment"># oc create -f https://raw.githubusercontent.com/microsoft/azure_arc/main/arc_data_services/deploy/yaml/custom-resource-definitions.yaml</span><br>[root@azk8s-oc arc]<span class="hljs-comment"># oc project arc</span><br>Now using project <span class="hljs-string">&quot;arc&quot;</span> on server <span class="hljs-string">&quot;https://xxxxxxxxxxxxxxxxx&quot;</span>.<br>[root@azk8s-oc arc]<span class="hljs-comment"># oc apply -f arcdata-deployer.yaml</span><br></code></pre></td></tr></table></figure>

<h4 id="Create-the-bootstrapper-service"><a href="#Create-the-bootstrapper-service" class="headerlink" title="Create the bootstrapper service"></a>Create the bootstrapper service</h4><p><a href="https://docs.microsoft.com/en-us/azure/azure-arc/data/create-data-controller-using-kubernetes-native-tools#create-the-bootstrapper-service">https://docs.microsoft.com/en-us/azure/azure-arc/data/create-data-controller-using-kubernetes-native-tools#create-the-bootstrapper-service</a></p>
<blockquote>
<p>Make sure image version is <code>v1.8.0_2022-06-14</code>, latest version <code>v1.9.0_2022-07-12</code> have pull issue</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@azk8s-oc arc]<span class="hljs-comment"># oc create -f https://raw.githubusercontent.com/microsoft/azure_arc/main/arc_data_services/deploy/yaml/bootstrapper.yaml</span><br>[root@azk8s-oc arc]<span class="hljs-comment"># oc get pod</span><br></code></pre></td></tr></table></figure>

<h4 id="Create-secrets-for-the-metrics-and-logs-dashboards"><a href="#Create-secrets-for-the-metrics-and-logs-dashboards" class="headerlink" title="Create secrets for the metrics and logs dashboards"></a>Create secrets for the metrics and logs dashboards</h4><p><a href="https://docs.microsoft.com/en-us/azure/azure-arc/data/create-data-controller-using-kubernetes-native-tools#create-secrets-for-the-metrics-and-logs-dashboards">https://docs.microsoft.com/en-us/azure/azure-arc/data/create-data-controller-using-kubernetes-native-tools#create-secrets-for-the-metrics-and-logs-dashboards</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@azk8s-oc arc]<span class="hljs-comment"># wget https://raw.githubusercontent.com/microsoft/azure_arc/main/arc_data_services/deploy/yaml/controller-login-secret.yaml</span><br>[root@azk8s-oc arc]<span class="hljs-comment"># echo sql | base64 &amp;&amp; echo Passw0rd |base64</span><br>c3FsCg==<br>UGFzc3cwcmQK<br><span class="hljs-comment">##</span><br>[root@azk8s-oc arc]<span class="hljs-comment"># vim controller-login-secret.yaml</span><br>apiVersion: v1<br>data:<br>  password: UGFzc3cwcmQK<br>  username: c3FsCg==<br>kind: Secret<br>metadata:<br>  name: metricsui-admin-secret<br><span class="hljs-built_in">type</span>: Opaque<br>---<br>apiVersion: v1<br>data:<br>  password: UGFzc3cwcmQK<br>  username: c3FsCg==<br>kind: Secret<br>metadata:<br>  name: logsui-admin-secret<br><span class="hljs-built_in">type</span>: Opaque<br></code></pre></td></tr></table></figure>

<blockquote>
<p><code>linux</code> and <code>Powershell</code> they have different encode results , that’s a little confused which one should we use to sqlmi logon authentication.</p>
</blockquote>
<h4 id="Create-the-webhook-deployment-job-cluster-role-and-cluster-role-binding"><a href="#Create-the-webhook-deployment-job-cluster-role-and-cluster-role-binding" class="headerlink" title="Create the webhook deployment job, cluster role and cluster role binding"></a>Create the webhook deployment job, cluster role and cluster role binding</h4><p><a href="https://docs.microsoft.com/en-us/azure/azure-arc/data/create-data-controller-using-kubernetes-native-tools#create-the-webhook-deployment-job-cluster-role-and-cluster-role-binding">https://docs.microsoft.com/en-us/azure/azure-arc/data/create-data-controller-using-kubernetes-native-tools#create-the-webhook-deployment-job-cluster-role-and-cluster-role-binding</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@azk8s-oc arc]<span class="hljs-comment"># wget https://raw.githubusercontent.com/microsoft/azure_arc/main/arc_data_services/deploy/yaml/web-hook.yaml</span><br><br><span class="hljs-comment"># Edit the file and replace &#123;&#123;namespace&#125;&#125; in all places with the name of the namespace you created in the previous step</span><br>[root@azk8s-oc arc]<span class="hljs-comment"># vim web-hook.yaml</span><br>[root@azk8s-oc arc]<span class="hljs-comment"># oc create -f web-hook.yaml</span><br></code></pre></td></tr></table></figure>

<h4 id="Create-the-data-controller"><a href="#Create-the-data-controller" class="headerlink" title="Create the data controller"></a>Create the data controller</h4><p><a href="https://docs.microsoft.com/en-us/azure/azure-arc/data/create-data-controller-using-kubernetes-native-tools#create-the-data-controller">https://docs.microsoft.com/en-us/azure/azure-arc/data/create-data-controller-using-kubernetes-native-tools#create-the-data-controller</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@azk8s-oc arc]<span class="hljs-comment">#  wget https://raw.githubusercontent.com/microsoft/azure_arc/release-arc-data/arc_data_services/deploy/yaml/data-controller.yaml</span><br><span class="hljs-comment"># replace some value base on your own env </span><br>[root@azk8s-oc arc]<span class="hljs-comment"># vim data-controller.yaml</span><br>[root@azk8s-oc arc]<span class="hljs-comment"># oc create -f data-controller.yaml</span><br>[root@azk8s-oc mnt]<span class="hljs-comment"># oc get pod</span><br>NAME                 READY   STATUS    RESTARTS        AGE<br>bootstrapper-pf2kn   1/1     Running   0               3h32m<br>control-swcxt        2/2     Running   1 (3h19m ago)   3h21m<br>controldb-0          2/2     Running   0               3h21m<br>logsdb-0             3/3     Running   0               3h20m<br>logsui-pq4ps         3/3     Running   0               3h19m<br>metricsdb-0          2/2     Running   0               3h20m<br>metricsui-c4bxg      2/2     Running   0               3h20m<br></code></pre></td></tr></table></figure>

<h4 id="Create-Azure-Arc-enabled-SQL-Managed-Instance-using-Kubernetes-tools"><a href="#Create-Azure-Arc-enabled-SQL-Managed-Instance-using-Kubernetes-tools" class="headerlink" title="Create Azure Arc-enabled SQL Managed Instance using Kubernetes tools"></a>Create Azure Arc-enabled SQL Managed Instance using Kubernetes tools</h4><p><a href="https://docs.microsoft.com/en-us/azure/azure-arc/data/create-sql-managed-instance-using-kubernetes-native-tools">https://docs.microsoft.com/en-us/azure/azure-arc/data/create-sql-managed-instance-using-kubernetes-native-tools</a></p>
<p>Template :</p>
<p><a href="https://raw.githubusercontent.com/microsoft/azure_arc/main/arc_data_services/deploy/yaml/sqlmi.yaml">https://raw.githubusercontent.com/microsoft/azure_arc/main/arc_data_services/deploy/yaml/sqlmi.yaml</a></p>
<p><a href="https://www.cnblogs.com/aboa/p/sqlmi.html">https://www.cnblogs.com/aboa/p/sqlmi.html</a></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@azk8s-oc</span> <span class="hljs-string">mnt</span>]<span class="hljs-comment"># wget https://raw.githubusercontent.com/microsoft/azure_arc/main/arc_data_services/deploy/yaml/sqlmi.yaml</span><br>[<span class="hljs-string">root@azk8s-oc</span> <span class="hljs-string">mnt</span>]<span class="hljs-comment"># vim sqlmi.yaml</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">data:</span><br>  <span class="hljs-attr">password:</span> <span class="hljs-string">&lt;your</span> <span class="hljs-string">base64</span> <span class="hljs-string">encoded</span> <span class="hljs-string">password&gt;</span><br>  <span class="hljs-attr">username:</span> <span class="hljs-string">&lt;your</span> <span class="hljs-string">base64</span> <span class="hljs-string">encoded</span> <span class="hljs-string">username&gt;</span> <br>	<span class="hljs-string">...</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">dev:</span> <span class="hljs-literal">true</span> <span class="hljs-comment">#options: [true, false]</span><br>  <span class="hljs-attr">licenseType:</span> <span class="hljs-string">LicenseIncluded</span> <span class="hljs-comment">#options: [LicenseIncluded, BasePrice].  BasePrice is used for Azure Hybrid Benefits.</span><br>  <span class="hljs-attr">tier:</span> <span class="hljs-string">GeneralPurpose</span> <span class="hljs-comment">#options: [GeneralPurpose, BusinessCritical]</span><br>  <span class="hljs-string">...</span><br>  <span class="hljs-attr">services:</span><br>    <span class="hljs-attr">primary:</span><br>      <span class="hljs-attr">type:</span> <span class="hljs-string">LoadBalancer</span> <span class="hljs-comment"># base on your env</span><br>  <span class="hljs-attr">storage:</span><br>    <span class="hljs-attr">data:</span><br>      <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">className:</span> <span class="hljs-string">default</span> <span class="hljs-comment">#  use oc get storageclasses</span><br>        <span class="hljs-attr">size:</span> <span class="hljs-string">5Gi</span><br>    <span class="hljs-attr">datalogs:</span><br>      <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">className:</span> <span class="hljs-string">default</span> <span class="hljs-comment"># oc get storageclasses</span><br>        <span class="hljs-attr">size:</span> <span class="hljs-string">5Gi</span><br>    <span class="hljs-attr">logs:</span><br>      <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">className:</span> <span class="hljs-string">default</span> <span class="hljs-comment"># oc get storageclasses</span><br>        <span class="hljs-attr">size:</span> <span class="hljs-string">5Gi</span><br></code></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@azk8s-oc mnt]<span class="hljs-comment"># oc get sqlmi</span><br>NAME   STATUS   REPLICAS   PRIMARY-ENDPOINT   AGE<br>sql1   Ready    2          10.0.1.5,31477     3h26m<br>[root@azk8s-oc mnt]<span class="hljs-comment"># sqlcmd -S 10.0.1.5,31477 -U&lt;username&gt; -P&lt;Password&gt;</span><br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Azure</category>
      </categories>
      <tags>
        <tag>sqlmi</tag>
      </tags>
  </entry>
  <entry>
    <title>azure loadbalancer Tutorial</title>
    <url>/2023/01/15-azure-loadbalancer-Tutorial/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>
    <div id="aplayer-vZflfpHQ" class="aplayer aplayer-tag-marker meting-tag-marker"
         data-id="1893375951" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"
    ></div>


    <div id="aplayer-PtCxjpdD" class="aplayer aplayer-tag-marker meting-tag-marker"
         data-id="1987480678" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"
    ></div>

<hr>
<h4 id="Here-is-a-tutorial-about-how-azure-loadbalancer-works"><a href="#Here-is-a-tutorial-about-how-azure-loadbalancer-works" class="headerlink" title="Here is a tutorial about how azure loadbalancer works:"></a>Here is a tutorial about how azure loadbalancer works:</h4><p><img src="/./image-20230116002915118.png" alt="image-20230116002915118"></p>
<style>.embed-container {
    position: relative;
    padding-bottom: 56.25%;
    height: 0;
    overflow: hidden;
    max-width: 100%;
  }
  .embed-container iframe, .embed-container object, .embed-container embed {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  </style>

<div class="embed-container"><iframe src="https://www.youtube.com/embed/ltd6Nvkbnok" allowfullscreen frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe></div>



]]></content>
      <categories>
        <category>Azure</category>
      </categories>
      <tags>
        <tag>loadbalancer</tag>
      </tags>
  </entry>
  <entry>
    <title>custom exsi iso with Additional driver</title>
    <url>/2023/02/10-custom-exsi-iso-with-Additional-driver/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=400 height=86 src="//music.163.com/outchain/player?type=2&id=5113327&auto=1&height=66"></iframe>
---

<blockquote>
<p>Scenario</p>
</blockquote>
<p>Sometimes we need additional driver for <code>EXSI ISO installer</code>, this is a tutorial for how to do it.</p>
<h4 id="Additional-driver-list"><a href="#Additional-driver-list" class="headerlink" title="Additional driver list"></a>Additional driver list</h4><p><a href="https://vibsdepot.v-front.de/wiki/index.php/List_of_currently_available_ESXi_packages">https://vibsdepot.v-front.de/wiki/index.php/List_of_currently_available_ESXi_packages</a></p>
<h4 id="Build-Environment-preparation"><a href="#Build-Environment-preparation" class="headerlink" title="Build Environment preparation"></a>Build Environment preparation</h4><ul>
<li>Python3.7</li>
<li>VMware.Powercli</li>
<li>Powershell</li>
</ul>
<blockquote>
<p>If encounter any errors related to the Python3.7, please follow below tutorial check your environment</p>
</blockquote>
<p><a href="https://developer.vmware.com/docs/15315//GUID-9081EBAF-BF85-48B1-82A0-D1C49F3FF1E8.html">https://developer.vmware.com/docs/15315//GUID-9081EBAF-BF85-48B1-82A0-D1C49F3FF1E8.html</a></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># example on Linux</span><br><span class="hljs-built_in">PS</span> /Users/jason&gt; <span class="hljs-built_in">Install-Module</span> <span class="hljs-literal">-Name</span> VMware.PowerCLI <span class="hljs-literal">-Force</span><br><span class="hljs-built_in">PS</span> /Users/jason&gt; <span class="hljs-built_in">Set-PowerCLIConfiguration</span> <span class="hljs-literal">-PythonPath</span> /usr/local/bin/python3.<span class="hljs-number">7</span>  <span class="hljs-literal">-Scope</span> User<br><span class="hljs-built_in">PS</span> /Users/jason&gt; pip3.<span class="hljs-number">7</span> install six psutil lxml pyopenssl<br></code></pre></td></tr></table></figure>

<p><img src="/../images/image-20230210160705429.png" alt="image-20230210160705429"></p>
<h4 id="Build-Customized-EXSI-ISO"><a href="#Build-Customized-EXSI-ISO" class="headerlink" title="Build Customized EXSI ISO"></a>Build Customized EXSI ISO</h4><h5 id="Download-additional-drivers-can-be-done-via-browser-too-either-is-fine"><a href="#Download-additional-drivers-can-be-done-via-browser-too-either-is-fine" class="headerlink" title="Download additional drivers (can be done via browser too, either is fine)"></a>Download additional drivers (can be done via browser too, either is fine)</h5><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># r8101 network driver</span><br>aexl http://vibsdepot.v-front.de/depot/bundles/net-r8101-1.020.00-1-offline_bundle.zip <br><span class="hljs-comment"># sata driver</span><br>axel http://vibsdepot.v-front.de/depot/bundles/sata-xahci-1.42-1-offline_bundle.zip <br><span class="hljs-comment"># Get community network driver </span><br><span class="hljs-comment"># https://flings.vmware.com/community-networking-driver-for-esxi#requirements</span><br>axel https://download3.vmware.com/software/vmw-tools/community-network-driver/Net-Community-Driver_1.2.7.0-1vmw.700.1.0.15843807_19480755.zip<br></code></pre></td></tr></table></figure>

<h6 id="Use-offline-vib-drivers-from-https-vibsdepot-v-front-de"><a href="#Use-offline-vib-drivers-from-https-vibsdepot-v-front-de" class="headerlink" title="Use offline vib drivers from https://vibsdepot.v-front.de/"></a>Use offline vib drivers from <a href="https://vibsdepot.v-front.de/">https://vibsdepot.v-front.de/</a></h6><figure class="highlight powershell"><table><tr><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">PS</span> /Users/jason/exsi&gt; ./exsi.ps1 <span class="hljs-literal">-h</span><br><span class="hljs-comment"># Use offline vib drivers from https://vibsdepot.v-front.de/</span><br><span class="hljs-built_in">PS</span> /Users/jason/exsi&gt; ./exsi.ps1 <span class="hljs-literal">-v60</span> <span class="hljs-literal">-pkgDir</span> ./drivers/exsi6/ <span class="hljs-literal">-log</span> install.log <span class="hljs-literal">-nsc</span><br></code></pre></td></tr></table></figure>

<p><img src="/../images/image-20230211162940173.png" alt="image-20230211162940173"></p>
<h6 id="Use-online-drivers-from-https-vibsdepot-v-front-de"><a href="#Use-online-drivers-from-https-vibsdepot-v-front-de" class="headerlink" title="Use online drivers from https://vibsdepot.v-front.de/"></a>Use online drivers from <a href="https://vibsdepot.v-front.de/">https://vibsdepot.v-front.de/</a></h6><figure class="highlight powershell"><table><tr><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># Use online drivers from https://vibsdepot.v-front.de/</span><br><span class="hljs-built_in">PS</span> /Users/jason/exsi&gt; ./exsi.ps1 <span class="hljs-literal">-v60</span> <span class="hljs-literal">-load</span> net<span class="hljs-literal">-r8101</span>,sata<span class="hljs-literal">-xahci</span> <span class="hljs-literal">-vft</span> <span class="hljs-literal">-log</span> install.log <span class="hljs-literal">-nsc</span><br></code></pre></td></tr></table></figure>

<p><img src="/../images/image-20230211162628758.png" alt="image-20230211162628758"></p>
<blockquote>
<p>Reference</p>
</blockquote>
<ul>
<li><a href="https://github.com/jonas-werner/custom-esxi-iso-with-network-drivers">https://github.com/jonas-werner/custom-esxi-iso-with-network-drivers</a></li>
<li><a href="https://github.com/VFrontDe-Org/ESXi-Customizer-PS">https://github.com/VFrontDe-Org/ESXi-Customizer-PS</a></li>
<li><a href="https://vibsdepot.v-front.de/wiki/index.php/List_of_currently_available_ESXi_packages">https://vibsdepot.v-front.de/wiki/index.php/List_of_currently_available_ESXi_packages</a></li>
</ul>
<h4 id="Final-work"><a href="#Final-work" class="headerlink" title="Final work"></a>Final work</h4><p><a href="https://share.msft.vip/EXSI/customized-iso">customized-iso | SharePoint (azure.com)</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>emby unlock Emby Premiere for emby client</title>
    <url>/2024/06/02-emby-unlock-Emby-Premiere-for-emby-client/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>There’s a solution suits every devices in our LAN network, that idea is to build a fake <code>mb3admin.com</code> server in your lan network.</p>
<p>Let’s get started:</p>
<h5 id="Create-init-script"><a href="#Create-init-script" class="headerlink" title="Create init script:"></a>Create init script:</h5><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># vim init_mb3admin.sh</span><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-built_in">mkdir</span> /opt/mb3admin/certs -p &amp;&amp; <span class="hljs-built_in">cd</span> /opt/mb3admin<br>openssl req -x509 -newkey rsa:2048 -days 36525 -nodes -subj <span class="hljs-string">&#x27;/CN=mb3admin.com&#x27;</span> -addext <span class="hljs-string">&quot;subjectAltName = DNS:www.mb3admin.com, DNS:mb3admin.com&quot;</span>  -out certs/emby.crt -keyout certs/emby.key<br>curl https://ssl-config.mozilla.org/ffdhe2048.txt &gt; certs/ssl-dhparams.pem<br><span class="hljs-built_in">cat</span> &gt; nginx.conf &lt;&lt;<span class="hljs-string">EOF</span><br><span class="hljs-string">events &#123;</span><br><span class="hljs-string">  worker_connections  4096;  ## Default: 1024</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">http&#123;</span><br><span class="hljs-string">	server &#123;</span><br><span class="hljs-string">		listen 80;</span><br><span class="hljs-string">		listen [::]:80;</span><br><span class="hljs-string">		server_name mb3admin.com;</span><br><span class="hljs-string"></span><br><span class="hljs-string">		return 301 https://mb3admin.com$request_uri;</span><br><span class="hljs-string">	&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">	server &#123;</span><br><span class="hljs-string">		listen 443 ssl http2;</span><br><span class="hljs-string">		listen [::]:443 ssl http2;</span><br><span class="hljs-string">		server_name mb3admin.com;</span><br><span class="hljs-string">		</span><br><span class="hljs-string">		# Generate with command above</span><br><span class="hljs-string">		ssl_certificate /certs/emby.crt;</span><br><span class="hljs-string">		ssl_certificate_key /certs/emby.key;</span><br><span class="hljs-string">		ssl_session_timeout 1d;</span><br><span class="hljs-string">		ssl_session_cache shared:SSL:10m;  # about 40000 sessions</span><br><span class="hljs-string">		ssl_session_tickets off;</span><br><span class="hljs-string"></span><br><span class="hljs-string">		# curl https://ssl-config.mozilla.org/ffdhe2048.txt &gt; /certs/ssl-dhparams.pem</span><br><span class="hljs-string">		ssl_dhparam /certs/ssl-dhparams.pem;</span><br><span class="hljs-string"></span><br><span class="hljs-string">		# intermediate configuration</span><br><span class="hljs-string">		ssl_protocols TLSv1.2 TLSv1.3;</span><br><span class="hljs-string">		ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;</span><br><span class="hljs-string">		ssl_prefer_server_ciphers off;</span><br><span class="hljs-string"></span><br><span class="hljs-string">		location /admin/service/registration/validateDevice&#123;</span><br><span class="hljs-string">			default_type application/json;</span><br><span class="hljs-string">			return 200 &#x27;&#123;&quot;cacheExpirationDays&quot;:3650,&quot;message&quot;:&quot;Device Valid (limit not checked)&quot;,&quot;resultCode&quot;:&quot;GOOD&quot;&#125;&#x27;;</span><br><span class="hljs-string">		&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">		location /admin/service/registration/validate &#123;</span><br><span class="hljs-string">			default_type application/json;</span><br><span class="hljs-string">			return 200 &#x27;&#123;&quot;featId&quot;:&quot;&quot;,&quot;registered&quot;:true,&quot;expDate&quot;:&quot;2099-01-01&quot;,&quot;key&quot;:&quot;&quot;&#125;&#x27;;</span><br><span class="hljs-string">		&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">		location /admin/service/registration/getStatus &#123;</span><br><span class="hljs-string">			default_type application/json;</span><br><span class="hljs-string">			return 200 &#x27;&#123;&quot;planType&quot;:&quot;Lifetime&quot;,&quot;deviceStatus&quot;:0,&quot;subscriptions&quot;:[]&#125;&#x27;;</span><br><span class="hljs-string">		&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">		location /admin/service/appstore/register &#123;</span><br><span class="hljs-string">			default_type application/json;</span><br><span class="hljs-string">			return 200 &#x27;&#123;&quot;featId&quot;:&quot;&quot;,&quot;registered&quot;:true,&quot;expDate&quot;:&quot;2099-01-01&quot;,&quot;key&quot;:&quot;&quot;&#125;&#x27;;</span><br><span class="hljs-string">		&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">		location /emby/Plugins/SecurityInfo &#123;</span><br><span class="hljs-string">			default_type application/json;</span><br><span class="hljs-string">			return 200 &#x27;&#123;SupporterKey:&quot;&quot;, IsMBSupporter:true&#125;&#x27;;</span><br><span class="hljs-string">		&#125;</span><br><span class="hljs-string">		add_header Access-Control-Allow-Origin * always;</span><br><span class="hljs-string">		add_header Access-Control-Allow-Headers * always;</span><br><span class="hljs-string">		add_header Access-Control-Allow-Method * always;</span><br><span class="hljs-string">		add_header Access-Control-Allow-Credentials true always;</span><br><span class="hljs-string">	&#125;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">EOF</span><br></code></pre></td></tr></table></figure>

<p>If you run nginx server on your local network, you can just put <code>nginx.conf</code> under <code>/etc/nginx/conf.d/</code> and restart nginx server, it will works. But if you want use docker just like me, let’s continue:</p>
<h5 id="Create-Dockerfile-to-build-docker-image"><a href="#Create-Dockerfile-to-build-docker-image" class="headerlink" title="Create Dockerfile to build docker image"></a>Create Dockerfile to build docker image</h5><figure class="highlight dockerfile"><table><tr><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-comment"># vim Dockerfile</span><br><span class="hljs-keyword">FROM</span> nginx<br><span class="hljs-keyword">COPY</span><span class="language-bash"> nginx.conf /etc/nginx/nginx.conf</span><br><span class="hljs-keyword">ADD</span><span class="language-bash"> certs /certs</span><br></code></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">⚡ root@homesrv /opt/mb3admin <span class="hljs-comment"># docker build -t mb3admin .</span><br>Sending build context to Docker daemon  11.78kB<br>Step 1/3 : FROM nginx<br> ---&gt; 4f67c83422ec<br>Step 2/3 : COPY nginx.conf /etc/nginx/nginx.conf<br> ---&gt; Using cache<br> ---&gt; d24bf9ca6fba<br>Step 3/3 : ADD certs /certs<br> ---&gt; Using cache<br> ---&gt; a6e57f1e3978<br>Successfully built a6e57f1e3978<br>Successfully tagged mb3admin:latest<br> ⚡ root@homesrv /opt/mb3admin <span class="hljs-comment"># docker run --name mb3admin -p 443:443 --restart=always -itd mb3admin:latest</span><br></code></pre></td></tr></table></figure>

<h5 id="Change-your-DNS-server"><a href="#Change-your-DNS-server" class="headerlink" title="Change your DNS server"></a>Change your DNS server</h5><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">root@OpenWrt:~<span class="hljs-comment"># grep mb3admin /etc/dnsmasq.conf</span><br>address=/mb3admin.com/192.168.3.20<br>root@OpenWrt:~<span class="hljs-comment"># /etc/init.d/dnsmasq restart</span><br>udhcpc: started, v1.36.0<br>udhcpc: broadcasting discover<br>udhcpc: no lease, failing<br>root@OpenWrt:~<span class="hljs-comment"># nslookup mb3admin.com</span><br>Server:		127.0.0.1<br>Address:	127.0.0.1:53<br><br>Name:	mb3admin.com<br>Address: 192.168.3.20<br>root@OpenWrt:~<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure>

<h5 id="logon-your-emby-server-with-emby-client"><a href="#logon-your-emby-server-with-emby-client" class="headerlink" title="logon your emby server with emby client"></a>logon your emby server with emby client</h5><p><img src="https://upic-1253467112.cos.ap-chengdu.myqcloud.com/uPic/image-20240602140345526.png"></p>
<p><img src="https://upic-1253467112.cos.ap-chengdu.myqcloud.com/uPic/image-20240602141350102.png"></p>
<p>When you see this page that means it worked and click OK and enjoy the moment. By the way, this is for client bypass, you should also bypass on the server side as well just like me.</p>
<p><img src="https://upic-1253467112.cos.ap-chengdu.myqcloud.com/uPic/image-20240602140707142.png" alt="image-20240602140707142"></p>
<blockquote>
<p>Reference</p>
</blockquote>
<p><a href="https://gist.github.com/danielchc/c159626485a08c76856b2d30ae457e04">https://gist.github.com/danielchc/c159626485a08c76856b2d30ae457e04</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>ffmpeg Tutorial</title>
    <url>/2023/01/13-ffmpeg-Tutorial/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h4 id="What-is-ffmpeg-and-basic-usage"><a href="#What-is-ffmpeg-and-basic-usage" class="headerlink" title="What is ffmpeg and basic usage"></a>What is ffmpeg and basic usage</h4><p><a href="https://www.ruanyifeng.com/blog/2020/01/ffmpeg.html">https://www.ruanyifeng.com/blog/2020/01/ffmpeg.html</a></p>
<h4 id="How-to-install"><a href="#How-to-install" class="headerlink" title="How to install"></a>How to install</h4><ul>
<li><a href="https://ffmpeg.org/download.html">https://ffmpeg.org/download.html</a></li>
<li><a href="https://ffmpeg.org/ffmpeg.html">https://ffmpeg.org/ffmpeg.html</a></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># macOS</span><br>brew install ffmpeg<br><span class="hljs-comment"># centos</span><br>sudo yum install epel-release -y<br>sudo yum localinstall --nogpgcheck https://download1.rpmfusion.org/free/el/rpmfusion-free-release-7.noarch.rpm<br>sudo yum install ffmpeg ffmpeg-devel -y<br>ffmpeg -version<br><span class="hljs-comment"># source code</span><br><span class="hljs-comment"># https://ffmpeg.org/download.html#releases</span><br><span class="hljs-comment"># https://gist.githubusercontent.com/hyer/5a63543966dd2642989a/raw/8fc5b0993b4d0dcbf60cb48e1d0a098b38822669/install-ffmpeg.sh</span><br>wget https://ffmpeg.org/releases/ffmpeg-5.1.2.tar.xz &amp;&amp; tar -xvf ffmpeg-5.1.2.tar.xz &amp;&amp; <span class="hljs-built_in">cd</span> ffmpeg-5.1.2<br>./configure --prefix=/usr/local/ffmpeg &amp;&amp; make &amp;&amp; make install<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;export PATH=/usr/local/ffmpeg/bin:<span class="hljs-variable">$PATH</span>&quot;</span> &gt;&gt; ~/.bashrc <br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;export LD_LIBRARY_PATH=/usr/local/ffmpeg/lib:<span class="hljs-variable">$LD_LIBRARY_PATH</span>&quot;</span> &gt;&gt; ~/.bashrc &amp;&amp; <span class="hljs-built_in">source</span> ~/.bashrc<br>ffmpeg -version<br></code></pre></td></tr></table></figure>

<h4 id="How-to-use-ffmpeg-to-make-live-Broadcast"><a href="#How-to-use-ffmpeg-to-make-live-Broadcast" class="headerlink" title="How to use ffmpeg to make live Broadcast"></a>How to use ffmpeg to make live Broadcast</h4><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#/!bin/bash</span><br><span class="hljs-comment"># author=Jas0n0ss</span><br><span class="hljs-comment"># date=2023-01-17</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># define color</span><br>red=<span class="hljs-string">&#x27;\033[0;31m&#x27;</span><br>green=<span class="hljs-string">&#x27;\033[0;32m&#x27;</span><br>yellow=<span class="hljs-string">&#x27;\033[0;33m&#x27;</span><br>font=<span class="hljs-string">&quot;\033[0m&quot;</span><br><span class="hljs-comment">##</span><br><br><span class="hljs-comment">##</span><br><span class="hljs-function"><span class="hljs-title">ffmpeg_install</span></span>() &#123;<br>	<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;ffmpeg checking&quot;</span> | lolcat<br>	ffmpeg -version | lolcat<br>	<span class="hljs-keyword">if</span> [ $? == 0 ]; <span class="hljs-keyword">then</span><br>		<span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;yellow&#125;</span>ffmpeg<span class="hljs-variable">$font</span> <span class="hljs-variable">$&#123;green&#125;</span>Installed<span class="hljs-variable">$font</span>&quot;</span><br>	<span class="hljs-keyword">else</span><br>		<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;wegt installing...&quot;</span> | lolcat<br>		yum -y install wget<br>		<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;ffmpeg installing&quot;</span> | lolcat<br>		wget --no-check-certificate https://ffmpeg.org/releases/ffmpeg-5.1.2.tar.xz<br>		tar -xJf ffmpeg-5.1.2.tar.xz &amp;&amp; <span class="hljs-built_in">cd</span> ffmpeg-5.1.2<br>		./configure --prefix=/usr/local/ffmpeg &amp;&amp; make &amp;&amp; make install<br>		<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;export PATH=/usr/local/ffmpeg/bin:<span class="hljs-variable">$PATH</span>&quot;</span><br>		<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;export LD_LIBRARY_PATH=/usr/local/ffmpeg/lib:<span class="hljs-variable">$LD_LIBRARY_PATH</span>&quot;</span><br>	<span class="hljs-keyword">fi</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-title">live_start</span></span>() &#123;<br>	<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;rtmp URL please:&quot;</span> | lolcat<br>	<span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$red</span> Leave it blank will lead to default URL <span class="hljs-variable">$font</span>&quot;</span><br>	<span class="hljs-built_in">read</span> -r rtmp<br>	url=<span class="hljs-variable">$&#123;rtmp:-&quot;rtmp://live-push.bilivideo.com/live-bvc/?streamname=live_431290720_11083557&amp;key=2c62b2a3a826c488d49663d6d1e1e3db&amp;schedule=rtmp&amp;pflag=1&quot;&#125;</span><br>	<span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$green</span> The rtmp URL is: <span class="hljs-variable">$font</span>&quot;</span><br>	<span class="hljs-built_in">echo</span> <span class="hljs-variable">$rmtp</span> | lolcat<br>	<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;########################&quot;</span> | lolcat<br>	<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;The video path you want to do cycle live:&quot;</span> | lolcat<br>	<span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$red</span> Leave it blank will load current path by default !!<span class="hljs-variable">$font</span>&quot;</span><br>	<span class="hljs-built_in">read</span> -r v_path<br>	V_PATH=<span class="hljs-variable">$&#123;v_path:-&quot;.&quot;&#125;</span><br>	<span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$green</span> video PATH is: <span class="hljs-variable">$V_PATH</span> <span class="hljs-variable">$font</span>&quot;</span><br>	<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;########################&quot;</span> lolcat<br>	<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Need logo right corner of your screen live(May need better CPU to supprt)?(yes/no):&quot;</span> | lolcat<br>	<span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$red</span> Leave it blank will not have logo by default !!<span class="hljs-variable">$font</span>&quot;</span><br>	<span class="hljs-built_in">read</span> -r YN<br>	mark=<span class="hljs-variable">$&#123;YN:-&quot;no&quot;&#125;</span><br>	<span class="hljs-keyword">if</span> [ <span class="hljs-variable">$mark</span> = <span class="hljs-string">&quot;yes&quot;</span> ]; <span class="hljs-keyword">then</span><br>		<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;The logo file path (v.jpg/v.png/v.bmp):&quot;</span> | lolcat<br>		<span class="hljs-built_in">read</span> -r image<br>		<span class="hljs-keyword">while</span> <span class="hljs-literal">true</span>; <span class="hljs-keyword">do</span><br>			<span class="hljs-keyword">for</span> video <span class="hljs-keyword">in</span> $(find <span class="hljs-variable">$V_PATH</span> -<span class="hljs-built_in">type</span> f -name <span class="hljs-string">&quot;*.mp4&quot;</span> | <span class="hljs-built_in">shuf</span> -n1); <span class="hljs-keyword">do</span><br>				ffmpeg -re -i <span class="hljs-string">&quot;<span class="hljs-variable">$video</span>&quot;</span> -i <span class="hljs-string">&quot;<span class="hljs-variable">$image</span>&quot;</span> -filter_complex overlay=W-w-5:5 -c:v libx264 -c:a aac -b:a 192k -strict -2 -f flv <span class="hljs-variable">$rtmp</span><br>			<span class="hljs-keyword">done</span><br>		<span class="hljs-keyword">done</span><br>	<span class="hljs-keyword">else</span><br>		<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Starting live with no logo...&quot;</span> | lolcat<br>		<span class="hljs-keyword">while</span> <span class="hljs-literal">true</span>; <span class="hljs-keyword">do</span><br>			<span class="hljs-keyword">for</span> video <span class="hljs-keyword">in</span> $(find <span class="hljs-variable">$V_PATH</span> -<span class="hljs-built_in">type</span> f -name <span class="hljs-string">&quot;*.mp4&quot;</span> | <span class="hljs-built_in">shuf</span> -n1); <span class="hljs-keyword">do</span><br>				ffmpeg -re -i <span class="hljs-string">&quot;<span class="hljs-variable">$video</span>&quot;</span> -c:v copy -c:a aac -b:a 192k -strict -2 -f flv <span class="hljs-variable">$rtmp</span><br>			<span class="hljs-keyword">done</span><br>		<span class="hljs-keyword">done</span><br>	<span class="hljs-keyword">fi</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-title">live_stop</span></span>() &#123;<br>	screen -S live -X quit<br>	killall ffmpeg<br>&#125;<br><br><span class="hljs-function"><span class="hljs-title">start</span></span>() &#123;<br>	<span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$red</span> Please enter<span class="hljs-variable">$font</span> <span class="hljs-variable">$green</span> ffmpeg|start|stop<span class="hljs-variable">$font</span>&quot;</span><br>	<span class="hljs-built_in">read</span> -r <span class="hljs-variable">$1</span><br>	<span class="hljs-keyword">if</span> [ <span class="hljs-variable">$1</span> == <span class="hljs-string">&quot;start&quot;</span> ]; <span class="hljs-keyword">then</span><br>		live_start<br>	<span class="hljs-keyword">elif</span> [ <span class="hljs-variable">$1</span> == <span class="hljs-string">&quot;stop&quot;</span> ];<span class="hljs-keyword">then</span><br>		live_stop<br>	<span class="hljs-keyword">elif</span> [ <span class="hljs-variable">$1</span> == <span class="hljs-string">&quot;ffmpeg&quot;</span>];<span class="hljs-keyword">then</span><br>		ffmpeg_install<br>	<span class="hljs-keyword">else</span><br>		<span class="hljs-built_in">exit</span> 0<br>	<span class="hljs-keyword">fi</span><br>&#125;<br><span class="hljs-comment">#</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Please make sure you have lolcat installed !!!&quot;</span> | lolcat<br>start<br></code></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>ffmpeg</tag>
      </tags>
  </entry>
  <entry>
    <title>github action to build exsi installation iso</title>
    <url>/2023/02/15-github-action-to-build-exsi-installation-iso/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=400 height=86 src="//music.163.com/outchain/player?type=2&id=5113327&auto=1&height=66"></iframe>
---

<blockquote>
<p>Source project</p>
</blockquote>
<p><a href="https://github.com/Jas0n0ss/exsi-customize-iso">https://github.com/Jas0n0ss/exsi-customize-iso</a></p>
<blockquote>
<p>Basic build workflow</p>
</blockquote>
<ul>
<li>Build Powershell env with <code>python3.7</code></li>
<li>Install python modules: <code>six psutil lxml pyopenssl</code></li>
<li>Install <code>VMware.Powercli</code></li>
<li>Download <a href="https://github.com/VFrontDe-Org/ESXi-Customizer-PS">ESXi-Customizer-PS</a> Powershell script</li>
<li>Use <code>ESXi-Customizer-PS</code> script generate customized ISO</li>
<li>Upload <code>customized ISO</code> and <code>build log</code> to GitHub release</li>
</ul>
<blockquote>
<p>Github Action Workflow</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">name:</span> <span class="hljs-string">EXSi_60_sata_Net55-r8168</span><br><span class="hljs-attr">on:</span><br>  <span class="hljs-attr">repository_dispatch:</span><br>  <span class="hljs-attr">workflow_dispatch:</span><br>    <span class="hljs-attr">inputs:</span><br>      <span class="hljs-attr">tag:</span><br>        <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;Release Tag&#x27;</span><br>        <span class="hljs-attr">required:</span> <span class="hljs-literal">true</span><br>        <span class="hljs-attr">default:</span> <span class="hljs-string">&#x27;EXSI6.0-net55-r8168&#x27;</span><br>      <span class="hljs-attr">driver:</span><br>        <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;Driver Name&#x27;</span><br>        <span class="hljs-attr">required:</span> <span class="hljs-literal">true</span><br>        <span class="hljs-attr">default:</span> <span class="hljs-string">&#x27;net55-r8168&#x27;</span><br>        <br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">Build:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">windows-latest</span><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v3</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-python@v4</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">python-version:</span> <span class="hljs-string">&#x27;3.7&#x27;</span> <br>          <br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Download</span> <span class="hljs-string">ESXi-Customizer-PS</span> <span class="hljs-string">Script</span><br>        <span class="hljs-attr">shell:</span> <span class="hljs-string">powershell</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          $client = new-object System.Net.WebClient</span><br><span class="hljs-string">          $client.DownloadFile(&#x27;https://github.com/VFrontDe/ESXi-Customizer-PS/archive/refs/tags/2.9.0.zip&#x27;,&#x27;ESXi-Customizer-PS.zip&#x27;)</span><br><span class="hljs-string">          Expand-Archive -Path ESXi-Customizer-PS.zip -DestinationPath ./</span><br><span class="hljs-string">          cd ESXi-Customizer-PS-2.9.0</span><br><span class="hljs-string">          $env:WORK_DIR=$PWD</span><br><span class="hljs-string">          $env:WORK_DIR</span><br><span class="hljs-string">          echo &quot;WORK_DIR=$env:WORK_DIR&quot; | Out-File -FilePath $env:GlinuxHUB_ENV -Encoding utf8 -Append</span><br><span class="hljs-string"></span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Install</span> <span class="hljs-string">VMware.PowerCLI</span> <span class="hljs-string">and</span> <span class="hljs-string">Python</span> <span class="hljs-string">dependency</span><br>        <span class="hljs-attr">shell:</span> <span class="hljs-string">powershell</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          Install-Module -Name VMware.PowerCLI -AcceptLicense -Force -SkipPublisherCheck</span><br><span class="hljs-string">          pip3.exe install six psutil lxml pyopenssl</span><br><span class="hljs-string">           </span><br><span class="hljs-string"></span>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Download</span> <span class="hljs-string">exsi6.0</span> <span class="hljs-string">Base</span> <span class="hljs-string">image</span><br>        <span class="hljs-attr">shell:</span> <span class="hljs-string">powershell</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          cd $env:WORK_DIR\</span><br><span class="hljs-string">          Add-EsxSoftwareDepot https://hostupdate.vmware.com/software/VUM/PRODUCTION/main/vmw-depot-index.xml</span><br><span class="hljs-string">          Export-ESXImageProfile -ImageProfile &quot;ESXi-6.0.0-20200204001-standard&quot; -ExportToBundle -filepath ESXi-6.0.0-20200204001-standard.zip</span><br><span class="hljs-string"></span>          <br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span>  <span class="hljs-string">Generate</span> <span class="hljs-string">EXSi</span> <span class="hljs-string">ISO</span> <span class="hljs-string">File</span><br>        <span class="hljs-attr">shell:</span> <span class="hljs-string">powershell</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          cd $env:WORK_DIR\</span><br><span class="hljs-string">          Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope LocalMachine</span><br><span class="hljs-string">          .\ESXi-Customizer-PS.ps1 -izip .\ESXi-6.0.0-20200204001-standard.zip -nsc -log ..\build-log.txt -v60 -vft -load sata-xahci,net55-r8168 -ipname $&#123;&#123; github.event.inputs.tag &#125;&#125; -outDir ..\</span><br><span class="hljs-string">          dir ..\</span><br><span class="hljs-string"></span>         <br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Create</span> <span class="hljs-string">Release</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">softprops/action-gh-release@v1</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">token:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.TOKEN</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">name:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">github.event.inputs.tag</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">tag_name:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">github.event.inputs.tag</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">files:</span> <span class="hljs-string">|</span><br><span class="hljs-string">            build-log.txt</span><br><span class="hljs-string">            $&#123;&#123; github.event.inputs.tag &#125;&#125;.iso</span><br></code></pre></td></tr></table></figure>

<p><img src="/../images/image-20230215132204242.png" alt="image-20230215132204242"></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>Hackintosh-in-intel-platform</title>
    <url>/2023/01/15-hackintosh/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="Hackintosh-installation-tutorial"><a href="#Hackintosh-installation-tutorial" class="headerlink" title="Hackintosh installation tutorial"></a>Hackintosh installation tutorial</h2><h3 id="Hardware-amp-BIOS-Settings"><a href="#Hardware-amp-BIOS-Settings" class="headerlink" title="Hardware &amp; BIOS Settings"></a>Hardware &amp; BIOS Settings</h3><h4 id="Hardware"><a href="#Hardware" class="headerlink" title="Hardware"></a>Hardware</h4><ul>
<li><code>Motherboard</code>: <code>ASUS ROG B360-i</code></li>
<li><code>CPU</code>: <code>I9-9700</code></li>
<li><code>GPU</code>: <code>AMD-RX590</code></li>
<li><code>Broadcom</code>：<code>BCM94360Z3</code></li>
<li><code>SSD</code>: <code>Kingston 512GB</code></li>
</ul>
<h4 id="BIOS-Settings"><a href="#BIOS-Settings" class="headerlink" title="BIOS Settings"></a>BIOS Settings</h4><ul>
<li>Disabled<ul>
<li>Fast Boot</li>
<li>Secure Boot</li>
<li>Compatibility Support Module (CSM) (<strong>Must be off in most cases, GPU errors&#x2F;stalls like <code>gIO</code> are common when this option is enabled</strong>)</li>
<li>Intel SGX</li>
<li>Intel Platform Trust</li>
<li>CFG Lock (MSR 0xE2 write protection)(<strong>This must be off, if you can’t find the option then enable <code>AppleXcpmCfgLock</code> under Kernel -&gt; Quirks. Your hack will not boot with CFG-Lock enabled</strong>)</li>
</ul>
</li>
<li>Enabled<ul>
<li>VT-d </li>
<li>VT-X</li>
<li>Above 4G Decoding</li>
<li>Hyper-Threading</li>
<li>EHCI&#x2F;XHCI Hand-off</li>
<li>OS type: Windows 8.1&#x2F;10 UEFI Mode (some motherboards may require “Other OS” instead)</li>
<li>DVMT Pre-Allocated(iGPU Memory): 128MB</li>
<li>SATA Mode: AHCI</li>
</ul>
</li>
</ul>
<h3 id="macOS-Install-image-Download"><a href="#macOS-Install-image-Download" class="headerlink" title="macOS Install image Download"></a>macOS Install image Download</h3><ul>
<li><a href="https://blog.daliansky.net/">https://blog.daliansky.net/</a></li>
<li>Self-build</li>
</ul>
<h3 id="OpenCore"><a href="#OpenCore" class="headerlink" title="OpenCore"></a>OpenCore</h3><ul>
<li><p><a href="https://github.com/acidanthera/OpenCorePkg/releases">OpenCore Bootloader</a></p>
</li>
<li><p><a href="https://dortania.github.io/OpenCore-Install-Guide/ktext.html">OpenCore Driver</a></p>
</li>
<li><p><a href="https://github.com/ic005k/OCAuxiliaryTools">OpenCore editor</a></p>
</li>
<li><p>OpenCore config checker</p>
<ul>
<li><p><a href="https://opencore.slowgeek.com/">https://opencore.slowgeek.com/</a>  (only supported <code>OC version up to 0.6.6</code>)</p>
<p><img src="/../images/image-20230115140300527-3789059.png" alt="image-20230115140300527"></p>
</li>
<li><p><a href="https://sc.ocutils.me/">https://sc.ocutils.me/</a> (supported all <code>OC</code> versions)</p>
<p><img src="/../images/image-20230115140213338-3789059.png" alt="image-20230115140213338"></p>
</li>
</ul>
</li>
<li><p>OpenCore Theme</p>
<ul>
<li><a href="https://github.com/LuckyCrack/OpenCore-Themes">Big Sur Theme</a> (tested running on below 0.7.8 version perfectly fine, 0.8.8 have issues)</li>
<li><a href="archive/Flavours-macIOS.zip">Flavours-macIOS.zip</a> (perfectly fine running on latest opencore)</li>
</ul>
</li>
</ul>
<h3 id="Tools"><a href="#Tools" class="headerlink" title="Tools"></a>Tools</h3><ul>
<li><a href="https://clamowo.lanzoui.com/b05agns3g">Diskgenius</a></li>
<li><a href="https://alist.bo.ms/d/share/software/windows/EasyUEFI.zip?sign=XIIFRV9KKd7c9CZsudLCL8fxc9Qc1NgwrZEmnp7r8HU=:0">Easyuefi</a></li>
<li><a href="https://www.balena.io/etcher/">balenaEtcher</a></li>
<li><a href="https://github.com/ic005k/OCAuxiliaryTools">OCAuxiliaryTools</a></li>
<li><a href="https://github.com/corpnewt/GenSMBIOS">GenSMBIOS</a></li>
<li><a href="https://mackie100projects.altervista.org/download/occ/?wpdmdl=811&refresh=63c36fc46bd111673752516">OCC</a></li>
</ul>
<h3 id="Config-configuration-tutorial"><a href="#Config-configuration-tutorial" class="headerlink" title="Config configuration tutorial:"></a>Config configuration tutorial:</h3><ul>
<li><a href="https://dortania.github.io/OpenCore-Install-Guide/config.plist/coffee-lake.html">Desktop Coffee Lake</a></li>
<li><a href="https://dortania.github.io/OpenCore-Install-Guide/config.plist/comet-lake.html">Desktop Comet Lake</a></li>
<li><a href="https://dortania.github.io/OpenCore-Install-Guide/AMD/zen.html">Ryzen and Threadripper(17h and 19h)</a></li>
</ul>
<h3 id="Issues-amp-FAQ"><a href="#Issues-amp-FAQ" class="headerlink" title="Issues &amp; FAQ"></a>Issues &amp; FAQ</h3><ul>
<li><p>Asus 300 series motherboard may have <code>F1</code> issue when boot each time:</p>
<p><img src="/../images/cmos-error.d7acd2cd-3789059.jpeg" alt="img"></p>
<p><strong>Fix solution</strong>:</p>
<ul>
<li><p><code>ACPI</code>-&gt;<code>Patch</code> (Use <code>OpenCore Configurator</code> just right click it will show the patch at the bottom menu)</p>
<p><img src="/../images/image-20230115141452983-3789059.png" alt="image-20230115141452983"></p>
</li>
<li><p><code>kernal</code>-&gt;<code>patch</code></p>
<p><img src="/../images/image-20230115141515377-3789059.png" alt="image-20230115141515377"></p>
</li>
<li><p><code>Kernel</code>-&gt;<code>add</code></p>
<p><img src="/../images/image-20230115141536109-3789059.png" alt="image-20230115141536109"></p>
</li>
</ul>
</li>
</ul>
<h3 id="EFI"><a href="#EFI" class="headerlink" title="EFI"></a>EFI</h3><p>Most important thing we all care about is Where is the  <code>EFI</code> file, t<strong>his is the perfect fine running on my machine including everything <code>99.9999% perfection</code></strong>, <em>not guarantee can perfectly running on your machine.</em></p>
<p><strong><a href="archive/Asus-I7-9700-RX590-13.1.zip">OpenCore EFI-Asus-I7-9700-RX590-13.1</a></strong></p>
<h3 id="Finnal-work"><a href="#Finnal-work" class="headerlink" title="Finnal work"></a>Finnal work</h3><ul>
<li><p>Screenshots</p>
<p><img src="/../images/1715511-20210329232424477-584101276-3789059.png" alt="img"></p>
<p><img src="/../images/1715511-20210329231930166-819812934-3789059.png" alt="img"></p>
<p><img src="/../images/1715511-20210329232040695-679347285.png" alt="img"></p>
<p>My earlier tutorial : </p>
<ul>
<li><a href="https://www.cnblogs.com/aboa/p/14594968.html">https://www.cnblogs.com/aboa/p/14594968.html</a></li>
<li><a href="https://www.msft.vip/Hackintosh/">https://www.msft.vip/Hackintosh/</a></li>
<li><a href="https://www.msft.vip/2023/01/15/hackintosh/">https://www.msft.vip/2023/01/15/hackintosh/</a></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>Hackintosh</tag>
        <tag>macOS</tag>
      </tags>
  </entry>
  <entry>
    <title>home app services setup</title>
    <url>/2023/11/08-home-services-setup/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><strong>To Setup a Home server, including very common used services for internal use:</strong></p>
<h4 id="Aria2-Server"><a href="#Aria2-Server" class="headerlink" title="Aria2 Server"></a>Aria2 Server</h4><ul>
<li><p>Aria2</p>
<p><a href="https://github.com/aria2/aria2">https://github.com/aria2/aria2</a></p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@homesrv ~]<span class="hljs-comment"># dnf install epel-release.noarch -y</span><br>[root@homesrv ~]<span class="hljs-comment"># dnf install aria2 -y &amp;&amp; rpm -ql | grep aria2c</span><br>[root@homesrv ~]<span class="hljs-comment"># mkdir /etc/aria2</span><br>[root@homesrv ~]<span class="hljs-comment"># vim /etc/aria2/aria2.conf</span><br>[root@homesrv ~]<span class="hljs-comment"># egrep -v &quot;^#|#&quot; /etc/aria2/aria2.conf</span><br>rpc-secret=westlife<br>enable-rpc=<span class="hljs-literal">true</span><br>rpc-allow-origin-all=<span class="hljs-literal">true</span><br>rpc-listen-all=<span class="hljs-literal">true</span><br>rpc-listen-port=6800<br>max-concurrent-downloads=20<br><span class="hljs-built_in">continue</span>=<span class="hljs-literal">true</span><br>max-connection-per-server=5<br>min-split-size=10M<br><span class="hljs-built_in">split</span>=10<br>max-overall-download-limit=0<br>max-download-limit=0<br>max-overall-upload-limit=0<br>max-upload-limit=0<br><span class="hljs-built_in">dir</span>=/media<br>enable-mmap=<span class="hljs-literal">true</span><br>file-allocation=prealloc<br><span class="hljs-comment"># Very important, if not have this value will met download 403 issue ,like &quot;[HttpSkipResponseCommand.cc:239] errorCode=22 The response status is not successful. status=403&quot;</span><br>user-agent=Chrome <br>[root@homesrv ~]<span class="hljs-comment"># vim /etc/systemd/system/aria2.service</span><br>[root@homesrv ~]<span class="hljs-comment"># egrep -v &quot;^$|^#&quot; /etc/systemd/system/aria2.service</span><br>[Unit]<br>Description=Aria2c download manager<br>After=network.target<br>[Service]<br>Type=simple<br>User=root<br>Group=root<br>ExecStartPre=/usr/bin/env <span class="hljs-built_in">touch</span> /var/tmp/aria2c.session<br>ExecStart=/usr/bin/aria2c --console-log-level=warn --enable-rpc --rpc-listen-all --conf-path=/etc/aria2/aria2.conf<br>TimeoutStopSec=20<br>Restart=on-failure<br>[Install]<br>WantedBy=multi-user.target<br>[root@homesrv ~]<span class="hljs-comment"># systemctl daemon-reload</span><br>[root@homesrv ~]<span class="hljs-comment"># systemctl status aria2.service | grep running</span><br>     Active: active (running) since Wed 2023-11-08 17:31:58 CST; 12min ago<br></code></pre></td></tr></table></figure>

<ul>
<li><p>Aria2NG</p>
<p><a href="https://github.com/mayswind/AriaNg">https://github.com/mayswind/AriaNg</a></p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@homesrv ~]<span class="hljs-comment"># wget https://github.com/mayswind/AriaNg/releases/download/1.3.6/AriaNg-1.3.6.zip</span><br>[root@homesrv ~]<span class="hljs-comment"># unzip AriaNg-1.3.6.zip -d /opt/aria2ng/</span><br>[root@homesrv ~]<span class="hljs-comment"># cat &gt;/etc/nginx/conf.d/aria2ng.conf &lt;&lt;EOF</span><br><span class="hljs-comment"># aria2Ng</span><br>server &#123;<br>	listen 80;<br>	server_name dl.srv;<br>	root /opt/aria2ng/;<br>	location / &#123;<br>		index index.html;<br>	&#125;<br>&#125;<br>EOF<br>[root@homesrv ~]<span class="hljs-comment"># systemctl reload nginx</span><br></code></pre></td></tr></table></figure>

<p><img src="/../images/image-20231108180425877.png" alt="image-20231108180425877"></p>
<ul>
<li>Aria2 Explorer</li>
</ul>
<p>A very simple Chrome plugin for <code>Aria2Ng</code></p>
<p><a href="https://chrome.google.com/webstore/detail/aria2-explorer/mpkodccbngfoacfalldjimigbofkhgjn">https://chrome.google.com/webstore/detail/aria2-explorer/mpkodccbngfoacfalldjimigbofkhgjn</a></p>
<p><img src="/../images/image-20231108180752906.png" alt="image-20231108180752906"></p>
<p><img src="/../images/image-20231108182621230.png" alt="image-20231108182621230"></p>
<h4 id="aliyundrive-webdav"><a href="#aliyundrive-webdav" class="headerlink" title="aliyundrive-webdav"></a>aliyundrive-webdav</h4><p>aliyun drive resources shared with <code>webdav</code> protocol and it can be mounted with <code>Infuse</code>, it’s very convenient to access alien media content with <code>Infuse Pro</code> +<code>Webdav</code>.</p>
<p><a href="https://github.com/messense/aliyundrive-webdav">https://github.com/messense/aliyundrive-webdav</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@homesrv ~]<span class="hljs-comment"># rpm -ivh https://github.com/messense/aliyundrive-webdav/releases/download/v2.3.3/aliyundrive-webdav-2.3.3-1.x86_64.rpm</span><br>[root@homesrv /opt]<span class="hljs-comment"># rpm -ql aliyundrive-webdav-2.3.3-1.x86_64.rpm</span><br>/etc/systemd/system/aliyundrive-webdav.service<br>/usr/bin/aliyundrive-webdav<br>/usr/share/doc/aliyundrive-webdav/LICENSE<br><span class="hljs-comment"># to get token</span><br>[root@homesrv /opt]<span class="hljs-comment"># aliyundrive-webdav qr login </span><br>[root@homesrv /opt]<span class="hljs-comment"># aliyundrive-webdav --help</span><br>[root@homesrv /opt]<span class="hljs-comment"># egrep -v &quot;^$&quot; /etc/systemd/system/aliyundrive-webdav.service</span><br>[Unit]<br>Description=AliyunDrive WebDAV<br>After=network.target<br>[Service]<br>Type=simple<br>Environment=<span class="hljs-string">&quot;REFRESH_TOKEN=xxxxxxxxxxxxxxxxx&quot;</span> <span class="hljs-comment"># use &#x27;aliyundrive-webdav qr login&#x27; to get token</span><br>ExecStart=/usr/bin/aliyundrive-webdav --port 8000 --redirect  --cache-size 16777216  --drive-type backup --auto-index -w /etc/aliyundrive-webdav<br>KillMode=process<br>Restart=on-failure<br>[Install]<br>WantedBy=multi-user.target<br>[root@homesrv /opt]<span class="hljs-comment"># mkdir /etc/aliyundrive-webdav</span><br>[root@homesrv /opt]<span class="hljs-comment"># systemctl daemon-reload &amp;&amp; systemctl restart aliyundrive-webdav.service &amp;&amp; systemctl status aliyundrive-webdav.service</span><br></code></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@homesrv /opt]<span class="hljs-comment"># vim /etc/nginx/conf.d/aliyun.conf</span><br><span class="hljs-comment"># Aliyun Webdav</span><br>server &#123;<br>        listen 80;<br>        server_name dav.srv;<br>        location / &#123;<br>                <span class="hljs-built_in">set</span> <span class="hljs-variable">$ip</span> localhost;<br>                proxy_pass <span class="hljs-variable">$scheme</span>://<span class="hljs-variable">$ip</span>:8000;<br>        &#125;<br>&#125;<br>[root@homesrv /opt]<span class="hljs-comment"># systemctl reload nginx</span><br>[root@homesrv /opt]<span class="hljs-comment"># curl -I http://dav.srv</span><br>HTTP/1.1 200 OK<br>Server: nginx/1.24.0<br>Date: Wed, 08 Nov 2023 10:44:28 GMT<br>Content-Type: text/html; charset=utf-8<br>Connection: keep-alive<br></code></pre></td></tr></table></figure>

<h4 id="Alist-Server"><a href="#Alist-Server" class="headerlink" title="Alist Server"></a>Alist Server</h4><p><a href="https://alist.nn.ci/zh/guide/install/script.html">https://alist.nn.ci/zh/guide/install/script.html</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@homesrv /opt]<span class="hljs-comment"># curl -fsSL &quot;https://alist.nn.ci/v3.sh&quot; | bash -s install /opt/alist</span><br>[root@homesrv /opt]<span class="hljs-comment"># systemctl start alist &amp;&amp; systemctl enable alist</span><br>[root@homesrv /opt]<span class="hljs-comment"># /opt/alist/alist admin set NEW_PASSWORD</span><br><span class="hljs-comment">#</span><br>[root@homesrv /opt]<span class="hljs-comment"># vim /etc/nginx/conf.d/alist.conf</span><br><span class="hljs-comment"># Alist</span><br>server &#123;<br>        listen 80;<br>        server_name alist.srv;<br>        location / &#123;<br>                <span class="hljs-built_in">set</span> <span class="hljs-variable">$ip</span> localhost;<br>                proxy_pass <span class="hljs-variable">$scheme</span>://<span class="hljs-variable">$ip</span>:5244;<br>        &#125;<br>&#125;<br>[root@homesrv /opt]<span class="hljs-comment"># systemctl reload nginx</span><br></code></pre></td></tr></table></figure>

<p><img src="/../images/image-20231108185832711.png" alt="image-20231108185832711"></p>
<h4 id="Plex-Server"><a href="#Plex-Server" class="headerlink" title="Plex  Server"></a>Plex  Server</h4><p><a href="https://www.plex.tv/media-server-downloads/">https://www.plex.tv/media-server-downloads/</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@homesrv ~]<span class="hljs-comment"># rpm -ivh https://downloads.plex.tv/plex-media-server-new/1.32.7.7621-871adbd44/redhat/plexmediaserver-1.32.7.7621-871adbd44.x86_64.rpm</span><br>[root@homesrv ~]<span class="hljs-comment"># systemctl enable plexmediaserver.service  &amp;&amp; systemctl start plexmediaserver.service</span><br>[root@homesrv ~]<span class="hljs-comment"># vim /etc/nginx/conf.d/plex.conf</span><br><span class="hljs-comment"># Plex</span><br>server &#123;<br>        listen 80;<br>        server_name plex.srv;<br>        location / &#123;<br>                proxy_set_header Host <span class="hljs-variable">$host</span>;<br>                proxy_pass http://127.0.0.1:32400;<br>        &#125;<br>&#125;<br>[root@homesrv /opt]<span class="hljs-comment"># systemctl reload nginx</span><br></code></pre></td></tr></table></figure>

<p>Then go to <a href="http://plex.srv/">http://plex.srv</a> to setup media content.</p>
<p><img src="/../images/image-20231108191106721.png" alt="image-20231108191106721"></p>
<h4 id="Samba-Server"><a href="#Samba-Server" class="headerlink" title="Samba Server"></a>Samba Server</h4><p>Some file downloaded from <code>aria2</code> need to be shared between devices.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@homesrv ~]<span class="hljs-comment"># yum install samba -y</span><br>[root@homesrv ~]<span class="hljs-comment"># egrep -v &#x27;^$|^#|#&#x27; /etc/samba/smb.conf</span><br>[global]<br>        workgroup = SAMBA<br>        security = user<br>        passdb backend = tdbsam<br>        printing = cups<br>        printcap name = cups<br>        load printers = <span class="hljs-built_in">yes</span><br>        cups options = raw<br>[media]<br>        comment = media files<br>        path = /media<br>        public = <span class="hljs-built_in">yes</span><br>        writable = <span class="hljs-built_in">yes</span><br>[data]<br>	      comment = share data<br>	      path = /data<br>        public = <span class="hljs-built_in">yes</span><br>        writable = <span class="hljs-built_in">yes</span><br>[root@homesrv ~]<span class="hljs-comment"># useradd -M samba -s /sbin/nologin</span><br>[root@homesrv ~]<span class="hljs-comment"># pdbedit -a  -u samba</span><br>[root@homesrv ~]<span class="hljs-comment"># smbclient -U samba -L localhost</span><br>Password <span class="hljs-keyword">for</span> [SAMBA\samba]:<br><br>	Sharename       Type      Comment<br>	---------       ----      -------<br>	media           Disk      media files<br>	data            Disk      share data<br>	IPC$            IPC       IPC Service (Samba 4.17.5)<br>SMB1 disabled -- no workgroup available<br></code></pre></td></tr></table></figure>

<p><img src="/../images/image-20231108194409940.png" alt="image-20231108194409940"></p>
<p><img src="/../images/image-20231108194429602.png" alt="image-20231108194429602"></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>nginx</tag>
        <tag>aria2</tag>
        <tag>aliyun-webdav</tag>
        <tag>plex</tag>
        <tag>alist</tag>
      </tags>
  </entry>
  <entry>
    <title>kms-server-for-windows-office</title>
    <url>/2023/11/09-kms-server-for-windows-office/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote>
<p>Sometimes when office 2021 setup complete , it’s need to be activated while you don’t have valid key. Here is a way when you have a <strong>kms</strong> server.</p>
</blockquote>
<hr>
<h4 id="Activate-windows-Products"><a href="#Activate-windows-Products" class="headerlink" title="Activate windows Products"></a>Activate windows Products</h4><p>My kms server <code>kms.msft.vip</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># kms.v0v.bid</span><br>slmgr /skms kms.v0v.bid &amp;&amp; slmgr /ato<br><span class="hljs-comment"># kms.msft.vip : My kms server</span><br>slmgr /skms kms.msft.vip &amp;&amp; slmgr /ato<br></code></pre></td></tr></table></figure>

<h4 id="Windows-OS-download"><a href="#Windows-OS-download" class="headerlink" title="Windows OS download:"></a>Windows OS download:</h4><ul>
<li><a href="https://www.msft.vip/msdl">https://www.msft.vip/msdl</a></li>
</ul>
<h4 id="Windows-Activation"><a href="#Windows-Activation" class="headerlink" title="Windows Activation"></a>Windows Activation</h4><ul>
<li><a href="https://github.com/Jas0n0ss/kms">https://github.com/Jas0n0ss/kms</a></li>
</ul>
<h4 id="Open-source-projects-on-Github"><a href="#Open-source-projects-on-Github" class="headerlink" title="Open source projects on Github"></a>Open source projects on Github</h4><ul>
<li><p><a href="https://github.com/Jas0n0ss/kms">https://github.com/Jas0n0ss/kms</a></p>
</li>
<li><p><a href="https://github.com/Wind4/vlmcsd">https://github.com/Wind4/vlmcsd</a></p>
</li>
<li><p><a href="https://github.com/dylanbai8/kmspro">https://github.com/dylanbai8/kmspro</a></p>
</li>
<li><p><a href="https://github.com/ikxin/kms-tools">https://github.com/ikxin/kms-tools</a></p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># download tool to web root</span><br>[root@home /opt/nginx/html/kms]<span class="hljs-comment"># wget https://github.com/ikxin/kms-tools/releases/download/v1.2.0/kms-tools-v1.2.0.zip</span><br>[root@home /opt/nginx/html/kms]<span class="hljs-comment"># unzip kms-tools-v1.2.0.zip</span><br>[root@home /opt/nginx/html/kms]<span class="hljs-comment"># ll</span><br>total 828<br>drwxr-xr-x 2 root root    267 Nov  9 21:02 assets<br>-rw-r--r-- 1 root root   5339 Jul 20  2022 favicon.ico<br>-rw-r--r-- 1 root root    730 Nov  9 21:02 index.html<br>drwxr-xr-x 2 root root     23 Jul 20  2022 js<br>-rw-r--r-- 1 root root 834361 Jul 20  2022 kms-tools-v1.2.0.zip<br>[root@home /opt/nginx/html/kms]<span class="hljs-comment"># vim /etc/nginx/conf.d/kms.conf</span><br><span class="hljs-comment"># kms server</span><br>server &#123;<br>        listen 80;<br>        server_name kms.srv;<br>        location / &#123;<br>                root /opt/nginx/html/kms;<br>                index index.html;<br>        &#125;<br>&#125;<br>[root@home /opt/nginx/html/kms]<span class="hljs-comment"># system restart nginx</span><br></code></pre></td></tr></table></figure>

<p><img src="/../images/image-20231109211300011.png" alt="image-20231109211300011"></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">cd</span> C:\Program Files\Microsoft Office\Office16<br>cscript ospp.vbs /inpkey:FXYTK<span class="hljs-literal">-NJJ8C-GB6DW-3DYQT-6F7TH</span><br>cscript ospp.vbs /sethst:wrt.lan<br>cscript ospp.vbs /act<br></code></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>office</tag>
        <tag>activate</tag>
      </tags>
  </entry>
  <entry>
    <title>kubectl-manage-multiple-k8s-cluster</title>
    <url>/2022/09/16-kubectl-manage-multiple-k8s-cluster/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote>
<p>Usually when we execute <code>kubectl</code> command it will load default k8s configuration from <code>$HOME/.kube/config</code></p>
</blockquote>
<p><strong>But what if we have multiple k8s cluster, How we gonna manage them at same time ?</strong></p>
<p>if we have on-premise k8s and azure k8s:</p>
<ul>
<li>KUBECONFIG</li>
</ul>
  <figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@node1 k8s-configs]<span class="hljs-comment"># ll</span><br>total 20<br>-rw-r--r--. 1 root root 9657 Sep 15 13:23 aksconfig<br>-rw-r--r--. 1 root root 5534 Sep 15 13:06 k8sconfig<br>[root@node1 k8s-configs]<span class="hljs-comment"># pwd</span><br>/root/k8s-configs<br>[root@node1 k8s-configs]<span class="hljs-comment"># export KUBECONFIG=/root/k8s-configs/aksconfig:/root/k8s-configs/k8sconfig</span><br>[root@node1 k8s-configs]<span class="hljs-comment"># echo $KUBECONFIG</span><br>/root/k8s-configs/aksconfig:/root/k8s-configs/k8sconfig<br>[root@node1 k8s-configs]<span class="hljs-comment"># kubectl config get-contexts</span><br>CURRENT   NAME         CLUSTER      AUTHINFO                   NAMESPACE<br>*         aks          aks          clusterUser_azarclab_aks   arc<br>          onpremises   kubernetes   kubernetes-admin<br>[root@node1 k8s-configs]<span class="hljs-comment"># echo &#x27;export KUBECONFIG=/root/k8s-configs/aksconfig:/root/k8s-configs/k8sconfig&#x27; &gt;&gt;/etc/profile.d/k8s.sh</span><br>[root@node1 k8s-configs]<span class="hljs-comment"># kubectl get node</span><br>NAME                             STATUS     ROLES   AGE   VERSION<br>aks-agent1-71585651-vmss00000b   NotReady   agent   23d   v1.22.11<br>aks-agent2-71585651-vmss00000b   NotReady   agent   8d    v1.22.11<br>aks-agent2-71585651-vmss00000c   NotReady   agent   8d    v1.22.11<br>aks-agent2-71585651-vmss00000d   NotReady   agent   8d    v1.22.11<br>aks-master-71585651-vmss000005   NotReady   agent   23d   v1.22.11<br>[root@node1 k8s-configs]<span class="hljs-comment"># kubec</span><br>kubecm   kubectl<br>[root@node1 k8s-configs]<span class="hljs-comment"># kubectl config use-context</span><br>aks         onpremises<br>[root@node1 k8s-configs]<span class="hljs-comment"># kubectl config use-context onpremises</span><br>Switched to context <span class="hljs-string">&quot;onpremises&quot;</span>.<br>[root@node1 k8s-configs]<span class="hljs-comment"># kubectl get node</span><br>NAME    STATUS   ROLES                  AGE     VERSION<br>node1   Ready    control-plane,master   7d19h   v1.20.7<br>node2   Ready    worker                 7d19h   v1.20.7<br>node3   Ready    worker                 7d19h   v1.20.7<br></code></pre></td></tr></table></figure>
<ul>
<li>kubecm<br>  <a href="https://github.com/sunny0826/kubecm">https://github.com/sunny0826/kubecm</a>  <figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@node1 ~]<span class="hljs-comment"># wget https://github.com/sunny0826/kubecm/releases/download/v0.21.0/kubecm_v0.21.0_Linux_x86_64.tar.gz</span><br>[root@node1 ~]<span class="hljs-comment"># tar -zxvf kubecm_v0.21.0_Linux_x86_64.tar.gz</span><br>[root@node1 ~]<span class="hljs-comment"># echo $PATH</span><br>/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin<br>[root@node1 ~]<span class="hljs-comment"># mv kubecm /usr/local/sbin</span><br>[root@node1 ~]<span class="hljs-comment"># kubecm merge -f k8s-configs/ -c</span><br>Loading kubeconfig file: [k8s-configs//aksconfig k8s-configs//k8sconfig]<br>Context Add: aksconfig<br>Context Add: k8sconfig<br>[root@node1 ~]<span class="hljs-comment"># kubectl config get-contexts</span><br>CURRENT   NAME         CLUSTER      AUTHINFO                   NAMESPACE<br>          aks          aks          clusterUser_azarclab_aks   arc<br>*         onpremises   kubernetes   kubernetes-admin<br>[root@node1 ~]<span class="hljs-comment"># kubecm version</span><br>Version: 0.21.0<br>GoOs: linux<br>GoArch: amd64<br>[root@node1 ~]<span class="hljs-comment"># kubecm list</span><br>+------------+--------------+-----------------------+--------------------+-----------------------------------+--------------+<br>|   CURRENT  |     NAME     |        CLUSTER        |        USER        |               SERVER              |   Namespace  |<br>+============+==============+=======================+====================+===================================+==============+<br>|            |   aksconfig  |   cluster-9hdtmk5k4h  |   user-9hdtmk5k4h  |   https://xxxxxxxxxxxxxxxx.hcp.e  |      arc     |<br>|            |              |                       |                    |        astus.azmk8s.io:443        |              |<br>+------------+--------------+-----------------------+--------------------+-----------------------------------+--------------+<br>|      *     |   k8sconfig  |   cluster-c5bdhf8kc6  |   user-c5bdhf8kc6  |     https://10.157.21.24:6443     |    default   |<br>+------------+--------------+-----------------------+--------------------+-----------------------------------+--------------+<br><br>Cluster check succeeded!<br>Kubernetes version v1.20.7<br>Kubernetes master is running at https://10.157.21.24:6443<br>[Summary] Namespace: 8 Node: 3 Pod: 40<br>[root@node1 ~]<span class="hljs-comment"># kubectl config use-context</span><br>aks         onpremises<br>[root@node1 ~]<span class="hljs-comment"># kubectl config use-context aks</span><br>Switched to context <span class="hljs-string">&quot;aks&quot;</span>.<br>[root@node1 ~]<span class="hljs-comment"># kubecm list</span><br>+------------+--------------+-----------------------+--------------------+-----------------------------------+--------------+<br>|   CURRENT  |     NAME     |        CLUSTER        |        USER        |               SERVER              |   Namespace  |<br>+============+==============+=======================+====================+===================================+==============+<br>|            |   aksconfig  |   cluster-9hdtmk5k4h  |   user-9hdtmk5k4h  |   https://xxxxxxxxxxxxxxxx.hcp.e  |      arc     |<br>|            |              |                       |                    |        astus.azmk8s.io:443        |              |<br>+------------+--------------+-----------------------+--------------------+-----------------------------------+--------------+<br>|      *     |   k8sconfig  |   cluster-c5bdhf8kc6  |   user-c5bdhf8kc6  |     https://10.157.21.24:6443     |    default   |<br>+------------+--------------+-----------------------+--------------------+-----------------------------------+--------------+<br><br>Cluster check succeeded!<br>Kubernetes version v1.20.7<br>Kubernetes master is running at https://10.157.21.24:6443<br>[Summary] Pod: 40 Namespace: 8 Node: 3<br></code></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>kubernets</tag>
        <tag>kubecm</tag>
      </tags>
  </entry>
  <entry>
    <title>ladp-server-on-rhel-server</title>
    <url>/2022/09/20-ladp-server-on-rhel-server/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><div class="video-container"><iframe src="https://www.youtube.com/embed/ZO4DyRb-5KI" frameborder="0" loading="lazy" allowfullscreen></iframe></div>

<p>ldapserver.nehraclasses.com 192.168.1.170<br>ldapclient.nehraclasses.com 192.168.1.180</p>
<h3 id="Server-Configuration"><a href="#Server-Configuration" class="headerlink" title="Server Configuration:"></a>Server Configuration:</h3><ol>
<li><p>Install the required LDAP Packages.</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@ldapserver ~]<span class="hljs-comment"># yum -y install openldap* migrationtools</span><br></code></pre></td></tr></table></figure>
</li>
<li><p>Create a LDAP root passwd for administration purpose</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@ldapserver ~]<span class="hljs-comment"># slappasswd</span><br>New password:<br>Re-enter new password:<br></code></pre></td></tr></table></figure>
</li>
<li><p>Edit the OpenLDAP Server Configuration</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@ldapserver ~]<span class="hljs-comment"># vim /etc/openldap/slapd.d/cn=config/olcDatabase=&#123;2&#125;hdb.ldif</span><br></code></pre></td></tr></table></figure>
</li>
<li><p>Provide the Monitor privileges.</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@ldapserver cn=config]<span class="hljs-comment"># vim /etc/openldap/slapd.d/cn=config/olcDatabase=&#123;1&#125;monitor.ldif</span><br>[root@ldapserver cn=config]<span class="hljs-comment"># slaptest -u</span><br>config file testing succeeded<br></code></pre></td></tr></table></figure>
</li>
<li><p>Enable and Start the SLAPD service.</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@ldapserver cn=config]<span class="hljs-comment"># systemctl start slapd</span><br>[root@ldapserver cn=config]<span class="hljs-comment"># systemctl enable slapd</span><br>[root@ldapserver cn=config]<span class="hljs-comment"># netstat -lt | grep ldap</span><br></code></pre></td></tr></table></figure>
</li>
<li><p>Configure the LDAP Database.</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@ldapserver cn=config]<span class="hljs-comment"># cp /usr/share/openldap-servers/DB_CONFIG.example /var/lib/ldap/DB_CONFIG</span><br>[root@ldapserver cn=config]<span class="hljs-comment"># chown -R ldap:ldap /var/lib/ldap/</span><br>Add the following LDAP Schemas.<br>[root@ldapserver cn=config]<span class="hljs-comment"># ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/cosine.ldif</span><br>[root@ldapserver cn=config]<span class="hljs-comment"># ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/nis.ldif</span><br>[root@ldapserver cn=config]<span class="hljs-comment"># ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/inetorgperson.ldif</span><br></code></pre></td></tr></table></figure>
</li>
<li><p>Create the self-signed certificate</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@ldapserver cn=config]<span class="hljs-comment"># openssl req -new -x509 -nodes -out /etc/pki/tls/certs/nehraclassesldap.pem -keyout /etc/pki/tls/certs/nehraclassesldapkey.pem -days 365</span><br>Verify the created certificates under the location /etc/pki/tls/certs/<br>[root@ldapserver cn=config]<span class="hljs-comment"># ll /etc/pki/tls/certs/*.pem</span><br></code></pre></td></tr></table></figure>
</li>
<li><p>Create base objects in OpenLDAP.</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@ldapserver cn=config]<span class="hljs-comment"># cd /usr/share/migrationtools/</span><br>[root@ldapserver migrationtools]<span class="hljs-comment"># vim migrate_common.ph</span><br><span class="hljs-variable">$DEFAULT_MAIL_DOMAIN</span> = <span class="hljs-string">&quot;nehraclasses.com&quot;</span>;<br><span class="hljs-variable">$DEFAULT_BASE</span> = <span class="hljs-string">&quot;dc=nehraclasses,dc=com&quot;</span>;<br><span class="hljs-variable">$EXTENDED_SCHEMA</span> = 1;<br></code></pre></td></tr></table></figure>
</li>
<li><p>Generate a base.ldif file for your Domain.</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@ldapserver migrationtools]<span class="hljs-comment"># touch /root/base.ldif</span><br></code></pre></td></tr></table></figure>
</li>
<li><p>Create Local Users.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@ldapserver migrationtools&#125; <span class="hljs-comment"># useradd ldapuser1</span><br>[root@ldapserver migrationtools&#125; <span class="hljs-comment"># useradd ldapuser2</span><br>[root@ldapserver migrationtools] <span class="hljs-comment"># echo &quot;redhat&quot; | passwd --stdin ldapuser1</span><br>[root@ldapserver migrationtools] <span class="hljs-comment"># echo &quot;redhat&quot; | passwd --stdin ldapuser2</span><br>[root@ldapserver migrationtools]<span class="hljs-comment"># grep &quot;:10[0-9][0-9]&quot; /etc/passwd /root/passwd</span><br>[root@ldapserver migrationtools]<span class="hljs-comment"># grep &quot;:10[0-9][0-9]&quot; /etc/group  /root/group</span><br>[root@ldapserver migrationtools]<span class="hljs-comment"># ./migrate_passwd.pl /root/passwd /root/users.ldif</span><br>[root@ldapserver migrationtools]<span class="hljs-comment"># ./migrate_group.pl /root/group /root/groups.ldif</span><br></code></pre></td></tr></table></figure>
</li>
<li><p>Import Users in to the LDAP Database.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@ldapserver migrationtools]<span class="hljs-comment"># ldapadd -x -W -D &quot;cn=Manager,dc=nehraclasses,dc=com&quot; -f /root/base.ldif</span><br>[root@ldapserver migrationtools]<span class="hljs-comment"># ldapadd -x -W -D &quot;cn=Manager,dc=nehraclasses,dc=com&quot; -f /root/users.ldif</span><br>[root@ldapserver migrationtools]<span class="hljs-comment"># ldapadd -x -W -D &quot;cn=Manager,dc=nehraclasses,dc=com&quot; -f /root/groups.ldif</span><br></code></pre></td></tr></table></figure>
</li>
<li><p>Test the configuration.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@ldapserver migrationtools]<span class="hljs-comment"># ldapsearch -x cn=ldapuser1 -b dc=nehraclasses,dc=com</span><br>[root@ldapserver migrationtools]<span class="hljs-comment"># ldapsearch -x -b &#x27;dc=nehraclasses,dc=com&#x27; &#x27;(objectclass=*)&#x27;</span><br></code></pre></td></tr></table></figure>
</li>
<li><p>Stop Firewalld to allow the connection.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@ldapserver migrationtools]<span class="hljs-comment"># systemctl stop firewalld</span><br>[root@ldapserver migrationtools]<span class="hljs-comment"># setenforce 0</span><br></code></pre></td></tr></table></figure>
</li>
<li><p>NFS Configuration to export the Home Directory.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@ldapserver ~]<span class="hljs-comment"># vim /etc/exports</span><br>/home (rw,<span class="hljs-built_in">sync</span>)<br><span class="hljs-comment"># Enable and restart rpcbind and nfs service.</span><br>[root@ldapserver ~]<span class="hljs-comment"># yum -y install rpcbind nfs*</span><br>[root@ldapserver ~]<span class="hljs-comment"># systemctl start rpcbind</span><br>[root@ldapserver ~]<span class="hljs-comment"># systemctl start nfs</span><br>[root@ldapserver ~]<span class="hljs-comment"># systemctl enable rpcbind</span><br>[root@ldapserver ~]<span class="hljs-comment"># systemctl enable nfs</span><br><span class="hljs-comment"># Test the NFS Configuration.</span><br>[root@ldapserver ~]<span class="hljs-comment"># showmount -e</span><br></code></pre></td></tr></table></figure>

<hr>
</li>
</ol>
<h3 id="Client-Configuration"><a href="#Client-Configuration" class="headerlink" title="Client Configuration:"></a>Client Configuration:</h3><ol>
<li><p>Ldap Client Configuration to use LDAP Server.</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@ldapclient ~]<span class="hljs-comment"># yum install -y openldap-clients nss-pam-ldapd rpcbind* nfs*</span><br></code></pre></td></tr></table></figure>
</li>
<li><p>Start &amp; Enable the services.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># systemctl start rpcbind</span><br><span class="hljs-comment"># systemctl start nfs</span><br><span class="hljs-comment"># systemctl enable rpcbind</span><br><span class="hljs-comment"># systemctl enable nfs</span><br></code></pre></td></tr></table></figure></li>
<li><p>Mount the LDAP Users Home Directory.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># vim /etc exports</span><br>/home/ *(rw)<br><span class="hljs-comment"># showmount -e localhost</span><br></code></pre></td></tr></table></figure>
</li>
<li><p>Configure LDAP Authentication.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># authconfig-tui</span><br></code></pre></td></tr></table></figure></li>
<li><p>Mount the &#x2F;home directory.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Make the entry in AutoFS.</span><br><span class="hljs-comment"># mount ldapserver.nehraclasses.com:/home   /home</span><br><br></code></pre></td></tr></table></figure>
</li>
<li><p>Test the Client Configuration.</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@ldapclient ~]<span class="hljs-comment"># getent passwd ldapuser1</span><br>ldapuser1:x:1000:1000:ldapuser1:/home/ldapuser1:/bin/bash<br></code></pre></td></tr></table></figure>
</li>
<li><p>Switch in the account of ldap user and create some files.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">su - ldapuser1<br><span class="hljs-comment"># Now go to the Ldapserver, and verify the files for ldapuser1 in his home directory.</span><br><span class="hljs-built_in">cd</span> /home/ldapuser1<br><span class="hljs-built_in">ls</span> -lh<br></code></pre></td></tr></table></figure></li>
</ol>
<p>You have successfully configured the LDAP Server &amp; LDAP Client in RHEL 7.</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>LADP</tag>
      </tags>
  </entry>
  <entry>
    <title>love could make us kind and full of responsibility</title>
    <url>/2023/05/07-love-could-make-us-kind-and-full-of-responsibility/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1304875456&auto=1&height=66"></iframe>

<hr>
<h3 id="What-if-a-man-fall-in-love-with-a-girl-what-kind-of-changes-will-be-in-his-life"><a href="#What-if-a-man-fall-in-love-with-a-girl-what-kind-of-changes-will-be-in-his-life" class="headerlink" title="What if a man fall in love with a girl, what kind of changes will be in his life?"></a>What if a man fall in love with a girl, what kind of changes will be in his life?</h3><p>When a man falls in love with a girl, it can have a significant impact on various aspects of his life. Here are some common changes that may occur:</p>
<ul>
<li><strong>Emotional Changes</strong>: Falling in love can bring a surge of positive emotions and happiness. The man may experience feelings of joy, excitement, and contentment as he develops a deep emotional connection with the girl.</li>
<li><strong>Priorities and Focus</strong>: Love often leads to a shift in priorities. The man may start considering the girl’s needs and wants alongside his own. He may find himself prioritizing the relationship and making decisions based on what would be best for both of them.</li>
<li><strong>Increased Motivation</strong>: Love can be a powerful motivator. The man may feel inspired to improve himself, pursue personal goals, and work harder to create a better future for both himself and the girl he loves. This newfound motivation can lead to personal growth and success.</li>
<li><strong>Lifestyle Changes</strong>: When in a relationship, individuals often adjust their lifestyle to accommodate their partner’s needs and preferences. The man may find himself engaging in new activities, exploring new hobbies, or adapting his routine to spend more time with the girl.</li>
<li><strong>Enhanced Social Life</strong>: Falling in love may lead to an expansion of social circles. The man may become more involved in his partner’s social circle, meeting new friends and forming deeper connections. Additionally, the couple may engage in social activities together, broadening their collective social experiences.</li>
<li><strong>Increased Sense of Responsibility</strong>: Love often brings a sense of responsibility and commitment. The man may feel a deeper sense of responsibility toward the girl, wanting to support and protect her. This can lead to a more mature and nurturing mindset.</li>
<li><strong>Improved Communication Skills</strong>: Effective communication is crucial in any relationship. As the man falls in love, he may develop a greater awareness of the importance of open and honest communication. He may work on improving his communication skills to express his feelings, needs, and desires more effectively.</li>
<li><strong>Financial Considerations</strong>: Love can bring financial implications, especially if the couple decides to live together or get married. The man may need to consider financial planning, budgeting, and potentially merging his finances with the girl’s.</li>
<li><strong>Future Planning</strong>: Love often involves envisioning a future together. The man may find himself thinking about long-term goals, such as building a life, starting a family, or creating a shared vision with the girl.</li>
</ul>
<p>It’s important to note that the changes experienced will vary from person to person and depend on the unique dynamics of the relationship. Love has the potential to bring immense happiness and growth, but it also requires effort, compromise, and understanding from both partners to make the relationship flourish.</p>
<hr>
<p>This is a answere from ChatGPT, While Looks he know human very well. Because those changes are happening on me. I’m a lucky man met with her, encourages me to become a better man . Thank you Xueyao. </p>
]]></content>
  </entry>
  <entry>
    <title>Nginx Tutorial</title>
    <url>/2022/12/23-nginx-Tutorial/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="nginx-architecture"><a href="#nginx-architecture" class="headerlink" title="nginx architecture"></a>nginx architecture</h2><h6 id=""><a href="#" class="headerlink" title=""></a><img src="/../images/1545712500935.png" alt="进程模型"></h6><h4 id="1-进程模型"><a href="#1-进程模型" class="headerlink" title="1. 进程模型"></a>1. 进程模型</h4><p>Nginx 分一个master进程和多个worker进程。</p>
<ul>
<li>master进程：读取和评估配置，并管理worker进程。接收来外界信号，向worker进程发送信号，监控worker进程运行状态，当worker进程异常退出后，会自动重新启动新的worker进程。</li>
<li>worker进程：对请求进行实际处理。worker进程之间对等且互相独立，竞争客户端请求，一个请求只能在一个worker进程中处理。worker进程的数量可在配置文件中设置的，一般设置与机器CPU核数一致。</li>
</ul>
<h4 id="2-异步非阻塞"><a href="#2-异步非阻塞" class="headerlink" title="2. 异步非阻塞"></a>2. 异步非阻塞</h4><p>master进程根据配置建立好socket，再fork出多个worker进程。worker进程竞争请求，每个worker只有一个主线程，有一个函数，执行无限循环，不断处理收到的来自客户端的请求。异步非阻塞，同时处理的请求只有一个，只是在请求间不断地切换而已。</p>
<h4 id="3-流畅修改"><a href="#3-流畅修改" class="headerlink" title="3. 流畅修改"></a>3. 流畅修改</h4><p>重启或修改nginx配置，服务不会中断。<br>　　master进程接到信号，先重新加载配置文件，再启动新worker进程，并向所有老worker进程发送信号。老worker收到信号后，不再接收新的请求，处理完当前进程中请求后退出。</p>
<h4 id="4-模型优点"><a href="#4-模型优点" class="headerlink" title="4. 模型优点"></a>4. 模型优点</h4><ul>
<li>独立进程，不需要加锁，节省开销。</li>
<li>独立进程，互相不影响，一个进程出问题，其它进程还在工作，服务不会中断，降低了风险。</li>
</ul>
<h2 id="Nginx-install"><a href="#Nginx-install" class="headerlink" title="Nginx install"></a>Nginx install</h2><ol>
<li>安装Nginx</li>
</ol>
<p><a href="https://nginx.org/">https://nginx.org/</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># https://nginx.org/en/download.html</span><br><span class="hljs-comment">#1、下载 Nginx</span><br>wget https://nginx.org/download/nginx-1.22.1.tar.gz<br><span class="hljs-comment">#2、解压安装包</span><br>tar zxvf nginx-1.22.1.tar.gz<br><span class="hljs-comment">#3、进入安装包目录</span><br><span class="hljs-built_in">cd</span> nginx-1.22.1<br><span class="hljs-comment">#4、编译安装</span><br>./configure --<span class="hljs-built_in">help</span><br>./configure --prefix=/usr/local/webserver/nginx --with-http_stub_status_module --with-http_ssl_module<br>make -j 16 &amp;&amp; make -j 16 install<br><span class="hljs-comment">#5、查看nginx版本</span><br>/usr/local/webserver/nginx/sbin/nginx -v<br></code></pre></td></tr></table></figure>

<ol start="2">
<li>配置Nginx</li>
</ol>
<ul>
<li>创建用户 user：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">/usr/sbin/groupadd nginx<br>/usr/sbin/useradd -g nginx nginx<br></code></pre></td></tr></table></figure>

<ul>
<li>配置nginx.conf</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">vim /usr/local/webserver/nginx/conf/nginx.conf<br></code></pre></td></tr></table></figure>

<ol>
<li>控制Nginx<ul>
<li>启动nginx：运行可执行文件 -s 参数控制Nginx ：</li>
<li>stop：快速关闭服务</li>
<li>quit：正常关闭服务</li>
<li>reload： 重新加载配置文件</li>
<li>reopen： 重启 Nginx</li>
</ul>
</li>
</ol>
<h2 id="Configuration-settings"><a href="#Configuration-settings" class="headerlink" title="Configuration settings"></a>Configuration settings</h2><p>nginx的配置系统由一个主配置文件nginx.conf和其他一些辅助的配置文件构成。 # 号表示注释。</p>
<h5 id="指令组成-指令由指令名称及其参数组成。"><a href="#指令组成-指令由指令名称及其参数组成。" class="headerlink" title="指令组成 指令由指令名称及其参数组成。"></a>指令组成 指令由指令名称及其参数组成。</h5><ul>
<li>简单指令，以分号结尾。如果指令含空格，要用引号括起来。</li>
</ul>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><code class="hljs crmsh"><span class="hljs-keyword">user</span> <span class="hljs-title">nobody</span>;<br></code></pre></td></tr></table></figure>

<ul>
<li>块指令，包含大括号括起来的复合配置块。</li>
</ul>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">server</span> &#123;<br>  # <span class="hljs-keyword">configuration</span> <span class="hljs-keyword">of</span> HTTP virtual <span class="hljs-keyword">server</span> <span class="hljs-number">2</span><br>&#125;<br></code></pre></td></tr></table></figure>

<h5 id="include指令-为了使配置更易于维护，可将复杂或可服用指令拆分存储在其他-conf，并在主nginx-conf文件中使用include指令引用引进来。"><a href="#include指令-为了使配置更易于维护，可将复杂或可服用指令拆分存储在其他-conf，并在主nginx-conf文件中使用include指令引用引进来。" class="headerlink" title="include指令 为了使配置更易于维护，可将复杂或可服用指令拆分存储在其他.conf，并在主nginx.conf文件中使用include指令引用引进来。"></a>include指令 为了使配置更易于维护，可将复杂或可服用指令拆分存储在其他.conf，并在主nginx.conf文件中使用include指令引用引进来。</h5><figure class="highlight stata"><table><tr><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">include</span> <span class="hljs-keyword">conf</span>.<span class="hljs-keyword">d</span>/http;<br></code></pre></td></tr></table></figure>

<h5 id="指令上下文-如果块指令在大括号内部有其他指令，则称为上下文"><a href="#指令上下文-如果块指令在大括号内部有其他指令，则称为上下文" class="headerlink" title="指令上下文 如果块指令在大括号内部有其他指令，则称为上下文"></a>指令上下文 如果块指令在大括号内部有其他指令，则称为上下文</h5><ul>
<li>main : 任何上下文之外的就属于main，与具体业务功能无关的一些参数。</li>
<li>http：main中，与提供http服务相关的一些配置参数。如keepalive、gzip。</li>
<li>server : http中，每个虚拟主机对应一个server配置项，包含该虚拟主机相关的配置。</li>
<li>location : http中，某些特定的URL对应的一系列配置项。</li>
<li>mail : 实现email相关的SMTP&#x2F;IMAP&#x2F;POP3代理时，共享的一些配置项。</li>
<li>events : main中，一般连接处理</li>
<li>stream : TCP协议流量</li>
</ul>
<p>指令上下文之间可能互相包含。</p>
<h4 id="示例配置"><a href="#示例配置" class="headerlink" title="示例配置"></a>示例配置</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">user</span>  nobody;<br><span class="hljs-attribute">worker_processes</span>  <span class="hljs-number">1</span>;<br><span class="hljs-attribute">error_log</span>  logs/<span class="hljs-literal">error</span>.log  <span class="hljs-literal">info</span>;<br><br><span class="hljs-section">events</span> &#123;<br>    <span class="hljs-attribute">worker_connections</span>  <span class="hljs-number">1024</span>;<br>&#125;<br><br><span class="hljs-section">http</span> &#123;<br>    <span class="hljs-section">server</span> &#123;<br>        <span class="hljs-attribute">listen</span>          <span class="hljs-number">80</span>;<br>        <span class="hljs-attribute">server_name</span>     [www.linuxidc.com](http://www.linuxidc.com/);<br>        <span class="hljs-attribute">access_log</span>      logs/linuxidc.access.log main;<br>        <span class="hljs-section">location</span> / &#123;<br>            <span class="hljs-attribute">index</span> index.html;<br>            <span class="hljs-attribute">root</span>  /var/www/[linuxidc.com/htdocs](http://linuxidc.com/htdocs);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-section">server</span> &#123;<br>        <span class="hljs-attribute">listen</span>          <span class="hljs-number">80</span>;<br>        <span class="hljs-attribute">server_name</span>     [www.Androidj.com](http://www.androidj.com/);<br>        <span class="hljs-attribute">access_log</span>      logs/androidj.access.log main;<br>        <span class="hljs-section">location</span> / &#123;<br>            <span class="hljs-attribute">index</span> index.html;<br>            <span class="hljs-attribute">root</span>  /var/www/[androidj.com/htdocs](http://androidj.com/htdocs);<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-section">mail</span> &#123;<br>    <span class="hljs-attribute">auth_http</span>  <span class="hljs-number">127.0.0.1:80</span>/auth.php;<br>    <span class="hljs-attribute">pop3_capabilities</span>  <span class="hljs-string">&quot;TOP&quot;</span>  <span class="hljs-string">&quot;USER&quot;</span>;<br>    <span class="hljs-attribute">imap_capabilities</span>  <span class="hljs-string">&quot;IMAP4rev1&quot;</span>  <span class="hljs-string">&quot;UIDPLUS&quot;</span>;<br>    <span class="hljs-section">server</span> &#123;<br>        <span class="hljs-attribute">listen</span>     <span class="hljs-number">110</span>;<br>        <span class="hljs-attribute">protocol</span>   pop3;<br>        <span class="hljs-attribute">proxy</span>      <span class="hljs-literal">on</span>;<br>    &#125;<br><br>    <span class="hljs-section">server</span> &#123;<br>        <span class="hljs-attribute">listen</span>      <span class="hljs-number">25</span>;<br>        <span class="hljs-attribute">protocol</span>    smtp;<br>        <span class="hljs-attribute">proxy</span>       <span class="hljs-literal">on</span>;<br>        <span class="hljs-attribute">smtp_auth</span>   login plain;<br>        <span class="hljs-attribute">xclient</span>     <span class="hljs-literal">off</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>

<h2 id="Nginx-modules"><a href="#Nginx-modules" class="headerlink" title="Nginx modules"></a>Nginx modules</h2><p>nginx是由core和一系列的功能模块所组成。 nginx core实现了底层的通讯协议，为其他模块和nginx进程构建了基本的运行时环境，并且构建了其他各模块的协作基础。</p>
<ul>
<li><strong>event module</strong>: 事件处理模块。提供了各具体事件的处理。</li>
<li><strong>phase handler</strong>: handler 模块。主要负责处理客户端请求并产生待响应内容。</li>
<li><strong>output filter</strong>: filter 模块。主要是负责对输出的内容进行处理，可以对输出进行修改。</li>
<li><strong>upstream</strong>: upstream 模块。实现反向代理的功能，将真正的请求转发到后端服务器上，并从后端服务器上读取响应，发回客户端。upstream模块是一种特殊的handler。</li>
<li><strong>load-balancer</strong>: 负载均衡模块。实现特定的算法，在众多的后端服务器中，选择一个服务器出来作为某个请求的转发服务器。</li>
</ul>
<h2 id="Nginx-main-function"><a href="#Nginx-main-function" class="headerlink" title="Nginx main function"></a>Nginx main function</h2><ol>
<li><h3 id="代理服务器-反向、正向"><a href="#代理服务器-反向、正向" class="headerlink" title="代理服务器(反向、正向)"></a>代理服务器(反向、正向)</h3></li>
<li><h3 id="HTTP-服务器-包含动静分离"><a href="#HTTP-服务器-包含动静分离" class="headerlink" title="HTTP 服务器(包含动静分离)"></a>HTTP 服务器(包含动静分离)</h3></li>
<li><h3 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h3></li>
</ol>
<h4 id="代理服务器"><a href="#代理服务器" class="headerlink" title="代理服务器:"></a>代理服务器:</h4><h5 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h5><h5 id="1-传递请求"><a href="#1-传递请求" class="headerlink" title="1. 传递请求"></a>1. 传递请求</h5><p>当NGINX代理请求时，它将请求发送到指定的代理服务器，获取响应，并将其发送回客户端。 *<strong>*_ pass指令</strong>：地址可指定为域名或IP地址(可包括端口)。也可以指向一组命名的服务器。如果URI与地址一起指定，将替换匹配请求的URI。</p>
<ul>
<li>proxy_pass 将请求传递给 HTTP 代理服务器</li>
<li>fastcgi_pass 将请求传递给 FastCGI 服务器</li>
<li>uwsgi_pass 将请求传递给 uwsgi 服务器</li>
<li>scgi_pass 将请求传递给 SCGI 服务器</li>
<li>memcached_pass 将请求传递给 memcached 服务器</li>
</ul>
<figure class="highlight nginx"><table><tr><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">location</span> /some/path/ &#123;<br>    <span class="hljs-attribute">proxy_pass</span> http://www.example.com/link/;<br>&#125;<br><span class="hljs-section">location</span> <span class="hljs-regexp">~ \.php</span> &#123;<br>    <span class="hljs-attribute">proxy_pass</span> http://127.0.0.1:8000;<br>&#125;<br></code></pre></td></tr></table></figure>

<h5 id="2-传递请求标头"><a href="#2-传递请求标头" class="headerlink" title="2. 传递请求标头"></a>2. 传递请求标头</h5><p><strong>proxy_set_header</strong>:修改、设置 header 字段，可以在一个或多个 location、server、http 块中指定。</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">location</span> /some/path/ &#123;<br>    <span class="hljs-attribute">proxy_set_header</span> Host <span class="hljs-variable">$host</span>;<br>&#125;<br></code></pre></td></tr></table></figure>

<h5 id="3-配置缓冲区"><a href="#3-配置缓冲区" class="headerlink" title="3. 配置缓冲区"></a>3. 配置缓冲区</h5><p>默认情况下，NGINX 缓存来自代理服务器的响应，直到收到整个响应。 proxy_buffering：启用和禁用缓冲 proxy_buffers ：请求缓冲区的大小和数量 proxy_buffer_size ：响应缓冲区的大小</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">location</span> /some/path/ &#123;<br>    <span class="hljs-attribute">proxy_buffers</span> <span class="hljs-number">16</span> <span class="hljs-number">4k</span>;<br>    <span class="hljs-attribute">proxy_buffer_size</span> <span class="hljs-number">2k</span>;<br>    <span class="hljs-attribute">proxy_pass</span> http://localhost:8000;<br>&#125;<br></code></pre></td></tr></table></figure>

<h5 id="4-选择传出IP地址"><a href="#4-选择传出IP地址" class="headerlink" title="4. 选择传出IP地址"></a>4. 选择传出IP地址</h5><p>代理服务器配置为只接受特定 IP 的连接时。 proxy_bind：指定 IP</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">location</span> /app1/ &#123;<br>    <span class="hljs-attribute">proxy_bind</span> <span class="hljs-number">127.0.0.1</span>;<br>    <span class="hljs-attribute">proxy_pass</span> http://example.com/app1/;<br>&#125;<br></code></pre></td></tr></table></figure>

<h4 id="正向代理"><a href="#正向代理" class="headerlink" title="正向代理"></a>正向代理</h4><p>客户端向代理发送一个请求并指定目标，然后代理向原始服务器转交请求并将获得的内容返回给客户端。目前不支持HTTPS。</p>
<ul>
<li>resolver：配置正向代理的DNS服务器</li>
<li>listen：正向代理的端口</li>
</ul>
<figure class="highlight nginx"><table><tr><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">resolver</span> <span class="hljs-number">114.114.114.114</span> <span class="hljs-number">8.8.8.8</span>;<br><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">resolver_timeout</span> <span class="hljs-number">5s</span>;<br>    <span class="hljs-attribute">listen</span> <span class="hljs-number">81</span>;<br>    <span class="hljs-attribute">access_log</span>  e:/wwwrootproxy.access.log;<br>    <span class="hljs-attribute">error_log</span>   e:/wwwrootproxy.error.log;<br>    <span class="hljs-section">location</span> / &#123;<br>        <span class="hljs-attribute">proxy_pass</span> http://<span class="hljs-variable">$host</span><span class="hljs-variable">$request_uri</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>

<h4 id="HTTP服务器"><a href="#HTTP服务器" class="headerlink" title="HTTP服务器"></a>HTTP服务器</h4><h5 id="Web服务器"><a href="#Web服务器" class="headerlink" title="Web服务器"></a>Web服务器</h5><h5 id="1-日志"><a href="#1-日志" class="headerlink" title="1. 日志"></a>1. 日志</h5><ul>
<li>access_log 访问日志，可结合if参数条件记录</li>
<li>error_log 错误日志</li>
</ul>
<h5 id="2-server"><a href="#2-server" class="headerlink" title="2. server"></a>2. server</h5><ul>
<li>server：http中，定义多个虚拟服务器</li>
<li>listen：指定侦听请求的IP地址和端口。如果省略端口，则使用标准端口。 如果省略地址，将侦听所有地址。</li>
<li>server_name：如多个server匹配listen，可指定主机头域</li>
</ul>
<h5 id="3-资源定位"><a href="#3-资源定位" class="headerlink" title="3. 资源定位"></a>3. 资源定位</h5><ul>
<li>root：指定搜索文件的根目录，可放在http，server或location</li>
<li>index：指令定义索引文件的名称，默认为index.html 匹配root+URI+index</li>
<li>try_files：检查指定的文件或目录是否存在，如果没有则返回配置的URI、状态代码、代理。</li>
</ul>
<h5 id="4-返回特定状态码"><a href="#4-返回特定状态码" class="headerlink" title="4. 返回特定状态码"></a>4. 返回特定状态码</h5><ul>
<li>return [响应代码] [重定向URL]|[响应文本]：返回指令</li>
</ul>
<h5 id="5-重写URI"><a href="#5-重写URI" class="headerlink" title="5. 重写URI"></a>5. 重写URI</h5><ul>
<li>rewrite regex replacement [flag]：location 和 server中，结合正则表达式和标志位实现url重写以及重定向<ul>
<li>last： 停止执行当前上下文中的重写指令</li>
<li>break：停止执行当前虚拟主机的后续rewrite指令集</li>
<li>redirect ：返回302临时重定向</li>
<li>permanent ：返回301永久重定向</li>
</ul>
</li>
</ul>
<h5 id="6-重写HTTP响应"><a href="#6-重写HTTP响应" class="headerlink" title="6. 重写HTTP响应"></a>6. 重写HTTP响应</h5><ul>
<li>sub_filter：重写或更改响应中的内容</li>
<li>error_page : 处理错误</li>
</ul>
<h5 id="7-压缩和解压"><a href="#7-压缩和解压" class="headerlink" title="7. 压缩和解压"></a>7. 压缩和解压</h5><ul>
<li>gzip：向客户端发送响应之前，NGINX会执行压缩</li>
<li>gunzip：为了服务于不接受压缩数据的客户端</li>
</ul>
<figure class="highlight nginx"><table><tr><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">map</span> <span class="hljs-variable">$status</span> <span class="hljs-variable">$loggable</span> &#123;<br>  ~^[23] 0;<br>  <span class="hljs-attribute">default</span> <span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-attribute">access_log</span> /access.log combined if=<span class="hljs-variable">$loggable</span>;<br><span class="hljs-attribute">error_log</span> /<span class="hljs-literal">error</span>.log;<br><br><span class="hljs-section">http</span> &#123;<br>    <span class="hljs-section">server</span> &#123;<br>        <span class="hljs-attribute">listen</span>       <span class="hljs-number">80</span>;      <br>        <span class="hljs-attribute">server_name</span>  localhost;<br>        <span class="hljs-attribute">client_max_body_size</span> <span class="hljs-number">1024M</span>; <br>        <span class="hljs-attribute">gzip</span> <span class="hljs-literal">on</span>;<br><br>        <span class="hljs-section">location</span> / &#123;  <br>            <span class="hljs-attribute">root</span> /data/www;<br>            <span class="hljs-attribute">index</span>  index.html;<br>            <span class="hljs-attribute">try_files</span> <span class="hljs-variable">$uri</span> https://cdn.jsdelivr.net/gh/wujun234/images<span class="hljs-variable">@master</span>/default.gif;<br>            <span class="hljs-attribute">try_files</span> <span class="hljs-variable">$uri</span> <span class="hljs-variable">$uri</span>/ <span class="hljs-variable">$uri</span>.html =<span class="hljs-number">404</span>;<br>            <span class="hljs-attribute">try_files</span> <span class="hljs-variable">$uri</span> <span class="hljs-variable">$uri</span>/ <span class="hljs-variable">@backend</span>;<br>        &#125;<br><br>        <span class="hljs-section">location</span> /users/ &#123;<br>            <span class="hljs-attribute">rewrite</span><span class="hljs-regexp"> ^/users/(.*)$</span> /show?user=<span class="hljs-variable">$1</span> <span class="hljs-literal">break</span>;<br>        &#125;<br><br>        <span class="hljs-section">location</span> <span class="hljs-variable">@backend</span> &#123;<br>            <span class="hljs-attribute">proxy_pass</span> http://backend.example.com;<br>        &#125;<br><br>        <span class="hljs-section">location</span> /wrong/url &#123;<br>            <span class="hljs-attribute">return</span> <span class="hljs-number">404</span>;<br>        &#125;<br><br>        <span class="hljs-section">location</span> / &#123;<br>            <span class="hljs-attribute">gunzip</span> <span class="hljs-literal">on</span>;<br>            <span class="hljs-attribute">sub_filter</span> <span class="hljs-string">&#x27;href=&quot;http://127.0.0.1:8080/&#x27;</span> <span class="hljs-string">&#x27;href=&quot;https://<span class="hljs-variable">$host</span>/&#x27;</span>;<br>            <span class="hljs-attribute">sub_filter</span> /blog/ /blog-staging/;<br>            <span class="hljs-attribute">sub_filter_once</span> <span class="hljs-literal">on</span>;<br>        &#125;<br><br>        <span class="hljs-attribute">error_page</span> <span class="hljs-number">404</span> /<span class="hljs-number">404</span>.html;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>

<p>如果访问<a href="http://localhost就会默认访问到/data/www%E7%9B%AE%E5%BD%95%E4%B8%8B%E9%9D%A2%E7%9A%84index.html%E3%80%82">http://localhost就会默认访问到/data/www目录下面的index.html。</a></p>
<h5 id="动静分离"><a href="#动静分离" class="headerlink" title="动静分离"></a>动静分离</h5><p>根据请求URI拆分动静资源，分开导流向不同的代理或提供不同的文件</p>
<h4 id="负载均衡-1"><a href="#负载均衡-1" class="headerlink" title="负载均衡"></a>负载均衡</h4><p>根据规则随机的将请求分发到指定的服务器上处理，负载均衡配置一般都需要同时配置反向代理，通过反向代理跳转到负载均衡。</p>
<p>Nginx 目前支持自带 3 种负载均衡策略，还有 2 种常用的第三方策略。</p>
<h5 id="1-RR-默认"><a href="#1-RR-默认" class="headerlink" title="1. RR(默认)"></a>1. RR(默认)</h5><p>每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器down掉，能自动剔除。</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">upstream</span> test &#123;<br>    <span class="hljs-attribute">server</span> localhost:<span class="hljs-number">8080</span>;<br>    <span class="hljs-attribute">server</span> localhost:<span class="hljs-number">8081</span>;<br>&#125;<br><br><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-section">location</span> / &#123;<br>        <span class="hljs-attribute">proxy_pass</span> http://test;<br>        <span class="hljs-attribute">proxy_set_header</span> Host <span class="hljs-variable">$host</span>:<span class="hljs-variable">$server_port</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>

<h5 id="2-权重"><a href="#2-权重" class="headerlink" title="2. 权重"></a>2. 权重</h5><p>指定轮询几率，weight 和访问比率成正比，用于后端服务器性能不均的情况。</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">upstream</span> test &#123;<br>    <span class="hljs-attribute">server</span> localhost:<span class="hljs-number">8080</span> weight=<span class="hljs-number">9</span>;<br>    <span class="hljs-attribute">server</span> localhost:<span class="hljs-number">8081</span> weight=<span class="hljs-number">1</span>;<br>&#125;<br></code></pre></td></tr></table></figure>

<h5 id="3-ip-hash"><a href="#3-ip-hash" class="headerlink" title="3. ip_hash"></a>3. ip_hash</h5><p>ip_hash 的每个请求按访问 ip 的 hash 结果分配，每个访客固定访问一个服务器，可解决程序状态问题。</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">upstream</span> test &#123;<br>    ip_hash;<br>    <span class="hljs-attribute">server</span> localhost:<span class="hljs-number">8080</span>;<br>    <span class="hljs-attribute">server</span> localhost:<span class="hljs-number">8081</span>;<br>&#125;<br></code></pre></td></tr></table></figure>

<h5 id="4-fair-第三方"><a href="#4-fair-第三方" class="headerlink" title="4. fair(第三方)"></a>4. fair(第三方)</h5><p>按后端服务器的响应时间来分配请求，响应时间短的优先分配。</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">upstream</span> backend &#123;<br>    fair;<br>    <span class="hljs-attribute">server</span> localhost:<span class="hljs-number">8080</span>;<br>    <span class="hljs-attribute">server</span> localhost:<span class="hljs-number">8081</span>;<br>&#125;<br></code></pre></td></tr></table></figure>

<h5 id="5-url-hash-第三方"><a href="#5-url-hash-第三方" class="headerlink" title="5. url_hash(第三方)"></a>5. url_hash(第三方)</h5><p>按访问url的hash结果来分配请求，使每个url定向到同一个后端服务器，后端服务器为缓存时比较有效。 在upstream中加入hash语句，server语句中不能写入weight等其他的参数，hash_method是使用的hash算法</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">upstream</span> backend &#123;<br>    <span class="hljs-attribute">hash</span> <span class="hljs-variable">$request_uri</span>;<br>    <span class="hljs-attribute">hash_method</span> crc32;<br>    <span class="hljs-attribute">server</span> localhost:<span class="hljs-number">8080</span>;<br>    <span class="hljs-attribute">server</span> localhost:<span class="hljs-number">8081</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>nginx+xray+vless+TCP+xtls</title>
    <url>/2022/12/29-nginx-xray-vless-TCP-xtls/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote>
<p>性能</p>
</blockquote>
<p>经实测 Vless+TCP+xtls-rprx-direct 比 Vmess+ws+tls+web 延迟降低一半，Chrome首页加载、Google搜索速度均有明显改善，非常建议使用。</p>
<blockquote>
<p>配置服务器</p>
</blockquote>
<h3 id="一键脚本配置"><a href="#一键脚本配置" class="headerlink" title="一键脚本配置"></a>一键脚本配置</h3><p><a href="https://github.com/Jas0n0ss/xray">https://github.com/Jas0n0ss/xray</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 云主机确保开启80和443端口，以及一个可用的域名解析到本地机器</span><br>wget https://raw.githubusercontent.com/Jas0n0ss/xray/main/Xray-TLS%2BWeb-setup.sh<br><span class="hljs-built_in">chmod</span> +x Xray-TLS+Web-setup.sh<br>./Xray-TLS+Web-setup.sh<br></code></pre></td></tr></table></figure>

<h3 id="Xray-面板配置"><a href="#Xray-面板配置" class="headerlink" title="Xray 面板配置"></a>Xray 面板配置</h3><p>相对来讲适合小白用户，图形化配置，具体可参考以下链接：</p>
<p><a href="https://www.msft.vip/x-ui/">https://www.msft.vip/x-ui/</a></p>
<h3 id="基于CentOS-7-x2F-8手动配置"><a href="#基于CentOS-7-x2F-8手动配置" class="headerlink" title="基于CentOS 7&#x2F;8手动配置"></a>基于CentOS 7&#x2F;8手动配置</h3><h4 id="update-yum-repo"><a href="#update-yum-repo" class="headerlink" title="update yum repo"></a>update yum repo</h4><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@LinuxVm ~]<span class="hljs-comment"># sudo sed -i -e &quot;s|mirrorlist=|#mirrorlist=|g&quot; /etc/yum.repos.d/CentOS-*</span><br>[root@LinuxVm ~]<span class="hljs-comment"># sudo sed -i -e &quot;s|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g&quot; /etc/yum.repos.d/CentOS-*</span><br></code></pre></td></tr></table></figure>

<h4 id="Firewall-and-selinux"><a href="#Firewall-and-selinux" class="headerlink" title="Firewall and selinux"></a>Firewall and selinux</h4><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@LinuxVm ~]<span class="hljs-comment"># firewall-cmd --permanent --add-service=https</span><br>[root@LinuxVm ~]<span class="hljs-comment"># firewall-cmd --permanent --add-service=http</span><br>[root@LinuxVm ~]<span class="hljs-comment"># firewall-cmd --reload</span><br></code></pre></td></tr></table></figure>

<h4 id="Install-Xary-core"><a href="#Install-Xary-core" class="headerlink" title="Install Xary-core"></a>Install Xary-core</h4><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@LinuxVm ~]<span class="hljs-comment"># bash -c &quot;$(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh)&quot; @ install -u root</span><br>[root@LinuxVm ~]<span class="hljs-comment"># xray -version</span><br></code></pre></td></tr></table></figure>

<h4 id="Configure-Xray"><a href="#Configure-Xray" class="headerlink" title="Configure Xray"></a>Configure Xray</h4><figure class="highlight json"><table><tr><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">[</span>root@LinuxVm ~<span class="hljs-punctuation">]</span># uuidgen<br><span class="hljs-number">1e059</span>d00<span class="hljs-number">-9</span>c73<span class="hljs-number">-48</span>c7-abac-f69734f86706<br><span class="hljs-punctuation">[</span>root@LinuxVm ~<span class="hljs-punctuation">]</span># vim /usr/local/etc/xray/config.json<br><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;log&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>     <span class="hljs-attr">&quot;access&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/var/log/xray/access.log&quot;</span><span class="hljs-punctuation">,</span><br>     <span class="hljs-attr">&quot;error&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/var/log/xray/error.log&quot;</span><span class="hljs-punctuation">,</span><br>     <span class="hljs-attr">&quot;loglevel&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;debug&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span> <br>    <span class="hljs-attr">&quot;inbounds&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>        <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;listen&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;0.0.0.0&quot;</span><span class="hljs-punctuation">,</span> <br>            <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">443</span><span class="hljs-punctuation">,</span> <br>            <span class="hljs-attr">&quot;protocol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;vless&quot;</span><span class="hljs-punctuation">,</span> <br>            <span class="hljs-attr">&quot;settings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                <span class="hljs-attr">&quot;clients&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>                    <span class="hljs-punctuation">&#123;</span><br>                        <span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;****&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">// 填写UUID,可以用uuidgen命令生成</span><br>                        <span class="hljs-attr">&quot;level&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <br>                        <span class="hljs-attr">&quot;email&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;a@b.com&quot;</span><span class="hljs-punctuation">,</span><br>                        <span class="hljs-attr">&quot;flow&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;xtls-rprx-direct&quot;</span><br>                    <span class="hljs-punctuation">&#125;</span><br>                <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <br>                <span class="hljs-attr">&quot;decryption&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;none&quot;</span><span class="hljs-punctuation">,</span> <br>                <span class="hljs-attr">&quot;fallbacks&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>                    <span class="hljs-punctuation">&#123;</span><br>                        <span class="hljs-attr">&quot;dest&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1234</span><br>                    <span class="hljs-punctuation">&#125;</span><br>                <span class="hljs-punctuation">]</span><br>            <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span> <br>            <span class="hljs-attr">&quot;streamSettings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                <span class="hljs-attr">&quot;network&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;tcp&quot;</span><span class="hljs-punctuation">,</span> <br>                <span class="hljs-attr">&quot;security&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;xtls&quot;</span><span class="hljs-punctuation">,</span> <br>                <span class="hljs-attr">&quot;xtlsSettings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                    <span class="hljs-attr">&quot;serverName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;****&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">//换成自己的域名</span><br>                    <span class="hljs-attr">&quot;alpn&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>                        <span class="hljs-string">&quot;http/1.1&quot;</span><br>                    <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <br>                    <span class="hljs-attr">&quot;certificates&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>                        <span class="hljs-punctuation">&#123;</span><br>                            <span class="hljs-attr">&quot;certificateFile&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/etc/pki/tls/certs/****.crt&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">// 换成你的证书，绝对路径</span><br>                            <span class="hljs-attr">&quot;keyFile&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/etc/pki/tls/private/****.key&quot;</span>  <span class="hljs-comment">// 换成你的私钥，绝对路径</span><br>                        <span class="hljs-punctuation">&#125;</span><br>                    <span class="hljs-punctuation">]</span><br>                <span class="hljs-punctuation">&#125;</span><br>            <span class="hljs-punctuation">&#125;</span><br>        <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <br>    <span class="hljs-attr">&quot;outbounds&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>        <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;protocol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;freedom&quot;</span><span class="hljs-punctuation">,</span> <br>            <span class="hljs-attr">&quot;settings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span> <span class="hljs-punctuation">&#125;</span><br>        <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br># 写完可以验证一下<br><span class="hljs-punctuation">[</span>root@LinuxVm ~<span class="hljs-punctuation">]</span># /usr/local/bin/xray -test -config=/usr/local/etc/xray/config.json<br></code></pre></td></tr></table></figure>

<h4 id="Service-manage"><a href="#Service-manage" class="headerlink" title="Service manage"></a>Service manage</h4><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@LinuxVm ~]<span class="hljs-comment"># systemctl enable xray &amp;&amp; systemctl start xray</span><br>[root@LinuxVm ~]<span class="hljs-comment"># service xray status</span><br>[root@LinuxVm ~]<span class="hljs-comment"># service xray start</span><br>[root@LinuxVm ~]<span class="hljs-comment"># service xray stop</span><br>[root@LinuxVm ~]<span class="hljs-comment"># service xray restart</span><br><span class="hljs-comment"># 仅更新geoip.dat和geosite.dat：</span><br>[root@LinuxVm ~]<span class="hljs-comment"># bash -c &quot;$(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh)&quot; @ install-geodata</span><br><span class="hljs-comment"># 移除xray：</span><br>[root@LinuxVm ~]<span class="hljs-comment"># bash -c &quot;$(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh)&quot; @ remove --purge</span><br></code></pre></td></tr></table></figure>

<h4 id="Configure-nginx"><a href="#Configure-nginx" class="headerlink" title="Configure nginx"></a>Configure nginx</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><code class="hljs nginx">[root@<span class="hljs-attribute">LinuxVm</span> ~]<span class="hljs-comment"># yum install -y nginx</span><br>[root<span class="hljs-variable">@LinuxVm</span> ~]<span class="hljs-comment"># vim /etc/nginx/nginx.conf</span><br>server &#123;<br>    <span class="hljs-attribute">listen</span> <span class="hljs-number">80</span> ;<br>    <span class="hljs-attribute">server_name</span> xxx; <span class="hljs-comment">## 换成自己的域名</span><br>    <span class="hljs-attribute">rewrite</span><span class="hljs-regexp"> ^(.*)$</span> https://<span class="hljs-variable">$&#123;server_name&#125;</span><span class="hljs-variable">$1</span> <span class="hljs-literal">permanent</span>; <br>    <span class="hljs-attribute">if</span> (<span class="hljs-variable">$request_method</span>  !<span class="hljs-regexp">~ ^(POST|GET)$)</span> &#123; <span class="hljs-attribute">return</span>  <span class="hljs-number">501</span>; &#125;<br>    <span class="hljs-attribute">autoindex</span> <span class="hljs-literal">off</span>;<br>    <span class="hljs-attribute">server_tokens</span> <span class="hljs-literal">off</span>;<br> &#125;<br>server&#123;<br>        <span class="hljs-attribute">listen</span> <span class="hljs-number">1234</span>;<br>        <span class="hljs-attribute">server_name</span> xxx; <span class="hljs-comment">## 换成自己的域名</span><br><br>	<span class="hljs-section">location</span> /&#123;<br>		<span class="hljs-attribute">root</span>  /usr/share/nginx/html; <br>	&#125;<br>	<br>	<span class="hljs-attribute">index</span> index.php index.html index.htm;<br>	<br>	<span class="hljs-attribute">if</span> (<span class="hljs-variable">$request_method</span>  !<span class="hljs-regexp">~ ^(POST|GET)$)</span> &#123; <span class="hljs-attribute">return</span> <span class="hljs-number">501</span>; &#125;<br>        <span class="hljs-attribute">autoindex</span> <span class="hljs-literal">off</span>;<br>        <span class="hljs-attribute">server_tokens</span> <span class="hljs-literal">off</span>;<br> &#125;<br><span class="hljs-comment"># 可以做一个403伪页面放在下面目录</span><br>/usr/share/nginx/html/<br></code></pre></td></tr></table></figure>

<h4 id="start-service"><a href="#start-service" class="headerlink" title="start service"></a>start service</h4><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@LinuxVm ~]<span class="hljs-comment"># nginx -t</span><br>[root@LinuxVm ~]<span class="hljs-comment"># systemctl enable nginx &amp;&amp; systemctl start nginx</span><br>[root@LinuxVm ~]<span class="hljs-comment"># tail -f /var/log/xray/access.log</span><br></code></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>xray</tag>
      </tags>
  </entry>
  <entry>
    <title>openshift-setup-with-ansible-playbook</title>
    <url>/2022/09/20-openshift-setup-with-ansible/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Nodes:  </p>
<ul>
<li>master: ocmaster.eastasia.cloudapp.azure.com</li>
<li>compute:  occompute.eastasia.cloudapp.azure.com</li>
<li>infra:  ocinfra.eastasia.cloudapp.azure.com</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Nodes all:</span><br>  <br>  sudo yum install -y wget git zile net-tools bind-utils iptables-services bridge-utils bash-completion kexec-tools sos psacct openssl-devel httpd-tools python-cryptography python2-pip python-devel python-passlib java-1.8.0-openjdk-headless <span class="hljs-string">&quot;@Development Tools&quot;</span><br>  sudo yum update -y<br>  sudo yum insttall docker -y &amp;&amp; systemctl start docker &amp;&amp; systemctl <span class="hljs-built_in">enable</span> docker &amp;&amp; systemctl status docker<br>  sudo yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm<br>  sudo sed -i -e <span class="hljs-string">&quot;s/^enabled=1/enabled=0/&quot;</span> /etc/yum.repos.d/epel.repo<br></code></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># master node：</span><br><br>  sudo ssh-keygen <br>  sudo <span class="hljs-keyword">for</span> host <span class="hljs-keyword">in</span> ocmaster.eastasia.cloudapp.azure.com occompute.eastasia.cloudapp.azure.com \<br>  ocinfra.eastasia.cloudapp.azure.com ; <span class="hljs-keyword">do</span> ssh-key-copy <span class="hljs-variable">$&#123;host&#125;</span>;<span class="hljs-keyword">done</span><br>  sudo subscription-manager register --username &lt;email&gt; --password PyPassword1 --auto-attach &amp;&amp; yum-config-manager --<span class="hljs-built_in">enable</span> rhel-7-server-ansible-2.9-rpms<br>  sudo yum install ansible git -y<br>  sudo git <span class="hljs-built_in">clone</span> https://github.com/openshift/openshift-ansible.git &amp;&amp; <span class="hljs-built_in">cd</span> openshift-ansible &amp;&amp; git fetch &amp;&amp; git checkout release-3.11<br></code></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">  sudo vim hosts.ini<br>  <span class="hljs-comment"># Create an OSEv3 group that contains the masters, nodes, and etcd groups</span><br>  [OSEv3:children]<br>  masters<br>  nodes<br>  etcd<br><br>  <span class="hljs-comment"># Set variables common for all OSEv3 hosts</span><br>  [OSEv3:vars]<br>  <span class="hljs-comment"># SSH user, this user should allow ssh based auth without requiring a password</span><br>  ansible_ssh_user=root<br>  <span class="hljs-comment"># If ansible_ssh_user is not root, ansible_become must be set to true</span><br>  ansible_become=<span class="hljs-literal">true</span><br>  openshift_master_default_subdomain=app.ocmaster.eastasia.cloudapp.azure.com<br>  deployment_type=origin<br><br>  [nodes:vars]<br>  openshift_disable_check=disk_availability,memory_availability,docker_storage<br>  [masters:vars]<br>  openshift_disable_check=disk_availability,memory_availability,docker_storage<br>  <span class="hljs-comment"># uncomment the following to enable htpasswd authentication; defaults to DenyAllPasswordIdentityProvider</span><br>  openshift_master_identity_providers=[&#123;<span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;htpasswd_auth&#x27;</span>, <span class="hljs-string">&#x27;login&#x27;</span>: <span class="hljs-string">&#x27;true&#x27;</span>, <span class="hljs-string">&#x27;challenge&#x27;</span>: <span class="hljs-string">&#x27;true&#x27;</span>, <span class="hljs-string">&#x27;kind&#x27;</span>: <span class="hljs-string">&#x27;HTPasswdPasswordIdentityProvider&#x27;</span>&#125;]<br><br>  <span class="hljs-comment"># host group for masters</span><br>  [masters]<br>  ocmaster.eastasia.cloudapp.azure.com<br><br>  <span class="hljs-comment"># host group for etcd</span><br>  [etcd]<br>  ocmaster.eastasia.cloudapp.azure.com<br><br><span class="hljs-comment"># host group for nodes, includes region info</span><br>  [nodes]<br>  ocmaster.eastasia.cloudapp.azure.com  openshift_node_group_name=<span class="hljs-string">&#x27;node-config-master&#x27;</span><br>  occompute.eastasia.cloudapp.azure.com  openshift_node_group_name=<span class="hljs-string">&#x27;node-config-compute&#x27;</span><br>  ocinfra.eastasia.cloudapp.azure.com  openshift_node_group_name=<span class="hljs-string">&#x27;node-config-infra&#x27;</span><br></code></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">sudo ansible-playbook -i hosts.ini playbooks/prerequisites.yml<br>sudo ansible-playbook -i hosts.ini playbooks/deploy_cluster.yml<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>ansible</tag>
      </tags>
  </entry>
  <entry>
    <title>openwrt image for exsi</title>
    <url>/2023/03/12-openwrt-image-for-exsi/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><hr>
<blockquote>
<p>Create openwrt image for exsi </p>
</blockquote>
<ul>
<li><p>Get <code>openwrt</code> image like<code> xxxxx.img</code>, then convert <code>xxxxx.img</code> to <code>xxxxx.vmdk</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># install qemu-img</span><br>brew install qemu<br>qemu-img convert -f raw openwrt.img -O vmdk openwrt.vmdk<br><span class="hljs-comment"># if we already have vmdk format openwrt, then go to next step</span><br></code></pre></td></tr></table></figure>
</li>
<li><p>Change vodka disk type</p>
<ul>
<li>先创建openwrt VM 确认disk的兼容类型，再修改openwrt.vmdk 和新建的类型保持一致</li>
<li>硬盘控制起创建VM的时候记得选择接口<code>ide</code>,因为默认网络上获取的<code>VMDK</code>接口是IDE</li>
</ul>
<p><img src="/../images/image-20230313031422063.png" alt="image-20230313031422063"></p>
<p>一般获取到了针对EXSI专用镜像，就已经是<code>vmdk</code>格式了，但是需要注意是否 <strong>类型</strong> 符合你的需求，需要先确认，必要的话需要转化类型才能被识别。</p>
<blockquote>
<p><code>-d</code>参数为vmdk磁盘存储方式（精简置备<code>thin</code>，厚置备延迟清零<code>zeroedthick</code>，厚置备立即清零<code>eagerzeroedthick</code></p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@exsi:] <span class="hljs-built_in">ls</span> -l openwrt-09.15.2023-x86-64-generic-squashfs-combined-efi*<br>-rw-r--r--    1 root     root     2165341696 Sep 15 03:42 openwrt-09.15.2023-x86-64-generic-squashfs-combined-efi-flat.vmdk<br>-rw-r--r--    1 root     root         10240 Sep 15 03:38 openwrt-09.15.2023-x86-64-generic-squashfs-combined-efi.vmdk<br>[root@exsi:] vmkfstools -i openwrt-09.15.2023-x86-64-generic-squashfs-combined-efi.vmdk  -d zeroedthick openwrt-v2305-rc3.vmd<br>k<br>Destination disk format: VMFS zeroedthick<br>Cloning disk <span class="hljs-string">&#x27;openwrt-09.15.2023-x86-64-generic-squashfs-combined-efi.vmdk&#x27;</span>...<br>Clone: 100% <span class="hljs-keyword">done</span>.<br></code></pre></td></tr></table></figure>

<blockquote>
<p>完成之后再用转化后的两个文件去替换掉创建过的的VM的两个<code>disk</code>文件, 如果镜像名字有过更改，请在不带<code>flat</code>的文件中确认和实际的保持一致。</p>
</blockquote>
</li>
</ul>
]]></content>
      <tags>
        <tag>WMware</tag>
      </tags>
  </entry>
  <entry>
    <title>Prometheus Tutorial</title>
    <url>/2022/12/23-prometheus-Tutorial/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="0-简介"><a href="#0-简介" class="headerlink" title="0 简介"></a>0 简介</h2><p>Prometheus是最初在SoundCloud上构建的开源系统监视和警报工具包 。自2012年成立以来，许多公司和组织都采用了Prometheus，该项目拥有非常活跃的开发人员和用户社区。现在，它是一个独立的开源项目，并且独立于任何公司进行维护。为了强调这一点并阐明项目的治理结构，Prometheus 在2016年加入了 Cloud Native Computing Foundation，这是继Kubernetes之后的第二个托管项目。</p>
<ul>
<li>强大的多维度数据模型。</li>
<li>时间序列数据通过 metric 名和键值对来区分。</li>
<li>所有的 metrics 都可以设置任意的多维标签。</li>
<li>数据模型更随意，不需要刻意设置为以点分隔的字符串。</li>
<li>可以对数据模型进行聚合，切割和切片操作。</li>
<li>支持双精度浮点类型，标签可以设为全 unicode。</li>
<li>灵活而强大的查询语句（PromQL）：在同一个查询语句，可以对多个 metrics 进行乘法、加法、连接、取分数位等操作。</li>
<li>易于管理： Prometheus server 是一个单独的二进制文件，可直接在本地工作，不依赖于分布式存储。</li>
<li>高效：平均每个采样点仅占 3.5 bytes，且一个 Prometheus server 可以处理数百万的 metrics。</li>
<li>使用 pull 模式采集时间序列数据，这样不仅有利于本机测试而且可以避免有问题的服务器推送坏的 metrics。</li>
<li>可以采用 push gateway 的方式把时间序列数据推送至 Prometheus server 端。</li>
<li>可以通过服务发现或者静态配置去获取监控的 targets。</li>
<li>有多种可视化图形界面。</li>
<li>易于伸缩。</li>
</ul>
<h2 id="1-基础环境"><a href="#1-基础环境" class="headerlink" title="1 基础环境"></a>1 基础环境</h2><table>
<thead>
<tr>
<th>环境&#x2F;组件</th>
<th>版本</th>
<th>下载地址</th>
</tr>
</thead>
<tbody><tr>
<td>操作系统</td>
<td>CentOS7.6</td>
<td><a href="https://archive.kernel.org/centos-vault/7.6.1810/isos/x86_64/CentOS-7-x86_64-Minimal-1810.iso">https://archive.kernel.org/centos-vault/7.6.1810/isos/x86_64/CentOS-7-x86_64-Minimal-1810.iso</a></td>
</tr>
<tr>
<td>Prometheus</td>
<td>2.25.0</td>
<td><a href="https://github.com/prometheus/prometheus/releases/download/v2.25.0/prometheus-2.25.0.linux-amd64.tar.gz">https://github.com/prometheus/prometheus/releases/download/v2.25.0/prometheus-2.25.0.linux-amd64.tar.gz</a></td>
</tr>
<tr>
<td>Go</td>
<td>1.16</td>
<td><a href="https://golang.org/dl/go1.16.linux-amd64.tar.gz">https://golang.org/dl/go1.16.linux-amd64.tar.gz</a></td>
</tr>
<tr>
<td>Grafana</td>
<td>yum install latest</td>
<td><a href="https://mirror.tuna.tsinghua.edu.cn/help/grafana/">https://mirror.tuna.tsinghua.edu.cn/help/grafana/</a></td>
</tr>
</tbody></table>
<h2 id="2-安装Prometheus"><a href="#2-安装Prometheus" class="headerlink" title="2 安装Prometheus"></a>2 安装Prometheus</h2><h3 id="2-1-安装"><a href="#2-1-安装" class="headerlink" title="2.1 安装"></a>2.1 安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">tar zxf prometheus-2.25.0.linux-amd64.tar.gz -C /opt<br><span class="hljs-built_in">mv</span> /opt/prometheus-2.25.0.linux-amd64 /opt/prometheus<br></code></pre></td></tr></table></figure>

<h3 id="2-2-配置开机自启动"><a href="#2-2-配置开机自启动" class="headerlink" title="2.2 配置开机自启动"></a>2.2 配置开机自启动</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">vim /usr/lib/systemd/system/prometheus.service<br>[Unit]<br>Description=prometheus service<br> <br>[Service]<br>User=root<br>ExecStart=/opt/prometheus/prometheus --config.file=/opt/prometheus/prometheus.yml --storage.tsdb.path=/opt/prometheus/data<br> <br>TimeoutStopSec=10<br>Restart=on-failure<br>RestartSec=5<br> <br>[Install]<br>WantedBy=multi-user.target<br>systemctl daemon-reload<br>systemctl <span class="hljs-built_in">enable</span> prometheus<br></code></pre></td></tr></table></figure>

<h3 id="2-3-启动服务"><a href="#2-3-启动服务" class="headerlink" title="2.3 启动服务"></a>2.3 启动服务</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">systemctl start prometheus<br>systemctl status prometheus<br></code></pre></td></tr></table></figure>

<h3 id="2-4-验证"><a href="#2-4-验证" class="headerlink" title="2.4 验证"></a>2.4 验证</h3><p>浏览器打开IP:9090端口即可打开 prometheus 自带的监控页面：</p>
<p><a href="https://picture-bed-iuskye.oss-cn-beijing.aliyuncs.com/prometheus/prometheus-native-ui.png"><img src="/../images/prometheus-native-ui.png" alt="img"></a></p>
<h2 id="3-安装Grafana"><a href="#3-安装Grafana" class="headerlink" title="3 安装Grafana"></a>3 安装Grafana</h2><p>普罗米修斯默认的页面可能没有那么直观，我们可以安装grafana使监控看起来更直观。</p>
<h3 id="3-1-配置清华大学的yum源"><a href="#3-1-配置清华大学的yum源" class="headerlink" title="3.1 配置清华大学的yum源"></a>3.1 配置清华大学的yum源</h3><p>打开浏览器输入地址：<code>https://mirror.tuna.tsinghua.edu.cn/help/grafana/</code>，复制CentOS&#x2F;Redhat用户部分：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">vim /etc/yum.repos.d/grafana.repo<br>[grafana]<br>name=grafana<br>baseurl=https://mirrors.tuna.tsinghua.edu.cn/grafana/yum/rpm<br>repo_gpgcheck=0<br>enabled=1<br>gpgcheck=0<br>yum makecache<br></code></pre></td></tr></table></figure>

<h3 id="3-2-安装Grafana"><a href="#3-2-安装Grafana" class="headerlink" title="3.2 安装Grafana"></a>3.2 安装Grafana</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">yum install grafana -y<br></code></pre></td></tr></table></figure>

<h3 id="3-3-启动服务"><a href="#3-3-启动服务" class="headerlink" title="3.3 启动服务"></a>3.3 启动服务</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">systemctl daemon-reload<br>systemctl <span class="hljs-built_in">enable</span> grafana-server<br>systemctl start grafana-server<br></code></pre></td></tr></table></figure>

<h3 id="3-4-访问Grafana"><a href="#3-4-访问Grafana" class="headerlink" title="3.4 访问Grafana"></a>3.4 访问Grafana</h3><p>浏览器访问IP:3000端口，即可打开grafana页面，默认用户名密码都是admin，初次登录会要求修改默认的登录密码：</p>
<p><a href="https://picture-bed-iuskye.oss-cn-beijing.aliyuncs.com/prometheus/grafana-login.png"><img src="/../images/grafana-login.png" alt="img"></a></p>
<p><a href="https://picture-bed-iuskye.oss-cn-beijing.aliyuncs.com/prometheus/grafana-login-pass.png"><img src="/../images/grafana-login-pass.png" alt="img"></a></p>
<p><a href="https://picture-bed-iuskye.oss-cn-beijing.aliyuncs.com/prometheus/grafana-login-home.png"><img src="/../images/grafana-login-home.png" alt="img"></a></p>
<h3 id="3-5-添加Prometheus数据源"><a href="#3-5-添加Prometheus数据源" class="headerlink" title="3.5 添加Prometheus数据源"></a>3.5 添加Prometheus数据源</h3><p>点击主界面的“Add your first data source”并选择Prometheus：</p>
<p><a href="https://picture-bed-iuskye.oss-cn-beijing.aliyuncs.com/prometheus/grafana-add-first-source.png"><img src="/../images/grafana-add-first-source.png" alt="img"></a></p>
<p><a href="https://picture-bed-iuskye.oss-cn-beijing.aliyuncs.com/prometheus/grafana-select.png"><img src="/../images/grafana-select.png" alt="img"></a></p>
<p>Dashboards页面选择“Prometheus 2.0 Stats”进行Import：</p>
<p><a href="https://picture-bed-iuskye.oss-cn-beijing.aliyuncs.com/prometheus/prometheus-dashboard.png"><img src="/../images/prometheus-dashboard.png" alt="img"></a></p>
<p>Settings页面填写普罗米修斯地址并保存：</p>
<p><a href="https://picture-bed-iuskye.oss-cn-beijing.aliyuncs.com/prometheus/prometheus-settings.png"><img src="/../images/prometheus-settings.png" alt="img"></a></p>
<p>切换到我们刚才添加的“Prometheus 2.0 Stats”即可看到整个监控页面：</p>
<p><a href="https://picture-bed-iuskye.oss-cn-beijing.aliyuncs.com/prometheus/prometheus-dashboard-2.0.png"><img src="/../images/prometheus-dashboard-2.0.png" alt="img"></a></p>
<h2 id="4-一些常用监控示例"><a href="#4-一些常用监控示例" class="headerlink" title="4 一些常用监控示例"></a>4 一些常用监控示例</h2><h3 id="4-1-监控Linux机器-node-exporter"><a href="#4-1-监控Linux机器-node-exporter" class="headerlink" title="4.1 监控Linux机器(node_exporter)"></a>4.1 监控Linux机器(node_exporter)</h3><ul>
<li>下载地址：</li>
</ul>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/prometheus/</span>node_exporter<span class="hljs-regexp">/releases/</span>download<span class="hljs-regexp">/v1.1.1/</span>node_exporter-<span class="hljs-number">1.1</span>.<span class="hljs-number">1</span>.linux-amd64.tar.gz<br></code></pre></td></tr></table></figure>

<ul>
<li>被监控的机器安装node_exporter：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">tar zxf node_exporter-1.1.1.linux-amd64.tar.gz -C /opt<br><span class="hljs-built_in">mv</span> /opt/node_exporter-1.1.1.linux-amd64 /opt/node_exporter<br></code></pre></td></tr></table></figure>

<ul>
<li>启动服务：</li>
</ul>
<p>配置开机自启动：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">vim /usr/lib/systemd/system/node_exporter.service<br>[Unit]<br>Description=node_exporter service<br> <br>[Service]<br>User=root<br>ExecStart=/opt/node_exporter/node_exporter<br> <br>TimeoutStopSec=10<br>Restart=on-failure<br>RestartSec=5<br> <br>[Install]<br>WantedBy=multi-user.target<br>systemctl daemon-reload<br>systemctl <span class="hljs-built_in">enable</span> node_exporter<br></code></pre></td></tr></table></figure>

<p>启动服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">systemctl start node_exporter<br>systemctl status node_exporter<br></code></pre></td></tr></table></figure>

<ul>
<li>Prometheus配置文件添加监控项：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">vim /opt/prometheus/prometheus.yml<br>  - job_name: <span class="hljs-string">&#x27;linux-node&#x27;</span><br>    static_configs:<br>    - targets: [<span class="hljs-string">&#x27;192.168.0.112:9100&#x27;</span>]<br>      labels:<br>        instance: linux-node1<br></code></pre></td></tr></table></figure>

<p>重启Prometheus：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">systemctl restart prometheus<br></code></pre></td></tr></table></figure>

<ul>
<li>grafana导入画好的dashboard：</li>
</ul>
<p>Json文件下载地址：<a href="https://picture-bed-iuskye.oss-cn-beijing.aliyuncs.com/prometheus/node-exporter_rev5.json">node-exporter_rev5.json</a></p>
<p>或者使用ID导入的方式：<code>8919</code></p>
<p><a href="https://picture-bed-iuskye.oss-cn-beijing.aliyuncs.com/prometheus/ne-manage.png"><img src="/../images/ne-manage.png" alt="img"></a></p>
<p><a href="https://picture-bed-iuskye.oss-cn-beijing.aliyuncs.com/prometheus/ne-import.png"><img src="/../images/ne-import.png" alt="img"></a></p>
<p><a href="https://picture-bed-iuskye.oss-cn-beijing.aliyuncs.com/prometheus/ne-upload.png"><img src="/../images/ne-upload.png" alt="img"></a></p>
<p>修改名字，选择我们前文创建好的数据源，点击导入即可：</p>
<p><a href="https://picture-bed-iuskye.oss-cn-beijing.aliyuncs.com/prometheus/ne-rename1.png"><img src="/../images/ne-rename1.png" alt="img"></a></p>
<p>下面这个提示是grafana缺少相关显示需要用到的插件piechart，grafana的默认插件目录是&#x2F;var&#x2F;lib&#x2F;grafana&#x2F;plugins，可以将下载好的插件解压到这个目录，重启grafana即可</p>
<p><a href="https://picture-bed-iuskye.oss-cn-beijing.aliyuncs.com/prometheus/ne-no-plugin.png"><img src="/../images/ne-no-plugin.png" alt="img"></a></p>
<p>插件下载地址：<a href="https://picture-bed-iuskye.oss-cn-beijing.aliyuncs.com/prometheus/grafana-piechart-panel-5f249d5.zip">grafana-piechart-panel</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">unzip -q grafana-piechart-panel-5f249d5.zip -d /var/lib/grafana/plugins/<br>systemctl restart grafana-server<br></code></pre></td></tr></table></figure>

<p>查看已安装插件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">/usr/sbin/grafana-cli plugins <span class="hljs-built_in">ls</span><br>installed plugins:<br>grafana-piechart-panel @ 1.3.3<br></code></pre></td></tr></table></figure>

<p>Tips：安装插件还有另外一种命令行方式：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">grafana-cli plugins install grafana-piechart-panel<br>grafana-cli plugins install digiapulssi-breadcrumb-panel<br>grafana-cli plugins install grafana-polystat-panel<br> <br>systemctl restart grafana-server<br></code></pre></td></tr></table></figure>

<p>再刷新grafana页面，即可看到我们刚才设置好的node监控：</p>
<p><a href="https://picture-bed-iuskye.oss-cn-beijing.aliyuncs.com/prometheus/ne-success.png"><img src="/../images/ne-success.png" alt="img"></a></p>
<h3 id="4-2-监控MySQL-mysqld-exporter"><a href="#4-2-监控MySQL-mysqld-exporter" class="headerlink" title="4.2 监控MySQL(mysqld_exporter)"></a>4.2 监控MySQL(mysqld_exporter)</h3><ul>
<li>在被监控服务器创建监控用户：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">GRANT REPLICATION CLIENT, PROCESS ON *.* TO <span class="hljs-string">&#x27;mysqld_exporter&#x27;</span>@<span class="hljs-string">&#x27;127.0.0.1&#x27;</span> identified by <span class="hljs-string">&#x27;mysqld_exporter&#x27;</span>;<br>GRANT SELECT ON performance_schema.* TO <span class="hljs-string">&#x27;mysqld_exporter&#x27;</span>@<span class="hljs-string">&#x27;127.0.0.1&#x27;</span>;<br>flush privileges;<br></code></pre></td></tr></table></figure>

<ul>
<li>下载地址：</li>
</ul>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/prometheus/my</span>sqld_exporter<span class="hljs-regexp">/releases/</span>download<span class="hljs-regexp">/v0.12.1/my</span>sqld_exporter-<span class="hljs-number">0.12</span>.<span class="hljs-number">1</span>.linux-amd64.tar.gz<br></code></pre></td></tr></table></figure>

<ul>
<li>被监控的机器安装mysqld_exporter：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p /opt<br>tar zxf mysqld_exporter-0.12.1.linux-amd64.tar.gz -C /opt<br><span class="hljs-built_in">mv</span> /opt/mysqld_exporter-0.12.1.linux-amd64 /opt/mysqld_exporter<br><span class="hljs-built_in">cd</span> /opt/mysqld_exporter<br></code></pre></td></tr></table></figure>

<ul>
<li>设置配置文件，user为数据库登录用户，password为这个用户的密码：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">vim .my.cnf<br> <br>[client]<br>host=127.0.0.1<br>port=3306<br>user=mysqld_exporter<br>password=mysqld_exporter<br></code></pre></td></tr></table></figure>

<ul>
<li>配置开机自启动并启动服务：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">vim /usr/lib/systemd/system/mysqld_exporter.service<br>[Unit]<br>Description=mysqld_exporter service<br> <br>[Service]<br>User=root<br>ExecStart=/opt/mysqld_exporter/mysqld_exporter --config.my-cnf=/opt/mysqld_exporter/.my.cnf<br> <br>TimeoutStopSec=10<br>Restart=on-failure<br>RestartSec=5<br> <br>[Install]<br>WantedBy=multi-user.target<br>systemctl daemon-reload<br>systemctl <span class="hljs-built_in">enable</span> mysqld_exporter<br>systemctl start mysqld_exporter<br>systemctl status mysqld_exporter<br></code></pre></td></tr></table></figure>

<ul>
<li>prometheus配置文件中加入mysql监控并重启：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">vim /opt/monitor/prometheus/prometheus.yml<br>  - job_name: <span class="hljs-string">&#x27;mysqld-node&#x27;</span><br>    static_configs:<br>    - targets: [<span class="hljs-string">&#x27;192.168.1.235:9104&#x27;</span>]<br>      labels:<br>        instance: mysqld-node1<br></code></pre></td></tr></table></figure>

<p>重启服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">systemctl restart prometheus<br></code></pre></td></tr></table></figure>

<p>模板Json文件下载地址：<a href="https://picture-bed-iuskye.oss-cn-beijing.aliyuncs.com/prometheus/mysql_rev1.json">mysql_rev1.json</a></p>
<ul>
<li>导入已经画好的dashboard，数据源选择刚刚创建好的 <code>prometheus</code> 数据源即可：</li>
</ul>
<p><a href="https://picture-bed-iuskye.oss-cn-beijing.aliyuncs.com/prometheus/mysqld-6.png"><img src="/../images/mysqld-6.png" alt="img"></a></p>
<p><a href="https://picture-bed-iuskye.oss-cn-beijing.aliyuncs.com/prometheus/mysqld-7.png"><img src="/../images/mysqld-7.png" alt="img"></a></p>
<p><a href="https://picture-bed-iuskye.oss-cn-beijing.aliyuncs.com/prometheus/mysqld-8.png"><img src="/../images/mysqld-8.png" alt="img"></a></p>
<p><a href="https://picture-bed-iuskye.oss-cn-beijing.aliyuncs.com/prometheus/mysqld-9.png"><img src="/../images/mysqld-9.png" alt="img"></a></p>
<p>Tips: 导入模板那里也可以采用输入grafana id的方式进行import，这里我们不用上传该json文件，而是输入id <code>7362</code>，然后点击 <code>load</code> 按钮即可：</p>
<p><a href="https://oss.iuskye.com/article/2021-03-30/grafana-import-id.png"><img src="/../images/grafana-import-id.png" alt="img"></a></p>
<p><a href="https://oss.iuskye.com/article/2021-03-30/grafana-import-rename.png"><img src="/../images/grafana-import-rename.png" alt="img"></a></p>
<p><a href="https://oss.iuskye.com/article/2021-03-30/grafana-import-mysql.png"><img src="/../images/grafana-import-mysql.png" alt="img"></a></p>
<h3 id="4-3-监控Redis-redis-exporter"><a href="#4-3-监控Redis-redis-exporter" class="headerlink" title="4.3 监控Redis(redis_exporter)"></a>4.3 监控Redis(redis_exporter)</h3><ul>
<li>下载地址：</li>
</ul>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/oliver006/</span>redis_exporter<span class="hljs-regexp">/releases/</span>download<span class="hljs-regexp">/v1.20.0/</span>redis_exporter-v1.<span class="hljs-number">20.0</span>.linux-amd64.tar.gz<br></code></pre></td></tr></table></figure>

<ul>
<li>安装redis_exporter：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p /opt/redis_exporter<br>tar zxf redis_exporter-v1.20.0.linux-amd64.tar.gz -C /opt/redis_exporter<br></code></pre></td></tr></table></figure>

<ul>
<li>配置开机自启动并启动服务：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">vim /usr/lib/systemd/system/redis_exporter.service<br>[Unit]<br>Description=redis_exporter service<br> <br>[Service]<br>User=root<br>ExecStart=/opt/redis_exporter/redis_exporter -redis.addr redis://192.168.1.235:6379 -redis.password 123456<br> <br>TimeoutStopSec=10<br>Restart=on-failure<br>RestartSec=5<br> <br>[Install]<br>WantedBy=multi-user.target<br>systemctl daemon-reload<br>systemctl <span class="hljs-built_in">enable</span> redis_exporter<br>systemctl start redis_exporter<br>systemctl status redis_exporter<br></code></pre></td></tr></table></figure>

<ul>
<li>prometheus配置文件中加入redis监控并重启：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">vim /opt/prometheus/prometheus.yml<br>  - job_name: <span class="hljs-string">&#x27;redis-node&#x27;</span><br>    static_configs:<br>    - targets: [<span class="hljs-string">&#x27;192.168.0.116:9121&#x27;</span>]<br>      labels:<br>        instance: redis-node1<br></code></pre></td></tr></table></figure>

<p>重启服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">systemctl restart prometheus<br></code></pre></td></tr></table></figure>

<ul>
<li>grafana导入画好的dashboard：</li>
</ul>
<p>Grafana ID: 4074 或者 14091</p>
<p><a href="https://oss.iuskye.com/article/2021-03-30/grafana-redis-dash.png"><img src="/../images/grafana-redis-dash.png" alt="img"></a></p>
<h3 id="4-4-监控Elasticsearch-elasticsearch-exporter"><a href="#4-4-监控Elasticsearch-elasticsearch-exporter" class="headerlink" title="4.4 监控Elasticsearch(elasticsearch_exporter)"></a>4.4 监控Elasticsearch(elasticsearch_exporter)</h3><ul>
<li>下载地址：</li>
</ul>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/justwatchcom/</span>elasticsearch_exporter<span class="hljs-regexp">/releases/</span>download<span class="hljs-regexp">/v1.1.0/</span>elasticsearch_exporter-<span class="hljs-number">1.1</span>.<span class="hljs-number">0</span>.linux-amd64.tar.gz<br></code></pre></td></tr></table></figure>

<ul>
<li>安装elasticsearch_exporter：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p /opt<br>tar zxf elasticsearch_exporter-1.1.0.linux-amd64.tar.gz -C /opt/<br><span class="hljs-built_in">mv</span> /opt/elasticsearch_exporter-1.1.0.linux-amd64 /opt/elasticsearch_exporter<br></code></pre></td></tr></table></figure>

<ul>
<li>配置开机自启动并启动服务：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">vim /usr/lib/systemd/system/elasticsearch_exporter.service<br>[Unit]<br>Description=elasticsearch_exporter service<br> <br>[Service]<br>User=root<br>ExecStart=/opt/elasticsearch_exporter/elasticsearch_exporter --es.uri=http://elastic:123456@127.0.0.1:9200<br> <br>TimeoutStopSec=10<br>Restart=on-failure<br>RestartSec=5<br> <br>[Install]<br>WantedBy=multi-user.target<br>vim /usr/lib/systemd/system/elasticsearch_exporter.service<br>systemctl daemon-reload<br>systemctl <span class="hljs-built_in">enable</span> elasticsearch_exporter<br>systemctl start elasticsearch_exporter<br>systemctl status elasticsearch_exporter<br></code></pre></td></tr></table></figure>

<ul>
<li>prometheus配置文件中加入elasticsearch监控并重启：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">vim /opt/prometheus/prometheus.yml<br>  - job_name: <span class="hljs-string">&#x27;elasticsearch-node&#x27;</span><br>    static_configs:<br>    - targets: [<span class="hljs-string">&#x27;192.168.0.116:9114&#x27;</span>]<br>      labels:<br>        instance: elasticsearch-node1<br></code></pre></td></tr></table></figure>

<ul>
<li>这里提供一段通过公网https协议进行监控的配置项：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">- job_name: <span class="hljs-string">&#x27;es-node&#x27;</span><br>  static_configs:<br>  - targets: [<span class="hljs-string">&#x27;mmbapoc.zhizhangyi.com:9070&#x27;</span>]<br>    labels:<br>      instance: es-node1<br>  scheme: https<br>  metrics_path: /es/node1<br></code></pre></td></tr></table></figure>

<p>解释一下：scheme指定pull数据的协议为https，metrics_path指定Exporter机器上Nginx反向代理匹配路径，见下文。</p>
<ul>
<li>Nginx反向代理配置：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">location /es/node1 &#123;<br>    proxy_pass   http://127.0.0.1:9114/metrics;<br>    proxy_set_header Host <span class="hljs-variable">$http_host</span>;<br>    proxy_set_header X-Real-IP <span class="hljs-variable">$remote_addr</span>;<br>    proxy_set_header X-Forwarded-For <span class="hljs-variable">$proxy_add_x_forwarded_for</span>;<br>    proxy_set_header X-Forwarded-Proto <span class="hljs-variable">$scheme</span>;<br>&#125;<br></code></pre></td></tr></table></figure>

<p>解释一下，该Nginx部署在内网中，Prometheus通过公网请求Nginx，然后由Nginx反向代理到Exporter服务器。</p>
<ul>
<li>重启服务：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">systemctl restart prometheus<br></code></pre></td></tr></table></figure>

<ul>
<li>grafana导入画好的dashboard：</li>
</ul>
<p>Grafana ID: 2322</p>
<p><a href="https://oss.iuskye.com/article/2021-03-30/grafana-es-dash.png"><img src="/../images/grafana-es-dash.png" alt="img"></a></p>
<h3 id="4-5-监控Rabbitmq-rabbitmq-exporter"><a href="#4-5-监控Rabbitmq-rabbitmq-exporter" class="headerlink" title="4.5 监控Rabbitmq(rabbitmq_exporter)"></a>4.5 监控Rabbitmq(rabbitmq_exporter)</h3><ul>
<li>下载地址：</li>
</ul>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/kbudde/</span>rabbitmq_exporter<span class="hljs-regexp">/releases/</span>download<span class="hljs-regexp">/v1.0.0-RC8/</span>rabbitmq_exporter-<span class="hljs-number">1.0</span>.<span class="hljs-number">0</span>-RC8.linux-amd64.tar.gz<br></code></pre></td></tr></table></figure>

<ul>
<li>安装rabbitmq_exporter：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p /opt<br>tar zxf rabbitmq_exporter-1.0.0-RC8.linux-amd64.tar.gz -C /opt<br><span class="hljs-built_in">mv</span> /opt/rabbitmq_exporter-1.0.0-RC8.linux-amd64 /opt/rabbitmq_exporter<br></code></pre></td></tr></table></figure>

<ul>
<li>配置开机自启动并启动服务：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">vim /usr/lib/systemd/system/rabbitmq_exporter.service<br>[Unit]<br>Description=rabbitmq_exporter service<br> <br>[Service]<br>User=root<br>ExecStart=/opt/rabbitmq_exporter/rabbitmq_exporter -config-file /opt/rabbitmq_exporter/config.json<br> <br>TimeoutStopSec=10<br>Restart=on-failure<br>RestartSec=5<br> <br>[Install]<br>WantedBy=multi-user.target<br>vim /opt/rabbitmq_exporter/config.json<br> <br>&#123;<br>    <span class="hljs-string">&quot;rabbit_url&quot;</span>: <span class="hljs-string">&quot;http://127.0.0.1:15672&quot;</span>,<br>    <span class="hljs-string">&quot;rabbit_user&quot;</span>: <span class="hljs-string">&quot;rabbitadmin&quot;</span>,<br>    <span class="hljs-string">&quot;rabbit_pass&quot;</span>: <span class="hljs-string">&quot;123456&quot;</span>,<br>    <span class="hljs-string">&quot;publish_port&quot;</span>: <span class="hljs-string">&quot;9119&quot;</span>,<br>    <span class="hljs-string">&quot;publish_addr&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>    <span class="hljs-string">&quot;output_format&quot;</span>: <span class="hljs-string">&quot;TTY&quot;</span>,<br>    <span class="hljs-string">&quot;ca_file&quot;</span>: <span class="hljs-string">&quot;ca.pem&quot;</span>,<br>    <span class="hljs-string">&quot;cert_file&quot;</span>: <span class="hljs-string">&quot;client-cert.pem&quot;</span>,<br>    <span class="hljs-string">&quot;key_file&quot;</span>: <span class="hljs-string">&quot;client-key.pem&quot;</span>,<br>    <span class="hljs-string">&quot;insecure_skip_verify&quot;</span>: <span class="hljs-literal">false</span>,<br>    <span class="hljs-string">&quot;exlude_metrics&quot;</span>: [],<br>    <span class="hljs-string">&quot;include_queues&quot;</span>: <span class="hljs-string">&quot;.*&quot;</span>,<br>    <span class="hljs-string">&quot;skip_queues&quot;</span>: <span class="hljs-string">&quot;^$&quot;</span>,<br>    <span class="hljs-string">&quot;skip_vhost&quot;</span>: <span class="hljs-string">&quot;^$&quot;</span>,<br>    <span class="hljs-string">&quot;include_vhost&quot;</span>: <span class="hljs-string">&quot;.*&quot;</span>,<br>    <span class="hljs-string">&quot;rabbit_capabilities&quot;</span>: <span class="hljs-string">&quot;no_sort,bert&quot;</span>,<br>    <span class="hljs-string">&quot;enabled_exporters&quot;</span>: [<br>            <span class="hljs-string">&quot;exchange&quot;</span>,<br>            <span class="hljs-string">&quot;node&quot;</span>,<br>            <span class="hljs-string">&quot;overview&quot;</span>,<br>            <span class="hljs-string">&quot;queue&quot;</span><br>    ],<br>    <span class="hljs-string">&quot;timeout&quot;</span>: 30,<br>    <span class="hljs-string">&quot;max_queues&quot;</span>: 0<br>&#125;<br>vim /usr/lib/systemd/system/rabbitmq_exporter.service<br>systemctl daemon-reload<br>systemctl <span class="hljs-built_in">enable</span> rabbitmq_exporter<br>systemctl start rabbitmq_exporter<br>systemctl status rabbitmq_exporter<br></code></pre></td></tr></table></figure>

<ul>
<li>prometheus配置文件中加入rabbitmq监控并重启：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">vim /opt/prometheus/prometheus.yml<br>  - job_name: <span class="hljs-string">&#x27;rabbitmq-node&#x27;</span><br>    static_configs:<br>    - targets: [<span class="hljs-string">&#x27;192.168.0.116:9119&#x27;</span>]<br>      labels:<br>        instance: rabbitmq-node1<br></code></pre></td></tr></table></figure>

<ul>
<li>这里提供一段通过公网https协议进行监控的配置项：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">- job_name: <span class="hljs-string">&#x27;rabbitmq-node&#x27;</span><br>  static_configs:<br>  - targets: [<span class="hljs-string">&#x27;mmbapoc.zhizhangyi.com:9070&#x27;</span>]<br>    labels:<br>      instance: rabbitmq-node1<br>  scheme: https<br>  metrics_path: /rabbitmq/node1<br></code></pre></td></tr></table></figure>

<p>解释一下：scheme指定pull数据的协议为https，metrics_path指定Exporter机器上Nginx反向代理匹配路径，见下文。</p>
<ul>
<li>Nginx反向代理配置：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">location /rabbitmq/node1 &#123;<br>    proxy_pass   http://127.0.0.1:9119/metrics;<br>    proxy_set_header Host <span class="hljs-variable">$http_host</span>;<br>    proxy_set_header X-Real-IP <span class="hljs-variable">$remote_addr</span>;<br>    proxy_set_header X-Forwarded-For <span class="hljs-variable">$proxy_add_x_forwarded_for</span>;<br>    proxy_set_header X-Forwarded-Proto <span class="hljs-variable">$scheme</span>;<br>&#125;<br></code></pre></td></tr></table></figure>

<p>解释一下，该Nginx部署在内网中，Prometheus通过公网请求Nginx，然后由Nginx反向代理到Exporter服务器。</p>
<ul>
<li>重启服务：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">systemctl restart prometheus<br></code></pre></td></tr></table></figure>

<ul>
<li>grafana导入画好的dashboard：</li>
</ul>
<p>Grafana ID: 10120</p>
<p><a href="https://cdn.iuskye.com/article/2021-03-30/grafana-mq-dash1.png"><img src="/../images/grafana-mq-dash1.png" alt="img"></a></p>
<p><a href="https://cdn.iuskye.com/article/2021-03-30/grafana-mq-dash2.png"><img src="/../images/grafana-mq-dash2.png" alt="img"></a></p>
<h3 id="4-6-监控JMX-jmx-exporter"><a href="#4-6-监控JMX-jmx-exporter" class="headerlink" title="4.6 监控JMX(jmx_exporter)"></a>4.6 监控JMX(jmx_exporter)</h3><p>以下配置与业务联系紧密，不具有广泛参考性！</p>
<p><a href="https://github.com/prometheus/jmx_exporter">源码地址</a> | <a href="https://oss.iuskye.com/article/2021-03-31/jmx_prometheus_javaagent-0.15.0.jar">编译后下载地址</a></p>
<p>将上述jar文件上传至项目目录下，我们以 <code>mmba-service</code> 为例，将jar包存放在 <code>mmba-service/classes/jmx_prometheus_javaagent-0.15.0.jar</code>。</p>
<p>修改 <code>mmba-service</code> 服务的启动参数：</p>
<ul>
<li>原来：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">nohup</span> java -Dconfig.cluster=<span class="hljs-variable">$&#123;ZOOKEEPER_URL&#125;</span> -Xmx1G -Xms1G -classpath \<br>        ./:../lib/* com.uusafe.analyze.mmba.service.App &gt;/dev/null 2&gt;&amp;1 &amp;<br></code></pre></td></tr></table></figure>

<ul>
<li>修改后：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">nohup</span> java -javaagent:./jmx_prometheus_javaagent-0.15.0.jar=9501:./config_jmx.yml \<br>    -Dcom.sun.management.jmxremote.ssl=<span class="hljs-literal">false</span> \<br>    -Dcom.sun.management.jmxremote.authenticate=<span class="hljs-literal">false</span> \<br>    -Dcom.sun.management.jmxremote.port=5555 \<br>    -Dconfig.cluster=<span class="hljs-variable">$&#123;ZOOKEEPER_URL&#125;</span> \<br>    -Xmx1G -Xms1G \<br>    -classpath ./:../lib/* com.uusafe.analyze.mmba.service.App &gt;/dev/null 2&gt;&amp;1 &amp;<br></code></pre></td></tr></table></figure>

<p>主要区别是：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">-javaagent:./jmx_prometheus_javaagent-0.15.0.jar=9501:./config_jmx.yml \<br>    -Dcom.sun.management.jmxremote.ssl=<span class="hljs-literal">false</span> \<br>    -Dcom.sun.management.jmxremote.authenticate=<span class="hljs-literal">false</span> \<br>    -Dcom.sun.management.jmxremote.port=5555 \<br></code></pre></td></tr></table></figure>

<p><code>config_jmx.yml</code> 配置文件内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">---<br>startDelaySeconds: 0<br>hostPort: 127.0.0.1:5555<br>ssl: <span class="hljs-literal">false</span><br>lowercaseOutputName: <span class="hljs-literal">false</span><br>lowercaseOutputLabelNames: <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure>

<p>注意端口要一致，启动服务Java服务。</p>
<p>配置Nginx代理：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">location /java/mmba/service &#123;<br>    proxy_pass   http://127.0.0.1:9501/metrics;<br>      proxy_set_header Host <span class="hljs-variable">$http_host</span>;<br>      proxy_set_header X-Real-IP <span class="hljs-variable">$remote_addr</span>;<br>      proxy_set_header X-Forwarded-For <span class="hljs-variable">$proxy_add_x_forwarded_for</span>;<br>      proxy_set_header X-Forwarded-Proto <span class="hljs-variable">$scheme</span>;<br>&#125;<br></code></pre></td></tr></table></figure>

<p>这个路径是自定义的路径，要与下文中 <code>prometheus</code> 的配置文件中 <code>metrics_path</code> 值匹配。</p>
<p>重载Nginx：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">/opt/nginx/sbin/nginx -s reload<br></code></pre></td></tr></table></figure>

<p>修改 <code>prometheus</code> 配置文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">sudo vim prometheus.yml<br>  - job_name: <span class="hljs-string">&#x27;mmba-service&#x27;</span><br>    static_configs:<br>    - targets: [<span class="hljs-string">&#x27;mmba116.test.com:9070&#x27;</span>]<br>      labels:<br>        instance: mmba-service<br>    scheme: https<br>    metrics_path: /java/mmba/service<br></code></pre></td></tr></table></figure>

<p>重启 <code>prometheus</code> 服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">sudo systemctl restart prometheus<br></code></pre></td></tr></table></figure>

<p>登录grafana面板配置 <code>dashboard</code>：</p>
<p>导入模板那里输入 <code>grafana id</code> 为 <code>10519</code> 。</p>
<p>示例截图：</p>
<p><a href="https://oss.iuskye.com/article/2021-03-31/jmx-dash.png"><img src="/../images/jmx-dash.png" alt="img"></a></p>
<h2 id="5-常用网站"><a href="#5-常用网站" class="headerlink" title="5 常用网站"></a>5 常用网站</h2><ul>
<li>prometheus download: <code>https://prometheus.io/download/</code></li>
<li>prometheus exporter: <code>https://prometheus.io/docs/instrumenting/exporters/</code></li>
<li>grafana dashboard: <code>https://grafana.com/dashboards</code></li>
<li>grafana plugins: <code>https://grafana.com/plugins</code></li>
</ul>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>redhat certificate rhce 2021</title>
    <url>/2023/01/29-redhat-rhce/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="dfccd00609e8a4acdde00540142640ddfc7332f1fc994d1aab85c06524c7618c">52e655b51742b1dd46867bef910a97b2db9ba6092c6bfdeda662da662da9e5a961fc0a4b9e620b460ad1cf485dd1d3abda4e28cfa94781494b861f785f328adc0ecce698cc9a2c28255abc6aa8c373634f3da5f24680836182d725fa90f28c60a42c1d6255174bd75bd3360182b20d07e14f97f0bb7f6774e1d886e70ae00fde17b53801d7ae01e3115529677de5b40ff0e823de7147d581deb04cec4eda69a21af016324d5d57849299d7b1da19b3b6961837a23422c1e6b9ecd06e7fdc6eb38814906e62fc48ff76c117b9bc047f52660b7a748daca1cf479c9b8135ce6164c5cac818e1948c92a07e215b35c33bd87499f046495cfca051d574438ee80fa7d6d37c1403c2a8d91d34dbecdffbf74565dd4565bfd03f632c831d4273ab4089e46393c8f0358c2f04fcc0f07562948c5c233e0053e0c47a3fcb4fb9f9ef9b3606360a347e7e5d6dc02800632cd6f186ce190d457a27e413c6115159c4d8fcb7d6a6061af945b25acd384f308a687528ac909b0dea5c4bddf1ff63dcceb65b6a009baaad9a13024707c97f27477e2d71bea8fcc77fe3a4b671d2c62c96ce3c02dd81ded305e32140ea99beb1c67177c8b96aa5affcf0d1c211685e255335ea520b278b60d7d8ff2d857288557c62dc2938e1fbc0dd7d1c17c0c3436c19c4497b9d94d858ca402a662a7661b2e49b526cdaea3e65c3dc45c8e4a27a534d717926fb89e0d59e34e7d47445e4e16f22da3a0815ec7be6235b7a72a80d3455b3e750204b7a70a0c71a82e44e6e6caeede064374f198b6c2606e57927828f26c5b5c50bed141da87ac232247c1774f33d6992a6efafd9e10c6dcc043da08e2dac66137243f9496d0eb7ea4dde58295635a2087c280f41d26794855217f5b444d103bcf733a9ad33428e67db86e099990baaa54895cc1dd919b446fcd9f96494bb4c17a9da5dd05a50ce313335252a8fd22f0d18e4cbcd2a444821acb69c3be2932f5cb52ac5d75e59a001c0464b063c8ea6493bab216998740eadd605e23372bca928725e127cac19ec75edc293dfcb7cc4710e7b031098379162b29bf90780f9e4a8dd3758b402069d3b016344d32d7020aec9c65a7dd827a7707ef313f25d5168e0b093f186afe0891caaf1babad7010b71030d693ef5c33e6ec434d6a11330d1600c75b11716d41101e0d948c0f499f9caffe3af2e0c45536dedf6f2b53b0e8de5fe4bd20c89da66c953e94c06e8026f6ca0e241eedb061cafe02ec28f34affefd3a9881b322ce0e6dbcc9dd7d0a38efb10f136533b0300829ad2b0f7a295b5e74b5a279d89a2f950fe24507533493e7ca00ee3d3699e6e217f935a02382f0c035ae1f8a7c9ef7fe0895a64f52d75f210cff81b0869fba44eb97b31faa45e8c7d40ac975ebc5d1735c045088e859423b8d24e543ff44f64a94799821d83cdb6324b16666b518acf1e81f599fc1f0c378db9f3a64829856e0584e4828d5b75a57e5c5b68aca86fddd15d1af2c125321edd3e60d00676d71dddd4a2baa417184e482e7c8d19d542f06a40c50fa7fed7a80a6cf97b68a77729553fe501db3ca9944f0068029a4e90d03dce0ea7b1fc65466807c023e96bce32464f4be5cc68fc781fc016648d3f911ed2be98607ba569396d7fb9aad762e7a971f48d6978e217c3fe7619bf34d3f686544180b517c697d9ad7a743c8362d37d432e1ccef8a94c33dbcadb107b2b64349889c52acc2aa021b18b83c90a6a6ae16e39d686f73672a69d20080bc2cf422ca96a02705fe24226487a34dce0cfc20b1eb44daa15b7f839f10b99856bedad6b68590fb87deb6eb2ddfd87257345ac0082245f1a82504a4ba215442f39371b1b83db391c089d80c8a2ef7fe23b80a1c26748e1dcb9514a4c2c78cb5c7a0e5ce57642caf3ff6856c17298ee8c3017a7e001dc6bab3c110d8334c780a1891291ba6df0cadd4b8be906af92dc8f69b195075e55d3d046360579d6f2c9e7f3f7bd614ec53074e0011894cb5aa9eb50c30812c57b069cec3c470470fd25d93df39d4e2cf2155e8b8930a089b8b5af75bbf98f92cbce4193842b33f4a32d1389784f2d06e7a553818fc58c0e7a978adfb0651fc19c79fde6409e2131eedd7698ca4b65b6fdaf77aa8c0bf007049da835ebd988ead3939b349a22948b2618b443795c7702146bf0383c4bf887e1b1552fd13e8b83898e64ccee012b4865287e32cea2c49ec5cafcc7aa5d58323fb0409836dac470d302052c46208e1aa19c064b891f2f7375b45dbe3a7dc08b2eaec1e4d2377057325abac796a0620aa4dd29c6a9c25f02edde1eef05c0edf740ae3fd1b77a442e69aeb3bb5563a3af2a8f520d129429eac8789ebc1be1a807e1f849703398491e683502e8289b793e3f9457e1dc4c47f4e0df9c0187d97654b4d0303f00c52871c97de972cc4c6ccd399a7380f0801e7c8dfc56e3d0ffe0976d743096cee65a03011a90ba82f5d1a909804eba5b0ec0b5bcffb6c3cce67cea01261d9e8c9703c9aadce3f6757d8ccce80a15b5167a8a187893bd56751352e98719394e4652467604dcf4d8dccce8e7a925a57682e6fe0a5c95917f8d7e299d8e9102632acfe32bc38760b582801c6ee508a052aaf709cd4d1b23056851bf61de610878ce18f57c3647fd29ae0f0562d7eaefac0d81aa42f2d376d18378308046f8ef3a09b229b6e999f2acf7113a3dfef7a922b9ec63d27637a0523759925155da2d750a778a09f46c892665f51cbc391e26ed53a38274fee8985de5e171eb128e687baafa39a1992cc6265e1adfe076a5835d5310b5907a55995ea902ee11840e43d24f194920783dd9f99531a2300a51992cdabbdd13378b1d9a3246c24fb725e3e10bcb3195fe7d1456d5275d218ecbe34c46e2a1bf8350c0442f462d4468101fb17b8ea26174edeb40386560ad5ed20c2d4c9be8746efac1b5c6202b46da36ac8be81c24f0261c5a63b0886ca034f4bb1481303c93f1d1e25f81209766504c25ca0323aac30da375f10d26bf16a9f95e4b6b78319e08fb1eb50ab77a45289476a4230a917bd5b58c032f359b78c56ef5200411671d0e3a3660a77c119cb60839d9fd6604b9f2b2f0d6f67d15c36eafbd3e4525290b8715bc95b32928abdbeb425720537204f74eb73d0cd2c505aca1856968eae21e7f940877c541c0659ed2b4b4771f50dbeb51b65fab2e43c04a2dc2694ff7e173a128759d5e366206368ec6b7e3e81e8963da19441db0cce0ddb7401ac4288da8b3f5975ed596a92792af97fc0bf4aef3f127ee8f919dcd32e53a0f5aa30c9f5cf409bc9ef929c65cdf2680399b75a5f7237637b5e05b83fb571b627aa580576e601e132acc587a479c3cfd4d4afb7fdca11402064ca921b0685f196d2a968df3bc47f2a33369c3b644d8006ad1b4b7875e56304eec32abdd88af1d79d91869f136db4653e7d726ea1ed5a5049ca2dbbaf8df8115b1406d91adff2c80f016fd210f5b8abe96c458b85ddf1196a92b739da797a420bb87745092fc7e6c5a17e7650a4277db7bd32dd9f3554dd5827a1099ed8b381d857c530a012b7af14ddb1102923e24bc4003a6eb5d90f5bae53d3799ea7137d296342751c195bc137fedaad0404a3734b1b741d7b7256ddafd54463797722ac405f35e0537baddcd875339ad686805c46abc5e6af7a1078da06cf6a50347443037fa17658b67b8ce51037f17be228ad31e9f99492de4e4a3c3f3549b39c81129576261c3e893eb2a1d15004ac181839d34ed79b6e0ea78dba0cb548af8446527b28ae16d454ce403f514917006d2fc63cb448f002ddd1a7556b8c480dc419d1c15e666b1e53f3db4fe88e9b9f3ed837134c0ff37afdfb23a6eeb0d0cf5faa38806f3bdb64a2b19d22efa18a90f2eadfd8c48078079c8cbf55bcbe4fb4238b510e95faeed1928abffc0546aebc63ba4282812ff85cf9f1f41603eb2e243b1f1e24d6beed204d5c03cfeef846e01105c6d6f9e3b4aa5d138462da60dece04cdf67e72a55ad9aff7c4044fea392e34a7c374fbc628f45cb56a374c17fe5097f441669d72b14ddea948a5e3fa5f77d52e5fd349dbc0cb34bc2055ea2c5da28d93eaf2e5c1346b9486b99101068a58bb9c4d0e4bb1ac5503d6aa51073240a716be07d9d607a605d5b7a39bf58b9ed34d86d6c806e7515b29fd2c59fcb7cb15510bdeba2e7e7cddcb4470fea3307225508c4210654bfd8beee118d6a5e166207f9a9918147bc5a40eaa49c4c529009888d9d35292b6f6af630d8cd3238936380b7dd453b202421256584b593f7b0a6cd5fa732980123b68aceed15ee0842e9d300d66e6c89598041aa463741818d5d21035f86608a71b3960b88a31ac9019673084442eeab617dbb96177b8de1b60155acc85c5f8ced5f411cfd669abecb523d0cf5767d10e98c293d1dcaf9d64a27a99fb57acfa863009ce7f504ea0602d30297c84712a5ac2accd1488a853c82106c4ca8ca8c2d1cb319dd885ba02dbaa72f0ffe4e28ed9f17935dbbb725ff058a6d97d09045aae5cc3482fc218deb2ea35000350a5c813397b8807c955f00cbb7ba6d885385c11c8b268f32979bc7ff666485d23c4d183fca8a96190c09dafa01d78b214749c85f3d36edf9036872757ce7bbeeacb7a924695b8f18ebf0054ad30ebcdf6f4874a947355d5fddb7999ce8ba47db4ce196e5825e24eb9ad51e74dc880568702a4c2e2a5fa5fb102a89853ccb4331355fe7f52add095636dbbfeb2494437091b2a245ebed631e3f8e22277cdc6947fb764b3275fc5e20aac9008b7662fb311acccb5288d9cf3178726705a8dfef7a6666bfa17f3b050878cc7e2f881d2b6a01c9019f79f11e5681c80f499ef198c1af1b59813f71ec3ba9ee36d58d2fe4119d8e983d416f17357548c258deb13c104659a387493d5007b1db94863b1a8735226bb5f66d1379473675d2158b5bae785692218c0da7beb0202059068e624be82495112a65f02ebdb4b1060f8b961e2ac037352a40709fec477e15f13eb815b36300489c9e201cf5b7744167598fa03086d4fe418a9148a92f899e8eec7f362fc7c40373d15bef3496199af09b59c9a33c74836d021f969b9259f55d7dc75e64c063d180f815884054fb91ca8090d789c375923b02521f8d52eac9311b86c466a46e899e2a71904766aae927a7fa8eaa2e3a99198e5a6d49596be2d7b33af3a1d64a6d4a95b825135ecc5b205ce1f728cd8ecd040f88fa8d863619ff536d8dd9b4ec1f069e6a61289338f204da3631d82eb16cd8129fb8c00aa19159eacdcce164083ccc40940549a5e85085aa5eef98670069bd2d7f378e1736fa91ae90e81ab2a317d47931af3130b9fab3ad4e35acd26554f6ca3d01bba3d9b8e32e13c39382c1fc4fee768b60515b93cc063f5b8bbbce5304f899c23e363c050b4203ca9c1f86c47e3decc44d9f3cadbaddd38b09b512762940d4d8ce984ffcd7483d151c4b6733845cc2c937b3ff106c142449ff8529c2df7c0a0937209b4184e293f3cde530fd71628ab3c3b27c615a9d3f2ff617dbcc64e27a3dc9b36ae457c4f747bbdf18d3983549a2e0bf5bf6f0ccd540a6807f224c5caf018cba60c19c92431d1a4cf3f58a8af434afd3678848c83e83504ca3e0fe33ec8866dee3f540652a42bdb407173e3e583b745056ac8b6d29bc478d76fb35536523a281822766839724e23721cdc2f752e531c20d462095ddc84f5aa91505899056749d72757c65bcfcaa5e51f959f61b3bc6d50e0ad134935cd1b9e10c3bf385d3cc1fb8864e0383c4b171a05f7f15aa4b9cde558f91937b671d3dad54ca735c8aef77a92b0cebd5d27804bbda27fb04427f4b24a57c0dc2f21d7b96322503fb7c2ec525c7e2fb8022c1ea8324ffed3a38e1b9213a82899d11e3f515d70cfadcd9bc01e16ebd98142d94c6999588dbdc04312068ec4c4ffd9c96aaf478c87791a0c08d29b8820a7d92348bdd4968b567878bd760d96a0c3ceacc5517f2b2c9cf136b513037aa33c60c7a7afd096367fbdc0b4824249f49b57653a5e0c85c6cefaa65b8a36da0a748b8ae4a51cdf81714f0b0232ff81d399667ffcd81d244532cb49b6d21ebb2f645e0f345826fbaaba335c723961595b5fbd62f4f475c5bb1c8b54493957ea4164abb6710a8781ae1890254459fc7c76eedb621169b2980add2dba752af76962dc72089223f425ab22248cca89fdff3c27ebf0379c6e9e616a851e9da58e432ea00e4f63436c972125b9c2a42be6fc480e1acbce138f52940743cafd8db85997f4754ec894ef32a1d5a407090005b1dfeb160c13641e028975c3febf3a3a2ef408260c0166d4c8f561bb4c0df40f0628a1aea4dff6c19f589f5fc946656125f5e3cc8dca4e71e015d50d725103112d12f3e597cb7078cd10605cd14ca7381d5f750acaf31d39871cd58ca040db8c6c362f90238bf46885f753d243c5661a8161af31c222e0daed20c77feb1f7f4341d72af10e57e7dc91e432de0a9545e17f2e242434773a7b82b5bfd2ff59ce3dbc648d3b8c38b6dc462c65fdde4c8bdeb19d15ab6fda2087534f3f1529ac19384f6cad1d9ecd487d1f0516d2344bb6b2f24e7b4223d0d7d9761246c93a34a4f6d46eac321f5d390bc154c4032619572a17b5acfefc04afb2ebb524f933b9331b7f04bc7a0890bdaf132f83047a7d8e1e03d475eba4f2553235d3eb20c8ca70ff4982435afe20244266838a39a313fe930575e38639c8386cc0377d0f6b7753f8bc0d9045a5d8623218534dd9cf68313d5178fd22333b045868623de14a7e2e08565b717e6241ba6ed6d106ce549031d95b29e367184e507fc48650acf7f23d8fd18a2171d8788ceb2476f038892d2741c0ae18a81292a857b77874d101eaf0d0a835808b5bfe92e8624162dff5d17f41ab228013fca9883f5e81c36a55a630bdac36f03210c24b5e5fbbfe47660247a7573e9fbc94540043fdc2500e5a60749f450c14bff81ccf470d32a5e31e0432d81541ab2e7bf4ad94a8aa7eb77ec2c2b7c889bbc90c4b73e9851e6b959ceeb364c453224a19b67c84698d88e224c4be291880c24e35e4e73278ddb2aff95708c001ac9d41acb233ebd66e615574d62c2eda989e20bcc787fda210bdfa47de20d72b16a74a89713ac2b7c703723ba70497a619b34a8036531167eadbc195a0afbb37c4dd17acd4194425c402edb116c19077f156a5290892305c41435dd5076577fb14d593032e0642e0d9805cbfe2bdfe7ddff3da72181d656bcbd6d4b30d0b548c9100309f7366ae2bf9dbc6cb790cbbf19b523e21b82eb2c768ffa545382b597153302178b2359a7a5b43af57f3fe16536fb5b23f875c8db491eb8b09023284c43889ca5167238830252f4b929453a81a983dfa5df92e1fb12e3527c5cabdf9f8f773274e1a3feff686a73bbdb265c7c23942909e58d1b5bb5d9a2653c6d2a1027328309b899f316464d02d3ad3edc3f233dd200b5dfa150ba2c91fd0469c4f7e4d1fbea1dbf3a4a6aa2f43176cef689ef99145bb4e457053bab8deb73b6ddedae97655943d7c8f6efc19d2453729df414eab7c0302aa2f2d997a45320ced2949ecfa8db0232841dced6976f64c457d0da4e876a14fbcd87b628c63ee827dd8763fea84ad967a1ebd96497e74fa3adf691da36bf067ad4c3efb28e4a59f6e7d1ab0fe15c450dd08433e37cf25398b8bc2f61a2115454dc8aa049a11f1d0197ed8cf60a0f0f8a3815ebeec2853d76f1b0f4f70c870fee6f83864c507a7de7f9ac4b94015045b25efa8b7364ba182f8b08ba5391799dda4ffd444959bc2d22e2c65597d7e4109271fe3c1d4948e7d1eedaf159838e3619c6804e6a5d89b1ec8daf253e861abb2d5a52aeb77780763c1ecbb03db37312307f03cf8523a932f4b3348a9adbbee2ae4023ded7dc0e055c52540a84d23940c9f989dcaf329fd50a4abc3295d03454f972b78f2c11951dc2866e5affe5e1b6e2dd2a1b340b68397b030cc88fdfe7829821bd67d7e2648a2bac87917c9e293dceba577121c9fc90aa70a95fcbf209d713382e2d2cafc65823c19dafe49053d94a31209d031286a791476f614c30bf71dd504d72d0c5c85a3b1c00c87df5ebeacd12f3279e85cb08ccdb3f1e458e7277bd612aaa2147e53eb218b93ae9c1256014aa9a8fb7758fa3d926505149f9b918bf1a3c39b20da6250900514c679a2b228d0cb8740250026e5eae375f600d1ff6bc7ff2b654e1acfd8ed7b7fcbe7ad75daec1539d105eff803f66238d74e5d694d19fb6d8984dc88dc254639ae6df9500d074171731893c7e49fa857e3e9ec034affad09feaabe349f5d6c2de849a4c885b1dae6a427f129e87ff55b4307ef4e19d94260af1fde439ef89a7e9d7f5c22e11d4536ca27218313d8e9e10a58ac993381363476e00f31aeeb8956043b64ed7a45b94a8ed7f76b28dbea90e6a1bf671ef0916134e322d57f5fa159f57b3afeaccc690ebe904f1b8c624a18716b5d6eab46e552a095d77bd202efa1d47e7a06482c3b7dbaaa5f0cd647ef7ff9eb4471261d1ad00fa10f9594e6945cc5f7856819150442cf26f72d8f35fc662f9fb0577f066d01de929b8f4d1518e8ef698d2c0668bb10223b6719f4dbe4f94150cfacda7718f5d34e998778f90a430ac14ba50cb41c7e25d01dc200aed653f989ad69bce7d21792c66cd4d82f424b439d45572a54d6e2e52edee99996591b054f6401f50d92a6d328242edc09ca8bf5c9e7186a2b59ad00e394d71104b98c4a33b19a667f6de92f7346fe98c83d0f84e6b39465f65fbd0bdb8b2dae46a480b5e60e3d54b314762d20aed293c6176ee49d9020237dc8df503dcfab42741d8b32093d978d990eda683e92790a673d317b899d5aca9abfb9b874dbe7bab6f91ec4964e7ff960a29d2f89348eb08acd6f67d019355ff1cc7a9b470c2e488da940d500444e7d517081c0d7bd56f1934cb5dab67b13a23eb243ce35042dfc115a2087ed0c848ca41eedb36ef9d014c4243639740da407399beed2ed5514e3e28d09070ada7f2fe1679324cf0818a3ee541b1bcaedd4b4525ab4ecd66c490c197d7e77d6eb51ede88728547eff612b050b3e57dea2f5c8d928b01d568f3c13f8031d66d0f7f16112a3a35c260433fe0ea097c5b47d1311500f81f4fc75b52d9a7b49f335037b0f2780661910d70f4b4d2fd21472273e820e971ef97320aa81242e73170d941b31f48189c743a7d7a734d996a0a059a9c60487f66fc5dc12248f5a9726fd3ff4942797dea3fcad99c58e35839e19c179f8a1618fb2dab4dd3ef055a9fc9a9a71f25aa429c5e081dc8f8ad996cdfd3615f2888ee8d56896a873671d4d153963af299c9be4aa0dd18465dd219ad9fa4e4351d34ef1cdfe3f934c8690ad55d5cd10573da75c3a93062565526abaff91858f685bd80736381d731508688cc7ad1569ca7e0850036218982cd644e0c38a1b601cd85c7506bbe163129e3de40be3de1536d6519bf1b0020299e278cf3e8573978ba3869f1596a2067a06453cdd6e67853303452c565f2e5b9a7b86a1cee37fbf7e9af32bf66bd563aec713afa0ce70feff4e5c63ed629eb8c47fd17b41ca1b020fefda3b578e602ca9958b7ae27a0f7057c4f09032bcccd20ccd6d3d89da5ca21956119479ff61ea0c61e286540c0464f7316a611a193cb8f3db8986d1643d50c9daad3744cdcf9e68162467db89b903b6af23c87f1bf451ece0369eda9e501cf7c2d03f471729a6b574d3fdbdc3447b6d3b86528c5ba6a855dca38862d42511353cd21ae55dd1274fb8c5b73f23dcbc1cd1ebc9b125646b80492f11fa86688f540f5ab7b5a90461b6e406a9a17d138c9af5a6ce5ff1958eefab7f67ccf5a8842a97b53594858369efe3094aeda258020c3f5dfdf709648e540accd585cb8dcd28bcce5dde6ec288c705449eba676acc1282de0181cf777076bed4594e52ded65eb79142f818897951bd83878211d635d2ce3d215d9559c30685659198d7887e15bebf444ca5c61b9afe2068d88708fcd5c6ee6e695eb9fd6fa71cacfe51b6af5c6c7974a071bfdd8de3dac3b1beb2593167626b4fbcae5424ff32da273409c59fe64b2ff19f18237324ad70cbf1ae81e1ab165907ccf4ad36f17734b53a7caeee8b84bb1379e5a50574b44ff637dc292709f63816c0be5bed229fe62a4e0247c267e635a6a357d65b585be156b22e604ef668d14df0ccb3867292c0aaa538e503012304f5508e40e33071a014b8b9f479987cd3d343e5fc4421f2e96beaa972e74b102acbdca067d758e04ba7f943d8dbeb2724b5356924246130272653e43b76200ffbb402a6d00206eadc5691a8871fad405823150347c614e15c1560728fbefd27159f377763a672b5d22bfba355b2e9978de81a882bafabb817cbdb1ecf4722c97ba04a96952f5b8daea37d85bae5d5f14999654467bca7bc721c1a6b3a603f9924ba5a501aa106ee03c015d77ed0a1ccd143b012fef6ae437331995ba06df30a35cb7d237e58c8185399bffa4b05382104816accb5f50631f5b38f0de1fc3c8dec4d331e348ace20b81f588fb0eb3ec586ba173fa1047cae5a456477a84ad8a9161604167e96ba77073f1455474c11cfe49e81bebf23c029d0e11c771301581d46214336b3f4a98737a1c058f46c35a6b945029018a2502fe26bd773f25f0609537a316942da67ce5eac0579dd70d84d2af94d14ec2768663f540f20bd5ac7824d903aa4966d485054e8b5f75bee36ed90acc95b84d79f9422c1bf9964d9090c9aebdf8a15c39731a31e9523afc32814fd4ef155fb72d5b0a4c922b6621fbda2259c6ed1ffc04bb9a5149ecbc99009ab725713729ca890092eae9f140ab4ea14f6c44f476fe14bb0c0aee2ba2faabf3db96a1b9d8ded1ae39a4a248790a1eb0937f3482bbc82044d5d96411d46897917638ba55dd1605f2bb076332f1520177079b8623f896ce9f66aa4882024ba5d3de4d34d555d2c16ff552cf59fd5a895225ff476ca28a34658e08b48d1a6e1412b8edbc64df421fb0ca3bd357ad5e97c59d8a33008c6a7c761165f044ed6e9aecbf1ac233f818af061e8b512d580a893547da7f1be29b6f93cf23aadb2b2af6453cb6ec9ec43710cdeb80f1a164fb20dc99e59f61106d96a5783a9d27e76854be33432bf611b89726ac4f80ef02af077b6dfbc565bf8918c81888a8ec17043caafd8694fae057da0b4cb9756bdd809cbf3f34810d2ff857b4bbf0a2bd072db77e5a811b6f7d6c8afc753bf6453abf80d48004aa525564b86faa033799a60649b7778734a0dfadca7da098778a6df911b9317321a32eae236d125f98ee0bddde1b95735c81828a602f28d811a4001eb3918c1e25ba47d27babed74947286333d1a4a9fa83c7ce73ef35a06b270487e83bc4db619138c5804a2b19ec71bfdf3d603422e2fd6ea7785fe17c8b7127bd061cf94f5e8bcaaf3b6f6f52a0491d8ca83903f60142d934951c0fc2cadb98614c577fe6c5f22f0b5a0c23e41a6178bd79de4d955b44f951c38f43709293f88d8d9d8e0992a6a7831b508454437708c34a3de012672adce68306a34d3ecb73c2ff740ed21d7596b2a34a37bf0e315a56d0de6fd8cca41f11fb6d582cbcf213758e910965f4ba6c4aacd6da822b1c79531b138b8409c16c3f6055966c2f3b0a74de97d261cd189c8f2d731b876f6d33bf279510b6392775dbe309cbc54b23af1da2cc499eba309159bc046865416573e38a30c04d5766a978af07cf600057912e81205f43edb83e3c5cb1a659fe06af4a604f241c287f9b67a3379348c17411ba743e5f5a56f608b75107a98cbc0a727077142a0fb164509b27686bc0694bba4c8f8b8843471e3578ba052222111d35c9c476ddf69c0a7e36acf18bc1dd849f6414d2ce7543a31531fb14c17a72767a84ff200d5a855c22f1495c01ad6bb315ac3b5607198b0666b2c44427fa88e4f18742cc2923817397bc63bb79ad5561ed7914eb59a0c92dd87518d2c95c2f751d27bf2c67a30f7afe1c4c488c3a15ec472efffff457d1ca0dbeaa82aa8dd9a49bc78426b7e0f2fd90018be9c56c71ca043a80a0c8417a467014bc264876c0edec0cf7beef61ed105002518ddb3650b1f9666b305ee8db0235c19381c6748dd8eafe0733a64f2ce65315778791d51fe4366a2ddc2f559a2d961602eb3f0bb879cb9dd682d971dba48e89abf10b93f7ac63207721d9b0ee31ad979ab57e5c36ba623811126e79d8b2a3aa5828bf64135f5fd9a7c0952050d29aaf406cac8f5fca82452abf025d4ec3c66ff78a8b160115342238ba41dcc4a14379d927adf37c446f7fdb4a12c3ede5964c8fd6006aaf4d84c93e647813441aec3f21fdac0ee33afe060c59e2fe24d18749cf02c1a111f80cf5b8111b1123cdb8676b1193aba5a27efbac80d73098698832334c60474a94abbc61974df763b76ebc034b470f580f3514ec0a00f8812c530100694eb28a75689d3ee223a53605b9c55c0c9664815ed72b5fe42ba3c7e63ca41121a29af3981540468eaa2ca2a76bc2cd389877eaf35ab399a229d61ed6092358aac24a787e8599a1667b884e991a084bf8e74aba3531333aa85bf61dd277e7187eb330bef50e2bef8b668a0b7a38b1c389905b05cf8a18325ab4ea10e504b3952a65f25a79f28a8e73c1f3b6f2f02fbdbf95ca62400b36fc2f7cf1ef039baeb12e620a1f1ab75a94ed9dd028c69eaa7f126442f5c52b68273c4fa13ab5b1707400599979f6d00f78b16685f3f0a4c1c069dec05a54370de9d9f1831c6cf8540847f2fca87be83d67f3f967250e6ea29b794be1c40e7e2658c52099fd59ec766cf5dc558d828f6ecbd42820a32c96b97ddb6c7591353519b2dd03746e40612c2d4dac657790a2bf607de7760d50c695cdfefd44f8d384ea05777cd3e23fcf2ba998a73a018c1e94e2b99dc7b6ab1c6e8a381b34d31f961f829409ab34aba9c3a6df1924a8abeaf3c19bae5fd43b09cbb7c27573c4437c06fc71f96229e0bcfb13b34eae6140221acca81b85abc0000d25266f6877a01aa17f176658704e08452e06d678826956c0ccd562106bfc8e492aec2bb258e2908246dfbb147603a6041f614734640d686dfc5d765b6adc2d26c1f0900e7d87d9622d54ebbb507c151d7c62c45fadbeea33b05143442c8b31edd126b7a79524ded518aaff26a59e044a5352aa856be506849c91f803db85a342ac1c89a0c8af32c11476db2eb70cf34c8e9672105a61ee95810e5b9ac9086ca4dd8e398ff3a3486ff6b6c01ff3d3640b399777140599d06a443b24f23b447f906c2c089367202570e6532d6d21e1d0b929b18cdf8e7320e7ee557bf4dd5dc9b05779c07c2697e6402a7861c79985d2b54cbea0ea9817aec1db79ddf336788937fda8b55b9d9c450375cb1ffc3a3c34fd39fada8d171d5934ac52f3e4d20911465dd8a187ae095f599b722ff4f2550ae2204f2f31ef9345c4967b06681e34d237989f1827a38e8a637b9716361bfc7819c11649fac44bbc6fce2ec8695314af9b7b3347ba47224b1b6ee1170358589d636c82c856125cfdfc060803e61de40bbd4fe8af2de9a677438f5e72d32acd5dc53efcac346abbfc38e3b04cde0b36849fd29ad914ee34eee13da18bcbb68134b85ed77127c3245eae36b3c7ae57e011cdbf002613d140e6984456b2e0042cf6f54bbdc6676be98376bf0da56643078f55ba89a58777e8f96286a2b94618d66d7dc5ea7afee305305af30da8891979fb52825b3e895176476818c8fab9b72ca0c14cbf094a898cdf14943039766218692950e06f9b525f516609cd11d4df65a7717dbfc69934fd59f9df7d4117bc15d6c27d0972661aa0a4b3fc0353556ea29feddaab0456ae51538327517f6cc945c5e4b42d7ad85ffcfc74b10bb9e8302d8449cc7ee8ad544acf7dd0075ac8f0e961e4d55b909c33f444f79ff412d7053f60638e754925b31c98ab47f85f16f5b711a4684c559b198af22111680bad82594a66d7fd9def0dd00b12111ad91f65ad43ebfe54f6da52af937c58ecaaec7effdb2f7ff75b3356dbfca44b5d901a74da68c02d1b4f3753a6d37449b16fc2d3bc1c7851e6a8ce7a0eb8d3ed136d40882efe53ffaadad90122f01decef851cc1332c1a5dd1c602113552ec8d985313ab8259ede142e7306cc24d8835d20dbc1b6b685be45c63a24cc1b2f75660d14e757733a24abdae63fb55d6c6704098f7ce6ae66be618ee188993e11d1ec1480209ed2799cc481b39a326ffb7de522101e7a3636e3548082744e2402923ab000619235d41160198623ef680b2e2c14d92deafebc979d0184b5232a8c338b2363e77d22fca2f27c9e39d514c712530c6f9bd45a56f3430fe2102eafdf87195172516ce214500f15e72d2635d518862df40f5e1291ab1e0fa74fd6e49a7250879884cda58729cb8ce12377957b37f8acaa80b3b872e35dcd5f43c8432d8db0326e5b1dfbc27cbc231ae9459d4e2f4d983505348e3660f0061955a9ade15e7c167206bcef024ec01fd241cb340613b7942dd67e8b0b3ac80ff289a64ccdf31c416164f178a95c83a0b9683712c86ad2048820c360167532363c090a0965e3efea53547af7163f49510c9ed232697634da8c75c692f2d2e2aa3350145a354a3292e123f1f3e80e94d8562e26c5b1923d6f3c32c6908f7d4952bdc22f8528a470376cbf33234f33e99ac08df3a541cac576d985f9813d1fda7156676c2f54ef123c029c6aad2286e8259e98ceed8dfec2f0197b9b25e4378bc3f46cb0a8788a683c4a599a968dc34459fb445088f18603820e7cd34014dc08a4f8696f0525c3cdfd0f3386e0e2b69ccedf7129ea52a21b5b608231d15aeaf08f5396729ebb8d15cd66167e0a468832ca78f65b3de2f376e98e46387202de10fe64d93449c2c54b98f70ae5592b65e4e485e1966482d0722fc2225a78c470078da07dd822c48367a56bb900ffd4adb4b9f0e572054ec45b040f53108e4ff8c99af365a07bcaad5779c9c196ca8711a9c83597156ade6444244678de9532c4b5109c888b3f46de7b1309602c0ab94826d916e293f89eae253ec2f017c0050b1061875eda59b7c52f447e49035c9c32125499e6e551d02eb39fec44736dc6a287a46aa9c3e7d729ef6ed687e54f828c345e35d95316c718255b99db2b5f071ab6da1bb3faea3777af3fc093cc779d3f1c06cd2e37becfcfea11e0ced4605ff71256f98ab72904a6fcbb78eb031a3281356ad2b600e13af4cee182ada7d13c961f1d86451cb2482e02cd7dd7bfe868404ad1b1d78c47af2f417b74516482f48ca96f453d7cb764091c869737ea73db161462aede94fce64e37496f053126b343bc15b49f5a396374f8553f12e0c49c9e2cd1d5e871f4bd72e6e774cf29de35b55013405417ed0b9c3628f9958f7bffe21e26de8ba78ae469effc5bf4e21ce485ef5954273f0e1ed162dff490b5b0f6ddf3820cf58fc79865d18cb9e79dec1717b128db616f6828dbfcec0a5c1497685c1ca5c7daa85a064f2229973e12f4343a7b401438199d922fb30e144e1db1585f75d2c1a3f93da8d6990e9c7df9a0b9d5e18cbc834f1f8dd90b92a6b8a6d720ee5f1e1d9c6d073df51d7b9b9c8874c6dc2a148f52bade4a188d4c49513a11ad5ec48a7743555ac244bf2a9046e371967256484bfb9f920cdaabae9d4fb466eeebb27e13e222fe450a471891e408d8e5b3d9be2c6d8d4dd67ebc66e3f80235dfd78021a0ec285b21775c5810d08829d30e39f17d0d897c9d12f55a2a7969f773a059cd2fa9149ede2e847290b0136834bf2d92ac2530c4e890fdbce705e7ffab3cd88a532f4c6f7043775bd852448da75758c5d31be6c82f5dd35c7bb57147ae2f6a04568856b5de14c7132b6b193ba73f1ba03504f22067c49e7c162dea7bc3d3340c32aa3da9d48101dab8197c6d28939cd52f846ad7a6377d0298ea9f8e2e376bfc447c82adfefc46c89d713b4c523575b06b4a6eac0354e6168492cf5e5c957e627a2f91c67d1538f5fa163a487aeb971bad2b6f899d6f8b1e396814ae4837f49b7fa37967978ae503e1dafc4f2e8849ecc895bca3cdbbb1f4a651b14299932873d2e5f33310daa7037fdd566da04e05e61a48af8d2585ff1de75d548a6b777a76859b9b585673119eaa488f3d87558b40fe3ede82ad03e39c4a30341b7055e9886f07713aedc9a639e1e4ff20a49e00703dc3835998d34de6c225fcb6e7fbdfdfd1ec11e5b5ff8d6bb49b3a099bab9dbc8de861c23dca05fff32a52ebe9c3fb2734a086e223d2752eb63d8db4c4f8d7baacaaea95662ddb4c3ffdea2b480847f4a01f8680961b4b963152b145e02305b8889c4658d370bf7f38aebc3ab3e9790f2a07e7857ee29f3588c39838217ff49be015c73e96b5d67dc60d19bf80d8309d3e3169e070601a0006d4e66f62d846813b32e95e38a77dfb10787d9129a201445f6037321337942ebf17e3986f0ffb866a003b389e340f89d3090f6e5fa348be17cced28b6aa9ec6cf18a60ef5a3267a8a629b208dc37c02c73de9b84e0a2644600a1d4b3558ae7be4e7c575943cdb2156da36dfa05f4e10a176f48966b17311342bd86f6613ec496364f85c9ddf5edaaa97c1af122b51e056362ba852ca85d03ff6f4ba38c9dc5ddf476528123dae7e32d7fb50be2999e72acecc2253da3bf5742b729933e4fe01cd72091fa5e76f1b71612ae6828ebe203abfab349cdf450a2236bc6d253592f66ff6ea686cc438f4e96fcf188be381af4e2eeb4f064c17784a49753c2885d7aedfbca91a35eb4a6dbf50bfee7e5cdee33e62c2a02975ea515d31ec979e1d553c0c165d9ecc81225bf148bfe381e9e98f5f61383ea92596f93ad76f0f271b5145da0c4876265ead3513ecf71015038af0b0db369d4e879c85541f1acc5e4c8dd468aa69c98ca60059f3aab9c67bcb473ff214c584020038001a7a40d1ed96861d20907baa9f6416d68c878a4c12b0b3193c481aa65cb8213e97c4c3b79bf4e3779f8e191149b5e618c463a5b30a0bbbcb77e3788773de0297b53f0dedeb9a3097590ace9c85c7006170ea26a73d3199e9e49a3360b3d504a798bf0640a12396255d86b0a79f4de73ccc3d0832c770f82abc960c572415a7126450d97c4d79de8805f771e158f6960340c80922adcdae367d2a27d2887d858c2454d735a581c4f5f9cacb81f00a2e6a374250682fa5af147cf717695358ab77d6a20f7ff71eac70bad748c4314462eb7fd1871c5b895d0025772326e14547d0819c127fe723cff1c69b1ff35f90ebae9c781a06b9e5641ac79251bbfdfb617a8bea042987ed21217fbf7321371b86758a2aa9356e9a0bac8031cdb574da5466b6e28221973cbe732d634f405d8e5ced775c3336dee125d37762e98cbed106a96c4e6938e8fb92dbdf931dff14088197ab93b7992b0022f3d8ac4e87e2b582c02d958532375c9f43848661178458242090cee05a560675a8be1c403c289054ea96aed7f3d8810c50e3687df26e1ef43f0ceb29ef9f23962fad5fe2472e16f9897866e3466a77172e1d29c133d43eba641c4d46607cb4aaf145877ab97a8d4c2d7177effbfb70b5e081117e333537b7466ec8e2871815c2b5431ca5d4e115da4a0615ec44dc7a9f1f69f5d0058749049dd2b85317a58130466986097dc5c86217c5832bfd07c1eeb892e9698c8c8f32b62a9aa03223b8a80aaa93ab6d1a05e2c0aa6db31fe88f22cf00ad934325c4949be7556ffeed8ee5d12547a81da3502011bf8e48ca61959ef374026d8f15ae63a0c8aeeded3f4c7699de511fe5f8d31652dd60eebebb73fc5632454806781d12783a45206d71bddc3a150fe2db152d812455c06a57604577c4aab816ebd0e0335d86d615c054004c0ea6918c2a80ab46c0359c3589caacba779dacb3e692a51647dbc946df0b84e5815bde3f04248d9d474c008fbadc28786693adc65cabb42e1e5e15b01dbf8fca5b79cc5e1638bbd00aa19fd4b424b3b2eef8236102ec9d8840507982b2f5f0283135c54cbe90195429de29ff97920b72693d5106a361c4ac46be88158166c52cd1978a543aa9d95be19967cfe51ec280b2fc96fc7f8dc58f48f627d5e2c2f933fb792b6c36ae91bef0e7b044ce1b1958d80e932fc3c10a20d143b0112f72f2344bcf3ba282d26a77152e0878ca60767512ed211a4eb757a5a4457ed40661d73108653a83b76adba5c424b965b3d9ac1c29784083cbb1e295962b492ba3f96ef5c65123afc51a3f2f4e1f43761775468e23b7d2a4534ddf31e203e3413ded2cf574a932e879dadf1e58d7f1ee8e1443b5550ffd16e3500e8b916523dab84d2566d6852653d7e8295608e21be4953abfd3a851854148d22427e2de48eb5851587f9b75fe914584f5008f15b86743d917f861e06e21723c0d5b2ac158a0f2453d7e74e310d9a400860659968824281c3630424519d354c91f2a569aaeda67cbc668a3931d5b884abcfc4c3027cd44719a8a15f4926769285179f25a633902bb3ba8898cdd6070f6f5159a76b2cce1bfdb125d77200a3924c1ac12aa2c7c16f4e5d68b3c511f7a4a16d39c14c7c6410009c03bf656975d71d209653b800ce1d50305ec82014e372a5e2ebbaef7eef8958065cede98704611e56c079882f28aea869ffa6423dc301925e34aa0c5c9e0228e746799e804033378d95c731f11bc83d60020b2e855a377ad2a7c03f16ea5acf0bc9385dc211690f2c21cb669730d5f1e3926352456f6fb2a6453b3f82d7ab5200f61ec705d608abc1ab2ee7e939d0dce2cc07a067c17e383d464016210df61fb5889b73bd9a9e63a77de84744ebf2b63985b36398f15c401fa7b0369a8ea1546fcc36860b391d41cec7b72e22e2f05026e37c18fd45ed790d9fdd628fa5c99c577e36ccf267b146b284244ace3d00287abb6bd4e10d523a7db855ed302243af4a3804216764ae1bd621ec9e6054e203cda4a8975d0d6487194a0cbc53f0acca18a0802a3552cf8ee62580eb78dadc10ae302f40f7b96563db86655fb515f6bf22615b3cad222a6a6b18de5fefb09a2c7ad66fb7ad1a449f3f4277f226c08ff540f2f96cbcb5566bd73a6ebf5ab2a52974a15d9e1bfd3a5295c9a3c1cf72cac104bf0bc6834faf667a300c974d84c033672fe22c2bffad5eaa52d5aec0b2bcadc10e0a8c462b73f38c473eb57ead276cda99bab5771e1db9022dafdff10e6f88917574c848fda62f8db128e754139a09e5b527d78a40164539a8411b1699b2d1154cbdf6833c01179f5224e46d92d89ce5b6d6ab9b23f533c941a5e232a0bf09ebce4e74b89186940453d76cf540ff747b28266174d4290c9f34ed1319ef3055a0e027140bcfec11ccdc032c7737300e56c74b884e23f8050ad18941955a54793e65d637b6b940918169f56988c2d6afe2e23504b11ae390336c69f1e96f7b40e62032e438a363ab33835e0edd5809a4a6f66cb1c41196f6175029e3400230e1b6f0e6b0be26afefa09a940f2721504127cd112d6ce01fe8d105b7b16d21167a30d9ebc123d01822570849868fb70ff898a5bb5404ec711ba7dab3163bb29bba4f026fe4b579c47e7c4b610e6947ad7d6d7d9efa31074f2e5efb7c08e69ef4d5c245f190aa175ff8f88dd05946764f3891558d4cfcaca5f42dfe88b0ed93d758b5cf8ce559846088fa5b9d00b6f85ca8c39abf583af0b1298c486b55601f020bf901855cdd31e15e0dcd1c0b6cb1c2e0e1362cfbdbe9d9187ebf6a3bfec9d58b0daa750197adda42072cc49283b8e321f985cefa9c7878e4a3ae808e09718bf91f2b0682cd26f36dcfd79fbe9a88526f8a70f518c0e4f0992a635131f02d9b65bd49dbb8eeda05c83f6c27333fb7a4eff96ddc444dcc2f5e5d7f6007b1c099dae454a327a0b8a010d263144cd101f94a64c37edfbf9e07dedc28f397e756b08e49bf0d10f34974c4b8b454d8d256a200fa169286fa7d7693f99b945c1624c99b670de1d200b991b1d87c2843468a3d3cd6051eb9b303d860c447471f113614c37167031619addf0f4a30f49fab9b4581018bbe8597af00f7085fe9d9177b7bdeead366d55367f0111094f36f3fbe8eb325618977ba63df6809140cbce3a84feed72cb8b1031d501161a6af128345e93616f78b923ee7b7c03858c196df538cf418f00a1caeae47314c0d1ba8f7bde290b4561cf92290abaddb5d1f5bd25b274550fe2cdddf07192f95f3162ac905a4205e9e1640dd05ad9d7962a77467b2681a9ef480fc47731f97d5d2588bab981e36a8cfa6509da53d5c1046f585c093bf2f18fc51bec39d64787829f1b94f273898d916e294370e7d4a07f46a1aab2402a7f75e43caa7610c8a2eb464bba9dd9cb11d7675ba1127367ae733f9b039d7c2e3c79302e08811b684128caab2e6fa367247d0c9e81927923d39cba1d05f94c6e1181335038b5d1addd36605e6ddfef4f81b162b0eeff1ef76f61bc636f4a9ac66bcaf214285c7814c45d4db64e3d159c51e94a51c7c80d45090ee1bd82b1f7cf09fe29c300f69df97f6493de7c060d58e8215b0325408d9b2c80c4e0cb5272093d75b75eb2cbc0361ae8b22dbf0620bdefc1c0bc9458b7eccdd1bf4c7086eb4b659caf378064832a69104d426df9b6c29e129ae11c9abc0717d34679f204c494ae6e4d09b2d11719589d04be090767973f80ab7d572834228c44db48172340fde1698dc5ebe19ec91557276cec6fde0b6d0e7574d61f015c3dad07135ec0f662c82f051eccd9986450fa24193715f6286c90080a4f6ea73eb08fc0897b24c4c94b0fb172e6d469cd8b989df54fa8d3c1ef771fb54cf6f33d87f511a8e10ad5f67d2ea3ff28dbe99307215463c1438f86f982fb974532795fdf2c2d7ffbb915fb23cea2f80bf4d84fdce83bf17405337f6090c462ce6839765e66126cdfa10f1e79887f81083e2df83f748addcc05e42f73bddf26f3f45ca89f36d0a9785a54cbcfa90092143ddb81be9115f4130c544b0510586d025c23e6049dc0804392767eafb912a5b7b257de294ea1484ca939dd83ff359d69e28856a8ee6cdf9631beebcfd373522abc1ae3c481a0f745f5c343e856b979243454bda3c52303866f04fe0fdd5616a4713f0c7558f3446b407f4e8a58a313f09a5addcfbb00472996ee76dde8c32885f34f06e810eda42072315cd4da097222d2427bb6841ba2a25b12301db2dd9fe9b2df994430ce1fc11484e853db750c19e37bd0ae739d874ec191a505d161962098c6e4298472d2195b63acaa786a4d0e3b9bff4cb903578d524b1379917249f3a0c33c3693a8e5077d5fc6b755635b1fe4485573b63f2b949ac79e4d20abf0d524bff288b8b5f41fa02442ba101b81f53d40dc1ae53921100ebb4b790dedbe336e5f22ffa83d634fe4a709678ae9e9993822e2bb06f4dfee18fa052056ac013caa8bffec09cb69984418a5b0278b1303a45f0ebc163a20afe04481062e79c32ef95ea46dee2ab5667f702326bd97343e68ab575fb2fb7f50e648e5cf0241617fadf4bed2cb7b972a9231cdb12eb880dadfc6359e07d589b98add3102ad4e6a9187609b39301e63c87bcd98fc0e1a04069e54d3cdc4a5a3ed96f26636c1d5315e69434871040c9e26ac567a2fb73be4bd31f943abfb686843d32f3112b80bbc693537781f6a2a3e0c0162d0f0cfd35ba60344048bd36f009621ad49d98e566e3d886227ab7d4058f6bb2c834281363c87adaf9518e214f11ea16843aa42c17deb7eb4161f5039e11562d987296d6e51b45e9f26382c9a2e90903be91c91111818393e39285bc5df0bee4c305831535c212cb9f6b5df9cc4209c5ba0f082339c6c6ec6e5c4b8a56d1b01bac35918a80d28251bec8aae02010607adc398c458682a52bd7a0092a0b52d5acddc685d8c2cc92ad473e7dc73278272dfac3a69158f924d4a0c4c1c76b1193ad1c37f7e4f5a7b7a9b56953f43978dab5f5a571a521aba7f146a33ea56a4e886232a501fa87cb67052ef36be010fe030a0f6cb21e4ebb6b002a8c724af7651d8d531c0a25ec0f38dd98c8636dae7f131dfd6dce902e6123e0766d0d7cf9e74204fa5a63250ab5bf4fc6e751363abe89a58e70bb040967964a43a3e93a8426a037009fab27683fa2cc4286023e5c99e8a1cf7090470d4658af3f5ba188de2d0748871067ab2b63598d30dd1385dca6345bb445a978c48a26882de24e5618882c86599e5c10a39f324d22d3d9985ad774ee9ec95d1232dcd4b164ed11b374070f6625468672d5b9c9a08686abea782cd7edaecc8a3e5e8b0446be9b09692a78481f9a71bca7a7f955e9b7d06e311b189320b65623a06b519a44e8730ef808757f1a0a3fc49fee9825f116a452924d0933b86a40f2f5d4d9d420500c3db83d02eea3deabd802d2ebc59964d375a91c684de569f8375c7636d052a000fc8d4a09b721690ac5eceebdf6e14a06da781cc0d91cdc2d42e04661418c654fa2da5b628568245aedd1afbb51eb3bd888dd8518fab03ec7be93bf72e0f8776366ea6ba6aa19e99d708e1feab9d48bfd2191015b4c980edfeedc73202e013d47a3976bc83bf672e2dfc67cc93292b1489725498067ab12924d9115d2a4ab845b689e3bea350c5ac585a2aab04371e8b1cd6e5ff0e9e006030532eedb6a4ebef55b820648f215900e5ead548c19fb0cb610c790d20e2c51f97cdf36649dd78b3ba1502440d3e59ded7e0fbd1130ae4c0f62840277ef7e57237ef1a5c69dde8baaf144606bbe9f0a13be5e35f99907cd3e839cec019a6b4892b01a91798f45460cb7225178693e0171f10efd75e84aa9289a8b01136ee23454eb25fa74845cc1e35b0625655bffe7509271a2afa89b554d6008d7713ca1259acece509bd0f8a0f7459990e95b23e7cc6f67dd1d71aa0d3304f685b64417c40c9e0243120bdd3147e5146ae1c4b77021867ee023d66036b4781e61059f84a153177255608ba24967d0d7c3b84934659694d60e95b920eb59da33da9ef45dc5ef5df0b441b9cd6b6c791557af9db555bb5cfe6bbac34b98b53204af3652fea73920e545409a02589205445c261a7e05e6255b63212a1c1859e6ed9b800ae93c5548923a85d1ed7c5b93e8d816af015d224501c5da80341c1f7f87fb545ced1a082eef14910f686022eee65826d9132c5f45d53a6042ad83c0d7a11cbfae0fb7a1e81ea3ff4853ae43b778a02f3d9ef4184e1f7d1a01f35dfc116fe3233db12fbea4f994e624cb931a31375539369622f4ad1611e3d0622a5beaf519e936eb9ce9af68e16f7d31d6a4e99bf52e7f3209d5515bb12693c8154b26ec1aae20a04ad6938bf1cacbb852ec04939d2a7f7cf8182f619398cac6adb8cd3a2f37ba56532f9f67bad34c882149205068c901e3581df6a9eaf67fbae3e9236aacf412c15e77a7a5ee89bc67f1203620481d98731780eae5ab8b30e2f251b8369ec93c498dd228d4d20339079a18977976f7d7da4345b4fed5d8db67bb525ffe9f1798214636c7b7d5b9339175b2dc93db5eec30e54977c86cc88aab48d23ccf79234241665d1aecaa2ede6026e4c1b46436f8022236f43b0554f05270481b15c939e28d7026bebc3cfc084070ea71e353b2f778986cb5e6435f68310e2c8e1de05dc9f2fd42eeff8592cec34a69c99e1a11c4e9345870553c4553524dc7a4b5d571777180c74ab0551184506598317a7632fe266158026c7f20bce55e8897007f4b1b2c74097565634c67d2387f3f426629f3ffabebdad36aea93886e526d463f4847247ed7e343bcf8214e2e052acee5ade6ecef2245917f1ef0b99db381a8c2669144755ca44bca8f285d459e1ead015cd1e363dc9cc8b9538630c5fad890bb31b40bf815f5665187fbb7725a4fabd5f05e7729f959f4ccd10c0568421d7f243b5f6e38618790adf04b6cfdf9adfd1c43a0e97eefd7b8f408ff9f744b41f45b82660c44a94a17a7e43b7664eea0c7ef983007b8673d5f9cb1c8f10539fe547faf7ea8b248577567834cea2bf69649479820598422cfea4b1f0b34831411d5ceed764372b7b1d655779224a8e27dee8cddef2e7dab454937935e43e2b848511299be4894f92b54a041b2f0ec3ab2a061cf28b9bd6d93fa8cf0c41540209e28d3d78ec95135b0e98d58a119c3fb5b1c339c0884294290dd59484c77a156a159b298a83cd52d82dd1a82629cc119787f367a1c30ed5b8f2ae5780cc8d28c9ad8a6aa8c0b48370839ce5b071290f9994c863b0e4c1d40a46bab1c2b2214f2ea8dac03835ae31123b37f4a2e356fe163cf17d11906f37b120f9135d76dcc78053021bc7f7489687565f621b63cf406a9c80a03f44500942c4a2f45d2f0b90ec17b5cd4503c3c7dbd044feb929f068cec13336d98620b89c1af2b450fbd9230cf9861b21bd23379bc0d3b8518c93c46d867359bfbbcdbfe89bea645063c8c7aa7d43ff94f4fd6354d37b55121a67f457c81e6fea03fa00417a05fcecf5c6c0c161ad098031b59ad7a1b8e19b4f411a2eff1045646e9702a3e6cd795c9fb2fcaa8aa519c125dab52b2092f6599c9e187ae08f394084982d4e76d6407429a454ed767e069915704cab909ea54b09e2f89362dc1a767ce1d9cd471122aa0cd1551f093f02652b8cfcdee9a6037dbcea0930d977743804454813e9869c09a5d3542c2c18fe676779ebbfcf54dfecc11fe48ccf731277d0d157b67d71586353b65792bea0cf9353d09ea4941866ccc63c42f2127820d6a877c2a9d48515cb0d5b3002ea8861172a641b3bf1776626cfaf19062be25e9d6cdfa9706a8e67fe5da1203cd30da115ed0b5377584c03c3122db6fc5fbf0d26dae50d7b3c0202dde1bfec5304fda53bd0a77f4314da394b010761002f5e33401d94c3e8c11367e0fd5693454d37b831e1457ac4ab0ed651b4f3724d9d34b427104954c2f001a6e3b751791ce611c29de269f7029d369ed4034fb5c582e50a5884a76abd15ea64983d8b7238f784f258089d0fe1e74339bce6d7529314233cc9a56010cebd435ee73048f0e83c9db787b57bb5a2003d2ced9e78baf312d9dbf640c38ee78fb52ec23fde9af8f86271594977545d5460ab6b33265686d40fbb6fdf07ae34d8fb2adb66f0341b468c36fa2fb3321a2b48986bfab85921dffb05a8a29ece1e9b47d8c91d5b38078fa3b2d1c356994f97ea9238887e9694301a6b529f9aa864cc98f8ba694ca6e731a9a325281bf329c062d52a0c19e085b6dadfe816f8d904daf9cbc87ebf6bb8cf6d1528444a146cd27b6864798aaec3832233982bcf50baf5a74b507204a3f54ff2c5e400b5b8f5ff6e4bec5f758cf3255734b46b6e54b4e042e113df190693151810975faeac905037b146207e50fdfebb1633030019713cf5f0faa70269277407257207c63e71d6247789a9c4a7b925f18a7f90e3e2eeb356b70fbffbaf1c8566176d20d51f185df87e8fcc597aaed7213a2658e0a1eefb7c8a4387b4f17127c0a81df9defdbba3b2bae3ebb0097810005a8b4d43580d3a803ddad649a3c6846bc08fb391e6a5f628d471e95decb8af585fca4faf14bd4876d8302a5fad10f32fee2caf214177b6c8524f22dbbe5d928e91557d99063c3310594a37baa5ebe0e66f5476caa3af5cb68bc852c48c14a09914d76c670320e86c5b6ee8926f157fe9021186caa495ff0deaf1a1de0ea1506486a9b66511d00b6e7fb29e783c91db41b93e974db357fa97454a312b6e27e511cf0a2928b05ce3418753aee515c0e5672207a715e0ff35fb70ff4b550a15142c4c3e0baeaf7df599a5f84edab43f097d1c543fb87990a3d310b146422af4f043dceb24e3a18a49b362719eca606052d7d7c12fb4afe77ddec881eed02454e48845be7bb1bb0453a7b502efceddac9ad355c0a31dbd6edc5abd0644000fab36eeedfcf0d3e4e46f63eb430b0e36b0dde46fc256d278d94994cafd737e4bc2934db555eed53d26a7c0415f57dbbf98562820e39f01009e66cc3da715942e713883a608a57786ac5b48f6d64f75ec1cce2d5aab0965a99fc7a4c35047b23727964c5116438bc66c6d4a5affd8565a31496104d21930573881093a02062a59106c3542df589c9404a666d878b7c2d214b66f8226edd45929babd0c05cfc1d5ba195ac72b2bdefade691cab1e8ac204090b6142b28e8d939969b2ca6385043e334d5e1614b04095569b7c07014c659e19b5ea710bb744edbd434fb69a89b70522fcac24056d230356ead013c1c0d54e05983aece32489c8c3ec9ca6344ce6a8bcd921db7bda5e34c836b816f543a975a38fa9e504265bc868d28db177c6feaefaa68cdbc04fe636e474cad956dd2df0eee1efe92b3a511a7637b255dcd34ac931fe6a1b7fbcb38bb9979f5fc5ea3f9c463096615311b516e764d997d5ca513badaa9065220074f3ee25471ddb3a08da264aaaf10d658e3430a8c75f5922a7dc379f1c25f02251c9c480d14a72c9fda2b2e99301fbac17f884b466f4536753607c73affa435455c3be4b68c7719fa065db8aaf04beb2b143867404c0991665d36cb227292b439893922a5e0769d698eca3ac11798dec7bbbd3fca7ed89ba195563eac8962955dfa19317c35a30a898005e16457c4d9dae6eb66809cda8e7d98002a842da1e144ee25095e26e67f8cc1c64c23043a59fb85bfe18cc47c4f61791be3b8f32d02f400374b475f68e73c975dba4fce4022375a7669172fe2338efc286e0c2f556fb5650ed13f924f5c9b299bc2c0849a3b1336a86b87f75f8ee231ee5b888a273b9f17632bccfbcb4248d2b5be0cf86fe0a34ff9ea72815716377b80e08c66501f67af9ae1a3a16ad077c53b78ed19a60f749411682a661c8d6708b69397e3261235cc885beb46504f2779befd261b28f971679b71dd10e0ac9c465352827ac8a5066602264552c37d1a30ef926a9e3f71b5927d3167ee5f34e89f8d87515c210c3eb81de9007ad3516f27086f44bec66bd6ef7e678deaedf43310fa3c24cc379902b313bc4908acc62416b16f9be3fa9d4258b512bfea7b67bc5b5bd686ca6942f7e13904f5288518095a59e016bd1e0f89a7e717a3bb3e7551556fe197f328c763b2c92220e1b5efa3736cbc522d62ce898ba0771058af033c523da42fa0da2317535ffb06b8928f4302ba596f9c9839d0bd63487a4234bc779ed15bd66d6573624bbd43b9f287a7cb3d15c2b501280f72dd323955a8cb2a82c51f8d1b4ebd8009929d6ae996c509a9962f508b3ae33e2ec0d2baefc52c0a11ae64210c812b3e6ca95bc0d9960e7814fcb34161eb73ebe501ef09299df803e32b9babbb9666275bc494e2c85044b026e70de5f5d93ed9bf0fb79407a9b46cea9b6456dc2fb842fde8158f971ea9935eaa80ef1843605bacbf4f84e35f50ae91294aba3e3349a92a0f22b2b5ff6f57262c7f07fbbac83d130a7e0ecad72c027c34ef4b19e0859021149b2630c87aa3b683c28ac7a3c2f99db497c1030d414262aa2e6c503babe7b0317bb6c4e14377427eb62607368b1a08ca2fed276f89bcfab5d4bed24cb1dfaab0ca39866d324e323945db3746fd4645eebdf9d4d3b9f5bd0924157608648458235e841401733cf3db3317d114f3158fe8cf87ab153513a4bd4744548e3451cf9eeeeff03e8a25d2b8a2a59b931554a5135e4ae89fe763de21c4019f39b4ffa6712f67fecf8684809391783078a19ba303aa8b95df6295035af091ee922f604d96ccb32c854037b9b76e6c260c35f7227854c4f7c6a75548831d59d610efa894763301da57ad3066f60e8f0f0c946a8f927016b3ae036fe3092e3827d5d53aa8539624b9259c7f979083b1650c26630a3fa82fab69aa3721c06616f76e7a96e2312512476c5d324c49701910dfaf88be95eb3a3033faa09fdabc909ce31517e767a37b01ed889d8035e74e9d28094c40d34ac85224d4647e70430c281845bfefa85b1eaddf2f14fd3545fe93009142b4b97fb410ebdfa48fbcd1f12ffce0ecf24362b0236e575f26c28866963184f67379552eb0791c7d39b39dbfa74e241f9574c2f196e11e51b8a66d66cee392b78cf70b1f554ef547dc8caf9fb8496c51c1bc4a6641e16e16fbd6691b8518a8e8eea116f458f95a2a9fa95e3ddaf4f0d89ecce51c046edcd932148f2c1584448a36155a2d30904ba6322ec30009e69558304a21f4331715f262d6fde7a638cfe63739b6e61773957e6f4ff7d6192929839c3a22c582db3164aafb618df44237967c9de60d6b36c7d6ef808ee2532e9895d60020ba591637a187b51b720d19d53653f95238bd1c8dfaf472f492e400b144895ced56f80b4db0d6955f1a568e006c0c1b30dd51d82ddeb7d973c5b041042853414bddcd4cd565374db893b7d8d108e3189f1d4801b2c3329105fb9bcc8c8ab1cefc3804b1a4a456da0070ebfecf652d42818941e479480e9ada85a4219bc86ac6d214d94c91c10346477ac9ab2fe996cd228e4cbad3de21754b169a2293cd0871151dbbb05a8daad73970395bb8b167dd2b0f2d77b46c9cf07317de8a71c892d5e7f4ce11d5650e8e07eef7e2dbdac6bf933dcd74bdcb0b765e0a9b1d54432955c5fd8b0a07db12c7f638d2e5c9def2fe39bde8d9a7ae4f55427a89cd4d2de453202d147188521c175ccea56e60746d5a1000697c03c5e5cb11c927b95db091e73bda3c65368079404aba13fabfab74b727bbc040e6556242a1dc49df6f4fe4e1890c4751c3c9a25d88fd8c95470fed283aa722026025337e68378d7e09c4f2c0aff8f2a65de0910d8c770b4e93fbbf0ae10640a85f57f792269e796b918855b6e9cadb5e84f95b130c4d6159ee616dfb444a8d7bbbc2c74ddc6701b728edc11b5b75733a40e20161faf29be0199885ff5e41b5a8aa12bc1a69105c8fa50b8306c8783a43860ffd9d55a78f2b7a4261decc4c355d40d85d67a3509a2f4c65727132bc9642beffc37809b257eef3cb78953ad6fa88b9aa7f918f2866caa29072990593fec01114108d7508cdeaef05149aac8b91f0a08f81e27786c6351768232e8c2ada74b5d097cdae415d862e103a72aefef125c48a91101ab55549d879049e3341ceb8ab62222a792619b9d4021113a726b60dcd44204860704efc0dc908839a8b3d8767589ef4329c49f18d5b62eec2a6723545aba33aa4a4b8c54d989dbb5f748460e967aad03a0b321f74ba99ed34df79969e33da17c1516bc18b1690da1e90b98348257685f14a6c8c69549233549e7b3690da53d7bb3ed926923bbd8e087cebb9d08e4ec6ba9d304046da23a88d435ea205c51491c1d8cbf7c50b8b20a231b2179eb084cc714b27ff04221788aa7a3d3ae57a98761044e1a2390a132171bd03738735d57556eae9fd38cfd51fbae66accc69a6cdca0b877826889954fe334c758fbedfd1bab8d717cbde32730131bf1fa9ffe9e1556b315633aa361e174075497ffdda50c4136ea9df7e167fe6b9c5842f5a26416e1c90617a176080101cca7fe460dd7c73925d82a0c44095f1d610698e88aa1ef66f54286a8274df32cbfcbcc96784fb4b98078c54d2f1bc80a8b4fca0a0926733475d752b3df2d53d87007845b8914698089653a88d2071be492697bc129afd998afdb190dd51cc1521371d97d5129bc04781be4a55e31a119086955d7947f63fe18ec7593ebe543b981a249bff369fd1694cdd793e856aad16c9a59fce2832704ed94be52130cec6b59bc314004766fff1869849835d943e4b907b16498a75dae76f5fb6179ba732dba768477acfd78748359dfe6044f088d6fc2ee760f6b98b765c179ce3708b944f7788866adde52396f06cde44c1caacbd87b5a4b91bfdd40802a8b6fb908db776c72ac948b464df28bd1268493a67903d93583562b98f426ff08f30057e86e7dc00962743cc85ca83a0ba2f5b06936d2d0110704ca078037dc00ad49bc920975358f9df258ece5b14a781c2372b1e6b9665e5832863c86cc3442b6ab19bfdc3eaa760e1d4167548c60ae7bdf893c6a61cac74a06611ffcef15eba52a654094f089f0a03603b320d6eff73ff0209e2a162d2dad2d13de00c9096e80b1aa4dbce2d3c49b9beb36ee55d6a70a3f1a45b89c50ac133263fa39161c4bd5ef005d67d649ee020ae3ac8b3d2be50f210c047df1feb4bccef634f6b451d2974404330fe554fa74530339c9370cb5f6a1a50b0a510aab9ed319a0f6cfc59bba250a71e2effd06e99088a7ae60c12fed118cb7028edc7effb21dfae41e364a79376840cc3b0127ba30ff708fc38996ee2c32061aa797f76e06d4108aad0d1c923b758396c7bebfb7094a8c9d8fc399dae14c64a89fa6ca37c7c050fbdcd9e78acf77eddf02df830147ae5e799ad0efe2a72f863d746cf6d63041acc2b9b016939d89010aa3749827b093f75829ad8bc42392f5e2e9e8f789b015153a70d5677092302cb1cc4fa0a09f524ff361c2bbb3d69f26478463589d04826eb26e1f594a79e35131b2f0bcd32edb92e22bced42072a31e74dc743743be8bb451d8e9ede4ea48e9d1427b8683874343fca4922f2fa3f7d289b04c48372488e38d378aeb01f18eea37b8037b1a3d6ec5696a28d5a6e8f57a2f4696ab60bd34f2b2397a9ceb1546ad55d5264ad849aaebd95559f34457840050c0c3b4296c1118cd4082ea0c1b1452451280f605e84124b6b12bec126563a2756ff315b271031353c0346a18697737ab39971e227c6b62fe310309ab63c8d90a552d86e1caff6eb1018f2e718b9ad73e73b3b48f81fb7af8e78f3b523a1884e04f9289f95784ded06423b6227419909b1c76d90460a49b8b9b068b505a79b7b6021d8599d21f54987791207663ca0a117b1f070bbea7d50f8cf37040664db1cb79e9418c60dadeeb7d4ec4402c424f4ed812a4c975d46a28552f91dce5f61396a0dd6e77ca1c39ef617eb7973310a046480af0c0802f0f46392c4d92a99c52881889dd0f1a2deca9558ac1678b39bdd915156f2160a6eb35313527fcb7471f7adfe5382e36e1ef4762bc58b1fe350db83ff3f86a986369086f18eff1720c0a4e3da8e957bc674a008602a1d341cbbf3e9ef7c3780ba82a4e77d2a2f4df92aed8eaad002803ab7a4dfcd9446e1747b0934ef15b6eb19d581d90645e5bc60b6f6144def5b5823b3962a7e599acb137e3b6942e02e355bb6174e973cf8dabe7408df654fc26b29318ad735278b97cc8874fd05a0f2da50fc5698946a49c9e2f518f6589a2cec4eb707429b9c5aabbf27f8f8c9b7108b7e442039fadcf8b04b7335785bfc1bb64283ddab5967de60ebcf1510bb2387c5c480a2f2692d7ec505e942d54221724619eb281964f09054351e49b2d26942308e93bb77e2ac06e737af43460237cbe3630d15c5002fc597f123225867495c3cb2e65acac5ac4fd3573ebe9c24d7cefe7c75e8f29bca9b23e206984c823669eb484d526fda99355adde5e458db144b78a391c9b6dd28070ab2649c6ca732f9b66275cef9db35c93f9082a1a72dd33b55a22a32e48d51f04714f3551aebb9f6ec63569c3eed5fe13ef09062c50dbb2a4665563c1c677c026c3e44eaff881b1105cdfc25c81db19669b99b4efa6af60d394b52fe5a5b71a5012405ff6cd613244c4ee99799cefe3227bb266ed9d0617bff250dff5564f4ec513ba81721124de42b07be50d18268cdf142e9baa2477d79942011568860d034b09981735f19ffaab833c4aaf18a571041a6040560a57da28b197996664bc73215643470bec11e4662f44c043c8ab25433948e9d411dc21402289f4ab378d94be45bc43cb332b54cd20c249a7eb59b053b1a810de1cbfd63fcc2994d539806144f1280c930831d26f914261ad14fe10d0c128c8425a71db4720aa4f7c446ba754f5b3dbae46b69d95579873e463aa55d4c514c396c48aae48a551bc3dfce0ef6e1752e9cc4531c37cef7785a1fb2bbf8e768ac226d95cd290125f60f717ad2d2e9aed7c66b277f62a925fdd9bdb28fa2affd1998d22407a626769d85c22bb6dbe4f676ff3a63fb7dfdd1394c0cbb7c34e810e3c28f313b263c8799a5978fb3fef2152d39e024b773a1787d5de26ee5f6d8ba123934e40f3249c51240fb6cf24bd789a66beb6347b4926f22fac247afd28500cbe92c60adf18a162bf6490e9a0620f46dc701f72ad120b5b0a17df8b8f0bf30da7f15734ee1f2dbdbb217d0b4e509ea37e29b1087f2ff28375249d85f3f3de6a2736292ffda10e4c9337269e434f4c8d3dfba5b1fa54cc05f4715fdff45a72b90d8e219f0cd15b6d6a5b3cd1072b5a25a2a52872ea1b934c44434b1c66a8eac87e795717a289287f0ed0575418a13c26b0399c3146cae4f423bb924c223feef80cf912b146472cd0b48e70bbbec2c61a882e1ed5283b35fdc7a48ddb96311dd456eefcad0e547711bd28610ecf884633ae4cfe16c03b46125adfe3b816b427efb17e3a6d199f64c31d8b4894682ee2ce29a335060a502bfbb1995412622c2aabaa8b08c540922eff873a34293fb11956a25e2b7c4871ea57c510ad6d089c14da44e4752508466146de76065e3d3d8fad9858718ef5a0966b75d7fd12f06e8f97fe2e5d68f1ce26889da04d2e97401e88d112cfcf9c07c2a4cc01b0667ea939110efa9c8717ccce356d3b75546324a11f967cefa341fdb37ac865566ccefb971bab5ee758c3dff96220078207e7fbd43d7b395e61431f7df307d5df4b41d4ed03e7919a5daeaa8a0bb91d8b099c1e9931f71398bcb4dccc3693981049dbdc4337260a64d022f4dc5954411a8385e06b3eead45d9a807e9da7ae53d605c2f74a1c4644a8143aaad84dc1ee42efde0caf6a07d4b7a20beb0f9ac8fff43139b1af1465bce38821871c63539a7187b54533936885301e5f5cea7f7252217b6a5e9607bd06d89551d16c7c870a4a020776bf3f836cf4ca84540c3c283904eacfadfca55182aaafcf5649c263e8f8deffb1c7c545cc271575e3e0f89f5c9f00fa91d9b215edf667465bc51cbbbc8d7904cec9a624195bd1107a41caf41920ea9fb7dac74fd91e3ee46b1efe56b0c399f8f51422b5ba5fb9959df8c0014df5b440fe9b50e83575dd7c23f770f62ae0f0bcf0de6c4a4afb74eaa9283340b85db60f79526727b44cfca66439d692af48641817c26b895a74cde4dbdc241752a590f96edc18755e76d20825d7ee0531e8e3cf4fb4f29cb3b73f1915d02a72d4f6a89e9c4ca341a5132e34317a8ea43ba33898b48a456f7a380fe74228b2459665eefcf0e52af069c647a8a42bdad14ff5a54420ae4b82564212f940084715016ac82ce24a3048d7ff030b522f14daf95407194b9e4e7460456a9193ad32dbb01168f91732b22cb69b49303ffa712e8da08501e91fe72d29b7d25691740222ae68aadd58babed4c62a099bbdcc26a84da03b58b5570002205daacea50c1376fd84198c79edf7cbe6430b933bd1d41d69ed036be3c3464febb365fe27c9fe903da058dde5da52d74c23375a6fb1e8ad5603b73b6319ee8121f8f81d62f6c8d7c77d00f193b343b21ed9d302e3bfee63af619f3ab997120ca5e84f0a88d9619678ce280dd1904db05d2d9072538960d203e3c2bf282cdaf593085840b2b4881d097ee8df56b7a66508ef7871ee7b7f33fcd5ac7ff01da62112db2cc102c55abde12482c03f5caf21978c7a4c99bfe03f3e6993964dd8135c1cc1a1d04e5225a17aea2d0a61ad91f030001e59ecc7d3a8786744a714ece69d1b7592eb64fb72450adbf79c702a727b08d3e60463469aae900464fff518076385e60e2af23f40a0a79b51a66208fa9a2696302ec75a9030d33791628877a17313b854fcd499db77a21cc5e3dc57182f87a6f8a32faec72b3105a5c1f74ba0fde323c59c0db9b22a961653569ace6b7732c87c5ee896c532b2adfb6fce0e2d218c8debc95cf78d42e3460a460fd3a605a7883db258c3d85168cb76f9c6aedb3b2a15191b20a9c4f2cce08a8edd399a6623ccfbcdd6339113f41d371e5d010bdd0cc0f4092f45fe31e6a952a1dfb5f2e27bf76f6b29ed9907b939454b29f5c43216d41efa77aad8210d8fb5842bebbe504ef827733becb3f4625fa05e71e45b0dacb951356da90458a6c3bfb5224cacf9913cc034b3a21dc0bfa5d13684bf3a3aef2d897dead6b60e0a0525a3017983553888084d5ffb9d34bebcb93684da826d0f5911bbe6f4969db9f89607d1363333139c582764ee1933e33e872c6db5f3283c7521d33c1262651b055285830102b2a6f144986101ba6f72fd9254c34c765d320e6999b03a715905a271553e66c89f175a318f63838ab3cd89cd3ce3cb14b549fbac3da4201d97a22eddde5bd5e138c2fdc9132a463ce5d351cf27c8ae471012b382149e247db56f5b261809c8206799858f3a56b6ad8d0e8e16965900006436cb5cec0acd5e26e4d9d36ff3aa953a38079d6e5521d3ee918cd0b69c2462658395be7392e0b4774d84f3c2b35b3b280029294696c2c9a21c090c74b48d12faee840d46bb0badc4edb0fd4ebdfa097edaf72340bb33434dc88142b3d313c09fe5992f4dab7136a787622636fe30826c11f9202266fea34602e9cc0d9013c84c4a78e0eeefd291ca91cf78383a5b9149e68cb31767d706e6a1e80f0e8720f1c7da33457017183a134cfca9aec801e26a64b8392b478ae42a750106bcc94e0b3bf70ca26fcb2de4681545ff9d5f9ed8aeb75e0b8b292437c31582cd68d0257edf5086f4d60fc12ff1667e39d30d917bd213d083d6989c67f2ff8c4f8394f537c6f162953e6fe0a8c7f16d116657ca5e171e27a0fdac81b175aed074221c5cfd2f1105e5fe628549a96a28e480b99009ebb37e3146749de9fbcab0713cf5807b60c21e7779eb3b6dd6ea4b2578d036013a75149dce8eea56a095b5770d210bc5bc20c692bbf7089b411758b2708bf2a304367f66639690714c26a2e28d5899e62a5e15a226d26bf619aab716b105d2b95924748aa38e251de3c792a33f37d6d447266ed54bb5564a419f6e57071c7d7ab5d7f5db42ff1ea3e4ccbc5356a9c0d5096c99a8ae6d83d2abb944104e596457db56082a595a7a74a525fc3012548a56545a6b82c0359e324bd1d2a1fc514374b11d3d24053774877a7ebebed2becc79961c2e6ed8bd8a8f9472531f6611ad33eca061fca32d51d88d6b0165af207fe5e58782c6ea402ecafb7f6eb400d2db55640308a826240f1551629eb66452898dd997d642a18c71d895de2eca0c6100f6e457f4998aaefcd72a93a3966a623a587a43d626b65f95241e9373aa4fd3eb98186a95c60a4bc4632f5a264aef2969755c143cd7fc55c71fb88c749567c3cf3218e7484ae26a2bb6b890de03ae2dd54b8ba8f31248ca5d252f38b45627121aaf7193056a32792367320c24ac025c7f615fb2584652d37aad2ad6450a5c9a7d21f91341e565ca994b92ff9bf02da68e00e46ab7765de84b1823650eaa7f73416454e77224b026f63cab6a4e5e704f078079bb1fa224eb4621f33a44fc5a5cc2f6d4e082f27d428c8cabd9dfe4bb0be1a5e743f1143eb5a6c0204cdc3e6cafd6004932402be49fdbb16f5a79f4210caec94acb89322ff4577d98380e03b392488407452bdbb84bfe84582e34dd498b0b4e6b4237035e084f1e5ca46457c99263b815007d22afd52082739dfbd59a7e870cf601826b5ae32915b3d0d8915e0fe9809f05fa89590f549f47d2038548c32af93e686de589d0cadfebf9144d9070834655b48755efa1b8752be4be1bbac037bcc2f1c6a7d28a60437a174c0bf53458afdfb481b2b643df9178468c31576b530d4d58a3fb4e26112813412f663d4f0affbca3052fc617b9b3cfe72df0548ebd130625ccc9b60440a1891b65da4627901d7eb8d5428727cad1037fd577da83c69a12c3ce7462486507f4e79c601ae6d6d2c73386b5f189285221c55130fc309f6549f2cc09241140f05cf7fe014baf65d674063a1aa474f47c9d173ae29b5f2f8d84997226e361015fe59d682ab0f90120ed6092780ff4af1ff9538c6b6d2ac66ec7770d7bd168b2901b99c6a754a4dcf696fd433528779c63529cf3b916a6faf32f0cff8647e23cf300468e80c9a075bffdd9a0d61ec3b8ec6ca59cbcf55adb2811323c272362eed6fd08aa56ee6355cd5fcb0e15abbd48c94bf530ebe1be453c7bd0b3235b0e01ffe818ee612a899266b443b97baffe0ba2f4118e8cca025ca0e649c2e1c63a1d6e55f575116d1b2b47bf59ea913560f45ee15801243f445c31a1fa5512d1972790f62fc1255fb296cfef27ecac5e8a7a642ba584971e31623b435870b763e69e3b4d0b1015bd92fe071c6aa7abb03421d2fe518989a596a0dff10450a648c2b0efa03a215fced029821a7b1f4cc49830ab4edbd9e7522adaf0970c6527cf394c8e86d0a206a303ec3be7704dad6099e31b6ca6704a5d0299bb38be97b8357126c4b3ef81fa5766f464c5f4b07ad9e0ac9064d16ef9c61a09dd04af7990812762627340528ba5cb9c8de615a4041f3ae0a3dc5be04df9c57f8856e4c8c53c1c6110cd2ce3c1425dfd7b0356e0aaac8ed63859f3c7e196c5c140e65662caea37fb47cc1fc51dc895d22eb92979747087059b7724a60497f35f3ee17944c5f51aee4130671baa5d3f42525381d39abddbcf207c5f0abd7a6c119bf38374c79964ed8b0986d087ebbe50ca85f10ce20af22f555509e690c18b1de47c54a8de5caec89623b0dd1853912a0241c481e61275226f9c88258fa3a9119fa33abd9753f58d1fc0d3a98d8e7ed5daebe263d2cc5b1ffffd857dab4906176c45c92491be1ae4783cb3a3465b905ae49c3ca6457b492dee19059e7f96d138b35580cf66055d046c0380b4b41847f253e7e6d139406f113d40ce83994422ab81d000d9784fa00d45bdc5e7e4c34a8ec372465b595377987dcf26559e3c5a4b29188835a3d8073d7fb58d3e24a35f33a9b4e60d025a9695dd58e60df9a7932d0b19385b586d01667fdeae4a1d84f3b25ca27f601179019eaadb7770023e0f83296b0dfdaeec41e165a8568e1a7ad5b0dd3bf2c4bc27fb5e454ede2413ea388ad96b3c0e2b45bfe06f4f2c07748e7594221dd5f44d3b7a3aaac9ccd1a3abeb120699368e49a04fa156efe224da0ca6cc5ad70da6a6e720c98a7d7be3064927988e534ce1ef9e7d0ec1481b13bb57872d17c28a0563020dd3ed3ca959b11f547c1ca0e9b415c0dc9aba25c35c113265aa741d6ad20cb547f4c64506c8a2167b163ebbb143692bd2d2a333617500efade6d909720ff09428fdb47871eed62570a5f45bf2a30e6d28e5c4b5cae859eb53053256dc0f60bf1007792569d0d55c2dc650cdd257b88f95426598988bb146c3f67b79cd1091b900fd7d040150ab0bb877ae4f5b81396de5c5072efb89d19e554b5f8acc30f7cb068d7dfb40e552625e53c8c7437117657a2007d3ca717d00faead52dcb6981ce5920e6388654490d0ea45d754a64c447f0db7357a743827ecfd19f9e71134074d0d272aa5b6e9a93ab234eb0d23d2422159fcce6a33f37e0f0b6b6bd571108155a8d065483c5950078e2c9e6f35dcf3da3a6079d352a976bcf86a5b62cf299c7d1b2d472f008763c880b7f169fcc54d116f44e866c59c4fbf1306078eb00410b75e81c05a371aec5648b9a89fd4aa59c2408f2b90cbf8835c2551595a77b2bdf1887197dfa60a2eb2581110c94ab7921b31379f96714df6384dd24c09a5a3466a651b7f978da0b47262619ff465f9dec0e073a0332cc5ee13970148628ecbaab4b2b90242641b04048fd4b13c6517f7a8143c46cc90c2bef6dfe76430abc610a6b4b6e05670dd06d1369f672c38ce562c62bd04a5658141bb7b9099712b8306c92b1187ab57702fc784c2f1f12e75f59041b24992d38a6f1dde911ff898b78532106119e7a1fcd541486de6472384b18ae8e4cfe244b9353c14b532ee372a360e8982cfb0b926e0730206f7be94ddee17f6d7a9905ff439da937f5741cd11fcf784c7e7c9180f1932099d76782b14d20888754fdccd8d12dc583516bed92cf13a4d852af44c9d105e01b91c8fa675a9d7ec50cf9a849593640437e85edc1f14383264a7a39e34ca0938a9972f2a29e7b2a24d420b2e3f52f5974084e376ed5341874a45a24e6ef5917d87439823f9dc0196c90e3b987f6fff456e85926eb8bf54e713f1db669ea8f52ed6e5925f43a04246500877cdea2244de8c8a5158bc6505cdfa8c29b316baf5125d0b242cf42c6f2d8f01d8c38752ed5978258c1b768034406ea16956a2efb6606fd88a23efd7530deeb905ee04050c4e3986c57eec762925e34756622f6fd5ab952b1b0942d55a778c188b3d032f24e7d8c90b83b8c0102a8f8ded3fa63c9d8fdee46b67c78cf4c3c03ea8903c1d15cdc13201d80dbe80ff35ff99e4802e6e8155b9365e0e671814c6466e266c8f96db2d09282745e004dcf54895bf25256ef47d5ec53edc6e55dc081cf332c07d529d6cc5e7a921751a67e3e9b70e00ad631b43beabc3b26455113d065e638d5272684c4da33d95bb5c683bb108709a170a118e0167a55525179bf5915d4bcb66403d0636960d7cb6bb9a37adbf25452ce1ad4eaa57e11f97f6f6f12aff889d072b5a5edebb529d155c36f9d5708242b55ab7961f5239d8e29b0819566c1920ce8d534db44c00620a1ac3efa266c3c0d1ad1f7886efddf4f60fe1a72e73f900d55877b745ccdefc74920fbbc0ca3d7b988ffd35fb735a7bf985bf6573099633a0d5e97b3abad9a1dd696d62d6c66f864f14a6429a40335aed546ff69e3664e6be38ba788efaa657adf7649281e16bec7cfad7c416854b384a4bb9bb3be81a37565a7ad9b28b02b3df5895f71792a15fc29c54008078a13ab6406140a18e81d09aa3b3e6362ee2420441b8c5f6facc7e98e6e96c6a0e3e7bafe09a4c21404ae299b9f774d07bcfe206b9a4c14ee981905788d783f4d9101c1de6febfe3dfa6d3ba2eb238a47b463d7ed8789b1ed89000c164dfeecce3ccd2967c7e53979df197e74ad987686cfa2e7e87ff03242d995452e22598f856774b40ce5059c2c089d1e2be003cccbc1fdafbba0803662a6ec537512a50063ceae82060799a58fb26aeafe89d2c52ea057e75454af282c3f55b042f995abc5a981b4131405c16678c6356208f967c855e57b1f6844ae4a38776732a355ac42b4bccbc77c01de46c2be06340925e8c50905aa962c55589fe8c37f331b4271e4a3e2dc7c68ce033d02e6bd110777f1437450d2b1678c17f8d39ccaae94bddc317c9bb48a08f59a2bdeb85632584809fa756cc3f6250e061490020cbf7d3e37616aac6431ecdb2cd39cdf709e247811c2f308083202862d122c5ab77f7aed068712a53a9c25da8b218572044cdbeea9781fc46e279fa95634d6b34f3cd1f611e2167cb9e9db6ea3e433bcf13f19a47dcb763226da650585a74b184ab1e8fbeecd41fafe79e33e7ddb5ea6be868999b5bbed9247c7aed96c194858ec313e55abc6cde807c11e32a7dec1c9814d7e42d64e6da7f52f7e20f66d2f8fa997af0f4c9fdfa3c5612f29456c4d5de6c6bb84a21af0fd4b086cf9cc25680ba685c1e1350ebb0fab3bbb2afb451b8497ab6f37769965274ba4a11bc1194db56401a5468287e78cf845f7700b261e4a0965e7f5237793117daa88d90755d89a4ec24006cd69fcc0643a8edb6f88522b4d22e965751e5fffcfa92759fa4197a14730f4735ec81f4fa33f1282a260b6c72b62ba9c9dce896d606c0e2fdf0d28a2f0517072cf60d86bce1be53a3cd33b0afb134f0092f3b02616606e4fdaf4a8eab90188147b105ed084d04e14c686d8c6ffac07908deedfc1cfac0aea5354fb117d79a8ab01d7b8255b7c6d20ff83bcf9fb32e00c145d1bef44cde797f55723f97ce4737feb9684377995b00fbf5d8f4071209b06cbc7227690e58eb2d26b4099c61ede324f7c681164f876d60b82f54d00ae0492dec05f0d892a12c2cd3b993121e4f287bb2086cd308a7e8c5a9c72d062d85addc6c49728b85ac20dec41d4aaf3a91871ff55a0ebca3a73c898319aa87f1e543ef260dbdcbbcb97c163e5fe6fcb1f4f2988e34975f135b1de117a9ae131d7f35b726c3115cfb161d3505dab3ac987b0f30c11a00442611741061a35707d7becedf9beefae50e80eddc268f4f5cee7a571f2ed8a3deec76f2402376e54b1c7368f78ec367d94872bef9ea26957ff1567d33ab9fa700f4a10cb3f276d0783dd22571ee3a454319b65cad9bb5eec66db240602ac0a4f8cf84d26f42c294b57d691f9b6548256897c320945504d7d473b2f3cbcb55f45ef82cdbcfb81070df912f6650f1ebb62fcdc053d95a900c967850d35130cddfe5e70ef218cd054800588f58dd045e2b148b7a9f2b51567bd7c16f52c45bf35801bf2437327eeff88387866c141a0145ee639d3c9a67cf5751558d8f39df75b771dec6c411ce09a822f13c5e88dd045ec892fdd17863f94f71570b66195671b38ba40190ea7ae598e51d7b051b21ccf3a2f82c32e1ce8d2e1267f456a2ff95b3b11a35816e5ca00c3017d4c68107b1b0fa1a8f9db420d628fad1d0ba557d71a9f182bd5b021c01f064efc5e8a1caf16d6e0e12703dab625d4d31941b547981ea885f7e62c94dcdd7151af9d4d8141928141c7c2ae28a9f424676079e926d0c1088fade55e60fedc59b3ef2b20d142d7fa51ca4f461e2e025968a20647721d553518b570e6993156bbc09d2f81cd9d38515b6aa004f698da6d398b3befd699b3d785a291c8da1cda6b8e9a0f2709154b2e8f2f6e2e27925ffd3128aeaf15eb0cbc3c5dc4f79600ab699eff2a970c1c28f8c02e177192644228585ee7c5eea6c15424350157c97bfcf89980807688bd547edae40bc3817a6c4eb7a21de8ac30ba5ba9e4e1312301d6d2ceb969e04edd66943d16a4529a5e51a11709be97aa5ea0a08e8ade8b3a5974ef44e31f8334784c2bd618d9a6b4e5daee3968902be2d3c82010c89a0906c6d69ff43659fff423d9810da1f6389783dfed0202d3365a7cb717766f9cf5ce4da6d4a7c7b1ffa5775cd4a76bda53cb43c00f8b581e16ed734b6c0a888bd0d7965db0ce47a4b5ee33f26ac7d32c1c3bf1c3cc8d8127da9dd76a7b99122e296fadd4f2366c24f8dfc1ec23a2d68aae42542fcd734e38934336d8f5197d27e5eb047ccaac9d4be67f75997b67a42225053bf9dee6e20c43935b7a63426fa882f6846117bac4004036247e840a97edde46dd9067ad6c01ebf8229f785bd13784604f006564b3f5ae0621c0a9d1c78c56ee4811fc747c232c53d0ac006891e2ef8db86560fc2a5a328af9d60ed5da4af2fbb4f15453783f17da6c6934537b2cf16de5c75919608fa680b39e79b83c8cb49b206c34f35e5ff2787267ca3065ff721460868f5bf1b812dad372d78bc80d0db238d9cc326ff75208a4cbab3e6f86b650bbcaa479df42ee83371bc1931b2daa957516513bc3379cb57cc55d146b131a4cea270f3f067a042e977abee3467319a5d7fb9075f2959c04a1044ef923f104ba118a32fa13b08662ef23b4ec9e8fa48a18e6277160cb5ebc04c8381cf9e77ca15ce75a5556f3d3f6c945031242255b680b3b99fa1bcf1e469dc810fc1a4d806576ffdfa1813bf1ca8605689b13acda149ec263359a5a886c2e1cbaa6f3e767fd5e40094d3acc6786a4976a15d516d2263cb08de79e5399bd5ac505cce608487d4f95c5e7449c3283b0bcb84e970165f956685546cf70ed237f9805dec4fe275bfa46478de6dc015c6bb76a6412a7a8636daf9fe6424eb9c0705418d2b3ecf2d43cf9942330fc3d5f155e851f67a0d8e1106d11fd69176f9d080d95289dfbd888a7c11caee1dcb5b601e2602c6798ec0d1e14df0991ec8a161f760aca7f1b2ade6d31e3dfb2a330ff0ce40111edc9799f98f0afc20b1c36aec176427c952a0a60f0f0d365a5a6f9dd08658a52133410ea80ec44e9f2c2323bdd776a49759ad9f770b5d8e5cc15456f1c9b750573f2933a9d3dfe7089aa42441345119f3e1b33955dc0919f1ee4e76eb67d69f3188cc8566883cbff264cce845e025f20bcfcdc3f209bfdb2a010368883a3d92c5dbb1a32a31c64c7c9d1ddaa1273809ebe57f0c7749888553b8b6f994ffab67b98ae730404f9dd0d821b102cb294d29475bdb54ca4a57c4b48442a594025df39fa014409555d794a409cabe35b71aa1f0ae5d06a37c71c120bc5fff85aed79242bca9e1eeb2cb2286e89baa4eff10a7d3f6bc23ceb25fba8c5ad07b7db74ba300629c39b0005356e44f586c4ca79024f176402c614c97cb81dbc4dadcb0dc4e2871cae52179cb11ac13079234b707403b173cea11788a57f0cebcb1f1a7e253a50ebfb1736ae076a234a2f0cd06746ae17536cf17cb4ad795224d61877be10e716b4bc20d154d7f8171e25c5788dd4bb6517306385a53ececf33983c0c0b4b542069904c6fbe4a1c8547e0edd5e07d66a3aa049d47e3a225fa4231e87504faf5a726302276b09315d620c6a0bd6448fed72ed06bb1938c3c5b38c44c971bdfe4b8c363ff99d1101bff13c7b8b239add0381627f0aab4c3a8a885f0a89e245ce659579614e56a75999a23e666c581163f0e000a9671d981ce87fdba3d6f12a25499eacc1c570322bb35309b29c742d85481f5542ffcde4394023a09bb730b170830741c09b49de36eaf7660bde0167277b519dc830d2330a80c35abb1525cf9b0ffb129ce12cc536e1a63bad6d3f7a2ff857cd2db39776fe14ad9701edf3b5b0d719f9b6c4cacad65235987a231a8847b225a7658072920e195297c8b5a51079824eabf6d2cf8194e43b97a5bce5dcd1215faec19d85b43f8607f18b4e427170c174eced09253be9e599668eb675c0d1c9d5afb0995669c02cd4d7cb40c39c299b93ae12bac715f17a1f3872756b48e0032302e3b67f6aed399993fdf2910aaab12ce6536c5a399894ec24fb76064f1abf3eab5faf0c0809a8491010865d71dd41ea33ffc985ce469e8511963afca9932f23f647b08ca587e37d50d913429500d52ad745b7bdf1b6ef3dfbae1b590e2e90ec23a01ec1a8213cb2cb28cbc4ec4f9bc8d3da65ebce728c679b22998bbf13057397734c964d53a7b0fa5347025a9bd70ff132ee6e6089897329258581acb20fd162e539c9ac54f9cb6054613cfcb0351c456256349c2f776d89020cbd222051e3883324635b8e13afd1da85c1ec7837d8206230da7a9a1e1c6cb8449d9f2df593362b6fc8ffadddf935f3b120d2bf4e3bf05981c2acceef4b60422ea0c0f2868c40005928600ca88ab7cc3a39b417d34b164a7b2559347db16da58e7ee0d75e33a344a631c35316441cbba95077abc7575f5683cb9d559c9779116acefd81d951d5fd38d4c5f0e7eea4876d1cb81b2a39ba2c6e9a234bc1d20b8a8c2fecfec1c9f64fca867c68ed5774dbb99f33da5b9d68bf61c7187512a06d613065227bc13bc8fc09e0f8c3c76ab710960b1b33631741374560e98c2e579e9e28a78f3c678fbdc2e52cb93f561fe063fc1a6ebc9c2e49fb72a2f01a6e7bbd4bafcb8d96d8eaca3c08119dc67433b12f94039fccf80673a25fb95f8d2a0086c3dd1dba1e26b644da277d4971db1829b2cb9179155fbc4b1e5cd7cd9ed5fdc14d507cac258944e34d6bfe8e1c18edf2ebb87709a284de7a149f03e8ada2d436dc36969ea4532f01c06880e2034ce2a4a813d6e1eccacb69f15ae59069bee939198111e35d33a0ce4a0e64523964e04acd2f14f0dddb215dfd57fb41101cbb31706ec01df6880810af4b0b8b1ff6ec5277dcb3dc801e79a04e8f09b466347eee6d14fba304b909cae7c0e2587fcb56d7bcf9b955c1381380a6dc5b4a6259eee134bc7232ad53abeaf49b57e946e8c2c013b945b1d97a45275caff1a1d77372efba1102729a150fc28665433d426a1d65b99d255fa45a89d4eaccab946fe5b5c1856cc7fe7bc413d8e8178deff563e737ed261f773ff5099f403fb5fe630334286f00794f500f6f8480d5910a758757ce912b6cffe61c41ba4b07784502bb34c6a1004cf66dd261a4b185df3a208cdeaaf16e1cb09d6b769249b9852874f4a7f3715c8d1d7858819e5d112e5f1b52f678edbc95aa80a6dc2a53bec652d3e26837e3ca0a3b7caa8c92b8bc9e0e8d6b7bee96d48d9539658b9349371264a9c90ca2a48ab69e2b184ac4c550fc5b6fa7a53da6da03fbdd88cde7f0faa9ea365c57a522f9ac2414dfab6e791d668d544c6cb83ad13a5b2c4bff2941794168c8cb6bac2b7bacc811fb58f4b8e0f3607ef6126de4112defae25443a71b7fdf4e6b40e0972bb21f05541550f801f6086d7d6433d2388737887c292a767a43ecb5d1add6b4c08d9f18c6e7092b17adc33c0323c3ffc65fc81398533808d5e207ecef9aba03550cf094de39cb73cd2d99f5bd4499cd0e4420b1da1db2499e0a2a754d774ca739450591b1258f7c84753bc8fee78ea4842b54d7d64d21295f8ab0e6e7658fff759a68e6fc1170c5ca21ea3a31ed3420a04983b9f9d9b131ef5a054fff71e7ede2a07539d7bbc2e20dd021a617199a71bba75f99c0a608f663403939a921201be645e67fabfc56f127592c838d5839bf0971c388af0cfd2f469679c6d8d9f99b6ab2b49dc085cce9e3a22054e0597391ebcc29d25e568292d135e17d860ce50b66c1985ee3c7a4db68bf880020c9d5f7bd275a26e4ec1cf4dcef6f10fcb9b28bbb3038e631c352eab7a00a7931b4a5eb8cc00c9c4b30b9010b9a8b11374b867855301ef6727011bf26f45d70154f025027fc6c1a5fc6c2b11230ec9a150bd586b731917581c040f3d31ed22629aefa4b802698eb15cdb5a4a225c37f51a53d23e9fd1b15986e25581028b280e2ab410e27bf915b6e2a436adf1ca141a5808012d0bc539c900da441e58b5fc55b375095d50c3cce86db77cd7c1d8bb5e9e34ac55e2f176460e4e41d1cf65f7913e890d45c0527e1b8b9da1a34ddc0176f1d24443ddff8871c0c40547e10e96f7ae50a52e4bab66274e83357b0721b6fac7ba41ae5e97b8e057282f85f6501ebbe5ce332ca0e808134300dae8768c3584d48f0299445546305e32165349d44fefd9370012f9347f99d0a828eda590429bfe6cf77184abc53456c2fd83c678533f6bab3c3f622700adb9d97f97f4c7951f91ee6cef7f5e02fc4253337d8d12c32f35e82bdab4507d55e1bb00ba94a352ca39c7ce16db46172a558d28c478b987234fc8759afe0ba8d898d7d622de31930afd8e9f79947b8df55011cf6efa65a13968a8296c63deea19f76dacb0086c9616bf3674dd12feca0a0cad8ed5592a939fc82e62ff08572ecfae6ee44205f49a28643ab105203788758c4823585734593188f35f7a63776776911fc0a82a7c2b227d6f8bf6c3e99d8149e51304a527039bd94727099963cf1d6e9d161840b21d3aad98f73c16172411113a5fd743bace1cd35125a52f83a6cb89fa4d2f448f985fa6f92c8cbbd6cb3480362b0f1bfae9014d1466aa35a9a5662fcfee1735fee5f858d1d8dd07bd1baa5fc94cbbae030e9782f1f1f959080d17bbc1bf4c54e48a6a5a9317128724cf098cfa6c163fde8b8e07517822604770908ebac74368e5b23b8841884d3cf49c98f0180d9f44bff9ac65fadc6a951c8ae16747aeda14ec7cadc066b6a2f0da10296314d9adcdf78984fb4d6f6f760025b889c73ca58dbdbd118121c80c8bf77601d9e4e48c7ef7d1321c71083655cf7d0f1578a6b839876b01045108385a1a9d4196ec0e683663d486ba9afbbe8c93691c8a352ae91ae3c28b54f79c02eef5b38b86b83f184d2e79014b6b609948d760661fa5348449871c237a331b3eb912af8cce32714863ad528e69bce4328c02081d05e5814708a3ab98756d119543e09721a19cfca0d9ffb548ac685fbea2b758bdbb43d8a01da2898bd126866a01bb4e67df94f2b3d36a148d9e884e553e49a6f7f271df64cbc48b91530d6913826c0b337b83947850e486c1bca592df498a8acd16c452f92b62b300487d69f2c2fb701d8c38db7b8d61601fdba30d7766bfe7690e8b6889d95021ae0b6c3414364c3a113c651960d98acb0059fd1f170eb251969c6a2b312092d449a2995aac58146b71bfc0912a2132240b2a025cb74f1df84ac11e7177747477184bbb18ec9eee9df206d3b369108ab950a5f51e61d8c3492f302453cb5369e23fe1fb82b4d324a3ee4eeaa5e8f8c55a8561b932971c13e25c8e9cc745afdc3fb1a5b8e6bafcbd56901b2372f2dd38ed31580fdb6ced4ce1a8c8d9f96c32cf57f7422fc1b24bb394642c0594dcee53f734c8a33e828a564949c414e069e553b325a0312fcbbe66a1a3ddda0fda2affb87bb9a655a4baa08ed0c287fac618beeb2db3742b49b0f292449546fbf7961362e8baea9bd24a1c57825c042a9426debb5adb8084d78ddb829b5e51a728a1b49e5c3c415116706e31020e4b74eafe764e36b9ccd77ff3fb8ebc4530d9006064a28ad58454aef4c33ea677e464a132278de2b7cf63e0436b051b62716f2fff1c64569f704c8394c83858a12cdec812ab3dddeb538f77f3e397314348d5516223d80fabfa193126f364f9c0e6e98365924a07148b445b8e2ea4a744e38a47cd6cbc142e0ffa2e2e6989d66ce31eaf759b76a1c72596684d023328527e4b5ad44ce6a84f98d2842d90d21bd714d9ab391275fb159318100fccd3bf9fa114322ec6012fb79ac1bf003831e5fc2ad42b90778e2e247eeac057cdbede08f24aa0fed6b1a155b21b8ddd98d778f03ce09f3606dddf3275c9c4212750435b70900548d8d664b35b819f37b35e1507fa522ec4e0c266d4a9f4f9578af45f76596bc824e0940f6d3187f0f6a390866cce86e20490ce8fec31a51437ea7b77e70baca964520efc358676e20a317256d9f4d73465224865e296c8f0ffd7b1c7cbfe2e28b034b7b6d6678aa04b8b4bb5aaf428129b06fcb9a1f46be883dc4ffda6e63c2e496d4dcb3ed40084c9e7ec142ccccd9c3d4647ac085e2242684dd0e2b17c0e2d522450259bce09dee0da7a2c126b3581acf8d88c5ddd0449ab38862f0092b1f3893828fefeb26bfe948048b2d14a4ec88581c49a4fd7c7f76b228d0df2b0e1e234e8ff1765b0a2efa74cafede41a08be4f2f3a5743013d52b29b503e044bd969ca993c66da18fa16c05eab3b73cd172fac9dda67441a86c7e42cbf9a8724ed8b1e32748724ebbb88e0539fbcb55908fbe048a8c92bd69b6b34b626c819b881d05b283bad4f2a7a6f27afac367e9f183ec6b7a69c78b3822b1b2b0f122635aa26f1e0a3e08e2168474c968ff91902faec9d236357f0b7da088604b1881e1e266f2988ebad6e9e82b6a3e1ec658656c64b6909b9f54dbf607958155c118f2265039986e17df2b98a564b4a0d5eb206beca16541f8ab6cffbe046836399e94bca1855cb8ca13274f6ba4766837812e741cd90b7e3b5dede8b9364a31bb6095c08454b402c7f15cba7e8fa93584491a5d753f80e2e2ebdccccda6af66ad0df2594601e461b713bed0ec54acf95fe409d631532f3d117f78961fbce9f24417a91c8eaa9d57915ddb14d32d5ae84fcd3bfea6e7eb0b9f382d46724b42d853d8006dbff45f35d2ff75cb044197c2aaecd53a2f1468fb41057bd014b983a2389ff5e3ed4aebbc8215b474969cf78f7341340e4abc58a37216c7a0d3c8e0e09c8548ec81ffe49cb5fafe8ebc548d71f33a848039fbe2ea6f6edc2e7fa1e1b3659d0aad97578323835210626e0655472feeff4170b1aae5e995d6ef9c123aa25cd7133c57defc2fd2736cd34941b35a0abe87c3bb9f669425b552bd3afeeb27996bb767fb27df59880bad7c18e5cd32ae4b139729f8e032120ad6310507cdca2449ba09e9893971dc2802df0b62977938b5cdb8e6bf42b6c034261924b0a5c9afce1c2e1cb6e6e32cb1259a816793513908c14a9af59d43345284c3e5014a4636a74c766979b49f71067a2f6f439be393a62455563eae4add6c2e8994c69c422f54fdd8d2fca046947ecfa44bee0b89cfeff7b2461eac1cca331ac10c4b201a4bd9ce3698ac7eb120096034c5862889a6941564bab40b08d8cef505f0807adee4e1e1703e01896d9bcfb34c2ab9ec0ade18000c1d0afa4d020c93f21746c7456a87e9b50ce25c9751d66b4766c7c04fe0a5d3fa447e5e587cab64a7f8170fa1ba6d997aae4d84754e0aa0c4fe534c030f80b1b4e11b0d0d55b5e325eb38c722b5750ccf06f3456d710c478d99639222a9467cebe00c792da867908a344820619a4fe5166ff6b923c76fcdfde295d3de7ee810f4f826fdacb8dfb0fdd8459e64d11518a2554530c6e2f765c201095082faa026087a24a95e8387ec03a62c6dc5eb8394725bdbe2ed1cbbc454f1bb3a4e65cce009710e7a7f1e823e6f3bd1d861118e029d0e3f7799e44d3cc7a61255d1764f45165b3b1b89e394a586cff2282e491983b91e0787e459c00404ab2d2cd5524aab6b61ee4833337915b8a8091f46ba9878c675ff430c3b2160a844e94541ad8cdd7a58fc4e3f6fc71c118aef6828376444b6b2b987e70660541cf4383fa3bd1abcbc6c576bb94249f4f1a0da1281e81dd2bad13bb48fbfe9f42760db1a1e0c35377767046e798cd8dd6217c6f332d48eb7fae6ff63d5cdb1c988e62c9923fc53dd15de15f1d628976a9e10b41f68329f1a9e1bb931a63f9c8a91a5fbf4208db01f7c7e84833b3100e73ecf2f0a9f3a8010801812cc87bc71c1e8e083f2a8f99eeb069fefb177776f9dc5e18b6cf4279f3e9d6c4aec772ddf0d7e1b7694ded6a478585faf6e9d95cc90af92c7e9cc6c6595c10513baff8688341cf2b82c3b887ec0a1aaab3cb18235a5263c02d9ec28328644da31b530f74ea8ad7f8060ebec5bd13806f27a4e6c850a096c93e4473cf9a9e1fc573ee92da248af88be11e9350ff1908ef0cf2eae1696ae37cddb64351aa87713f2ce9f42ae1108fe5b2da86099f6d079dfbb8d0b3c0cf87f31efc5d617e2b134a9b082900d17e5ca87ab0e4bb8b6ac8b1b197c1ac7a18ff8830ccb52710986c3fb3f4ae7ab83afef4754708c7b8da3b9ebe8f0e89b7b38b19a1bf3dac4b8b33fdd18eb43ce5686365eb590bffb5d3f20141c2302524b66b0198a77a2cf6246978065568360559f7414ad9a504dd66c1658cb0b7412f21effe91fcc513f40690531b84abe8636004d8a919f6375aabc26ecce497231a82ca766513c723970af8dd74e7e97938da493cc3fca59d3fdfa50e8117be634a7dd7dcacea8b9c21e7a5dcc7d0889a3b5803372ace5d7061a06867bdeddcea7abc1f0d20a3ca4a621985d05571b87694ba626935daf22b0dc6192d72436c888c83bee1c3ee589a78e2f1639b691e8d68e80e0799e5a35b0a3bbb3234629853f96e9401edbd3fc6a4a92ed7afd5dd8be622b5247eee6e35e301c1255ea78458ab2799e79cd1d243141d58625c96551be489675a985b7fae40af4b242542dc93e2d18db7a20bd7ec503bd75462c212089327ee8f0ba2b06fc35142874ae99b21cd65eb9a632202d990a5091aac1b7b797ada79fc91fda1f1bb87ab84f4053cbbca5f8b5f3c038f8b5ee919b1c139ccc876737896160458fe0e20283ed15a17a645f4a6f9bcc5bbb39d4018b3807a168ffdf9664df1a7d8ee1af8d238497263e3cc26249af19e2c3cf2499837839079aaad9bc191d1bf6eb5913a8932f863759cc2c52d1952386988c1ece2630540d237a46d5433f9d34335d259984573f0ae96e1dbe8edba4b844f16aad9fb8e39760f5ba498ce4c3d9f6ba4cf7f768247060354d75cf873990b32039526e928ed86e791792ef28a1850a819bd0e5b4ad94daf80fd89b33ec9250e3c21e1cece1589b7179636ac1115791c9ea13bddec2c3dacfa1b3e37ca443ec3d90a79912bf6ddbd105480d966b542fa90fc45a501ca03a2b151a6f0776680e58e083a2ca5554a03783a08b936da58f99ddb6224f373a682220e1e6209bb11ae6966a99fddabcd12ea5dff95b42496639f4885b11c3e5a3b5add74b9f26a90c684bdc9f96b3d30f9a224eaa30b48e0bf3b56d31e057b53757c3bf213380944f3d28a579875526b1fff9ee3591db9542eac6254e25643db106b427a3610d5ffef652615df27cbe93977ec53718c37afe16c954bfad279b1cd9449be4947e6f5b25d7c760c89d8ab246596a93364224b3a8a602e4859639f0ec96f3527a7b7bdd51e8f4baa76c06086cb0a67f4ff4a05a9ccefe04c32841b3c461c5c1cfe9b4620d488366b4b70cd40e47c496590c41de0ccf42a0a32aa56b93f683d2a54fb06e5d12f6b7a9e546f9ffe8bf038b2de74aa1883367ae407f8b5b9b32fb88a5a59d24d134e381650af052893d0cf489146e444598ebb6951e3904000a7d6c129d7e32b27fe1d94845ac6362e98bf5eadff203b6ade38a3aac40cb48aaef2d84f72e210cd66fff3d2b94ce5ac96b4812f803dd07118334ed9c7f45141b822296db331b6385da32ba3c9e0847ac1c237369427dceeb943f845e2412e52367dee0a5bca08bf70dfce08ef98fbaa8b70e74fef3fdcdd66d0207280111b5a47b24d9d1361219b4df0ab01c574f16d46a26aef01c006705175b2890bb937448cc0783d224d809a106e7ade0c0b90d40cb0d6c799c7b9c3b3a38f51ec77c72b0bb4e63586407f0b52f442eee66383938e4e223530aaca38e54995ef866d5a89bbb16266f1c550585706184b42579492a24ded85c0b7625159bac8f04b6ce46742bfbad90379d1ba9982e44be98df8963e6f2bbcdcb1c4daa5c88f5f65932086eab3f77dba3b3b660899e9b2270f8056fb35879696b92c629a29a33ad9f7b707507f0d4ec71807e36d126cec8e081f4b2b76673e88add46b68a6d380bccc95d58887fd96b4bf4e2df9c0aaac0d7215452367d054e6249c371597aeacf790001414b32f0cde9d231f453d07eb5182349dc26c0dadf0540b498f97a8c6dda8255e49e213cd46a5ec53cd9021dbae719ffa9094d9a69e5d5049b76283b0ad16dfa80b4eafcfbf4cf44004c34930a3f92edc88b39a93c33e03669516c2f04839e7a08a11f5cd738b438c18ba7de8464dc1451352ab2cb7e5ddeec21bee37d4876e79bb78158db80acb5b3bc0d1b305683a27c5b2a6f270decdd39f60941b04f54d47be9047ae8ffa89cd06a002e762e87e1e6c62c9dbaf619b4ff27b369d204dd5f49ea4ce82c2989e0c6c1eff96e9f0821c7fe7ef2814556ed38fb173b3abe5cb10064e4058a2d44ca1ffd167374d2029f867fe052adad37fd802594b6b11472fa5959c83a2d8c1fbd2eae8711601c80fb377f8a24f2d4f5e7271627a4c40ed48543e21e20ed4cdca633f933b2a5800d2666c6c80c543ad0978a60985010a54dbf04ef6e44273c53628ba4cbd6941fb523d369c1bfca72196b4eb354838131041f299b76d134d06787f0becadc9ae2f828b43ceb3b846c50f473abb5ba715210849880e1dbd404b42a95ffc73703e37e7a54904da4b4fcc6c2f63933f5ea487201766dd2757e0dfcc6cd65b19acf70391b069b4ed2a749d5f65b088ae48b4fe1a823d7aa37bf3e2ae07f4bd974e4b8844524603aa6e80decb70c8c2bc3ad0e5e36d665d37ac4806f63932351bd04690105a467afee3faad7f17df11d87b5cd8ded0287434b765f417e0229320a514ac68c9a65f25326a490b06ba1a53d949a53355dce265538cf99254215b3028e39b7cbc23520befa95da301a65786be3e79fb365e704e4ef7269694974603c48a6003e5904663716d4fbc44b3c93b860fee71ed9519a03d9db0ddc7782c5a33e426c76ecca39dad39032aa220dda6e5c5f9b50172dfecb0ddaa83067dce4b35bf6fa5544dbcf967e37ac1a15a945efa24d3697af58ff19ca289ad141d38859b95429f8153016d0861626f5e3a89e7fcf78c54894739b20d76db3b2adaf25c369c2019ebc4dd1ea415388035eb8b07110c14092594d7ac7c68f31c6bf56626440f2d9811ee0f25d111f13cc64c9bfdf855811a51341153731049ee5439348836c39044c60824080feff53cb471346a59efbd8e9063cc9810cacdc2ab4503b2c30a6ba5cdd39b02128449e4ede9d2b3e1c041a3078fb03d692026b48ad264524c06cc5c6bf11e3b3c5cac1425f6f30f3d5c63f43819873e6df4bb1e8b75fd8a719c17ebe992beb1ed41f8f77cc2ed410c961e280515b062a848fe8b7fc9f3ad11e63db6ef27a0b5509b6cbea220a3ad93256e9df61025732f11ffd86628b7d5e0c01553cdb7ce7a5f2f7a9731f757e1bbb6d73a9e1052b26f131b50ab07b26e2871ebdca7249124354c252567cb109ed3e8a1ef00e7027bebb4ab1ed0daa2af5d738b5f57ee5d95242803264a7d084e86856abd13b5f62899f2001b4690c838255f0b491c8fe7a8769199e7258dcb26d9b7f81df783d668a80a16f3e623a1456eba123ebacd0afca97e1b6be03b37fc93a1e5d1ff717670438906f8a46dc04bd82d5f32c2ad9a76d08d47e406b1463fe6680fe81c2c02eaf6a04761626e46b330723b2dc081a1ef414bb17fda9fe8def772e4b4d5371f5bf11f9da69ad867bb9a4299c2fc3e3aa6ff0b2766bad19970677170ea0b017ec7b223d5afaf1a268af0d645f9f900b85091bb14e698004fbad2402e192bb057c16f4bd572414ed5c6d4eede69e367c63c5e8b9e67d95cb6b3baed4c53e084c1bee08a8fb11b1f68c713f10ccfb8a9b9e9ab8c0c83b1c3d66782910b79f552cee3c90866c1e2b69b009ed21104140b66b154dd14e6dc9cb53531e20095ea61c883bdb6c99b8d35e5fdd3223ec8f8e2285041d7827d4faa8bb0b3774b03f10a642aadd3e353ea1a038ec5ceb103254eade58816646860e2b2316d9873c3681bab7d4e55e27ae32795085894f1a74b1660d7be88ce72b1818e0c2a52b39d324b8764927eed5541570e4d5a1ed0a6551d7df9f73f43616e85b8613269ee41f4f2567f19e27bc0733fc656a8fc38dc95e9b43a4a0fca28dd8fab67c6640d9734ac767ecee393bd0d2fe0f6762a71e3fd6f21a8c2f895b33b5616ea12f90a233f34378e0fb01791cba600de53c9053c18a703cd1fcf08633b51457984fa8f4cf009dee44e01c81a26975e05b63316d9929572ef02e8d4202f90fdd78baa6616b2bd9079c40576f619c1db26bee350edb0800267f657bd19561a78bbe4f2ddabfb4007111870af6b97b38dac49e485a71ee93291673e418313cb9b1d4e6d91a1d1e4aab797849ee6ac14eb9040f10411e4f60b94c9f3c68df8bf95dfbb6c523964ebb26435671e7ff0ef2b645de02298a9b3c00b62b01b78e8e38cdfee12eaea14603832b66e426f572839d8e6b87033ad01d11c4c0b60446c9f4c386974ed5c4485b82b771e82a3400b95cf7266cc85b4e71a8cd235650497d284f3e19b70873caaff575db0baa5d130e32d4d4a080ef1fde73b6b0d394381b6af9ebf1adda2f149cd5dcd306f5540b56e5415b21100397b0c2480212865ca3c17dcadf069775fd9eb10cc86baf8ccbd84f36a5ebe565bf84a4fcc249549a2680312a4b867002f7aaac0cb0e3a816fbbdbe0de1e244703446de915371d38c1654504872b61b73835e8e4a8989e1def1e18c83ec32ead2a2ba13cafaa5c6685304eece805a86cb144786524db7200ff8ecd1bbfe43c22dc105e8591583a00af04132e0275fd44558828580c8061b52204408630cb4ea93f4cfd41354f413f33b6800b02c952db33b2a65c1178f04b51e4415fffa1bd2fde3ffb38c73dac215076ff3e3034964fd67fc7a4dcc639c4699da2df715c7af199b4eb9d14109ff25b3d7e5d9df1eed76c761e7c0c2910cf036ca6e6057869e79bcb22829bdb93cd1e22e43733b344ffbb917680488503b08aae49590ea4de32fd6c1acf584f6b00ff72cafad17551ef51f654b0757d21ef856bda846845d7a68f3b6a522d33f54bf4786eb98dc979db29a7b2ece99927a021f13e07b358b23f3eaeb483e09b951fbe75dc4b390c9923eb0c86389107cdd3ef89e55528d31bdc75fa087c1bdc21824c3ea79395b498b6649c1c9e9a818b1abcd2cd01cc0248913f518cb35dac55d3e5c124f115cc6f095c1e830e2fb0e81228415f7b6bc9d611de131a05cae7a9703eb07179b65dbf8bf199598fab040277bbaf3600fee97926c54b8ad432350833eead09d8147c441d3167f09407c8031921001b67d27f9ab429c7a34c0d37bfa7fe06ef8a86e5a61651ce5af8d698e296a6e6fa4e49f759f6723d4654f356b007c5158e8e698a7be77aeb37b549753a275268c0f897302d55e338a2f517c02d41adc5174be3129cb48c91a7e5308517f293da4d6804eaed83a19db44b22520f0d7d672a981a4862e91b0a70b03bae56cb851b3c2356ba654e318f07e0c5b8548d30f647376e2f06eebe81c0a1c535d1c3d70d956f13a79301554430f7ccfc1eb88278496aebabf0518256bcf4ba524a5c77ca0e427be2e703f551fdb7e04cc4dd2c5a9bb3e620b76eb0aa945f32c9e59925d709fed81c9c6c788a27c1f3dfc4a7b8fbac5696785139df065ce5c9dc89b4e704f6a296794583fcd2ca1683195a68bdb8da1c88b1000aad0dc91691ce7ab26e2f40907731ec259c55a128a0ef643900bb32d23040c52091aa5fa9ff6cabe4c22cc9d06654197bea31718981d4ac6fcb43359372954509894fef7e7765b1a5b96c599f63a39d3406479ddd44dd2565a96c65686669853ebf228c42d0869f86d21d6e4ce81c0d75469cb319c28220838fca99ba242bdb6ea6d7a2f1f143042c15e95839384019c962b30fa8bc0fe3fa09b1e3b5e14858f2e42027dbfd27ca1a0525d38841466ed4191cb09af86c25d4541b09c0e084db4a26952a4dbe27ddcdbe861cc59d789b3504382080f50ce6abeb83a8e4e24600c6bbe61606dfa134bf380a4b1d4c06554a32957c263b9de4ad58f7aa5c726581f59f8f957ef87405c1537bdb21763cd1675fbfaeca9b629b061d0c40c573cc3b9cf3f2314375c9e16f6db88d9186fcd9725cd28cc9a4bf73775aabb719cdf332b62996c72cc49283932fa4696f7ed3e64b153bded8e5e43ba8183839a6937b0d4845d4963d84e2c127afea8345e050a8684b8cf008737f94fade407511ed8070e714b5b6ec91d5682b126b0de681dc347f2d0a16225f7c5416ced34c91dc9d292850bf14ff3a462c68d12de14b2e4026e4f19a0583915de54ac2e99dba6f5aca0cea51cf271f6e9cd1431803b5fe3c5645691628864e7c196598671357064052d0c336fb95383522cc7bba68fd2466194ce27433b59180bcd9d80d632c2d74fc208f9a3ff6f8dbcffb1a925edd66af725c551dde7b1cd3bc4152be875e48a1eaa94812d5e719f1fada5d8498102a991a828c86b2a4c693291ce559efae4f07f58c947cad5a9cc8c4c806b1d97b84c0d237a40d5e785fd66db9a07cbe59a8bfb6d6361d0ab023910594296b201b2590f111877d1b2943c9705fd2ff8042d496206eb7a3836122ca4ac961db17999b11b06bd08f6ea08ad6a96ccd0229d945316a43f1079bbdd69a36b509ea6f94f8b4ddae731c81ccd344bc93288f42d07e78b6247888efb92482f2927fc5849b483e454caf7248fc0849ed6c4177378b4eedbd52963fa4b99167682dfd4c86c5ba1941166a304ef4e53a4de2c6918b2ad4a1eba5a20b5de66da47e53401cf6cea2e39a9b27adff980d65f6c7158bf0d9356dd9e7a7e5619f898baac03237c5d5ef44bc948a2a76b0ea75fa7b25f0b0bfc6f18aab3edb0ebc8e197773989997817ed6bffc1055a0bfcf372d3dd50d5c24ba03f45da61e23ec8fdd8345822cb012bd3cd3ccad2c5ae2094fff46a84e0645d158987c3ac1534e88359ee7f4096907b40a5626138f9d3c003cb7e8fd006dd1fe90bd64d9a73a6c78e1abc1e2a8f27ed3c580110add571df8d8508d70628224d430ebb3dafe967989242ddafd76d04bf039f5ab698467d2f6b6aaad39ac8b967255aba67ce93113c8ddf90a80003b96b7f92fb56b3e9330a5c22c105871fb42e4c58d3a16829c1a04bf80028ab71b4e000d1d4d0c39b5655b3e3fc07ab40a288506c0ee9f3685b73ba4c944d10f9c711018a36248f68eade450ab0ce537f507c06adbf6d1033b8d509dfb11b2d735720fb2cf1dd9784fe2ed7cc876769c3145c25b73ade84fac1e36369cd89c1bfb76cb11ed9a9e98a75c1e076f6e46b6dc89698e436358f0eed48213fa6d42d40cb62a7afac6ae629a436bfae1e07cb81c5df70e4db21218a40c54a7844b29fcfcb0135edaf1b5de0f317ea1f359674ddd9e9a0355b01fd28d4b3361906531922aac9144adfec4f0f4e00468c5714f4d7abc3d42283b28477107a4dc440df834bebd0502bece9adc4eba88048ba7bf5d24f658c16ce02200c9d91d394c6fb5b7d7d32ab6799e267ef544259722df279bf1d2b644a8c9586b62af18a48bb0c4dbbdfa05ddbd9bd7bc9dbc9fb2bdedefd633d3ccdba172da6100860a4121bdca62cba7cfad8f2168d9b2f96da099f45dbbeac042587ef129244c5b98e8b5be4215c722e889cdb6415aba1a82fe5a00142c5bfbf24157b5fa3860c4e7869a63fee8fd0eda5652c3f34a41a5bf495ea596442b57f653b37719865d9f51b3c87a6b3b7192de85f4aad9cb4b89fac396d5122ce15edd149f041f9dc4ee446f8ad6ca944d2777b89297303b4be571e695072987ac1604dfb1e14ecff8c29914dc7d463d37d6d764e093ae588d7b6515ed71982efb6eb6920ea32c54fc6a0f3e33cf8953857b5cb02ed4fe109ea7ceea5730816a2230048b1aed9cda6074283fe3504763656108501aa8529d24454ddc10566a6fa0f4fe242c5d472b70a483b2c60a4f424ccf372b589148e5860005868c063368851a7a78b334315eef8f438e88874a8cc99abf6190d10f015d58c9b21b5d0335b4b19611688b36639eb45f01c07509b16d9c058b27fd2189312bcf45f078962182ab938ef1dd13a68877bc9f7b05527ea925bf63fd8bcb5c3e5596e87966a213b04343d22e963916c39074ed53d6ff71abd4aec7831e3052003d01e943ef6def742a38c68f985dc9366c83253361060a3fe668bce3661efe25e0c511e244b30e9ed7ea85a6db45f8f358297c94ab922dafe9e2936a65130c31adbf4015bc679b1b56617e377b6fbd3891d720b7455914f9ce12b102aebe8a31049a8c1b744ee97bb1527b9d6236ab41128acd7b08ab4e30c803b92ddc9b2179692084655fd6757aefa6075329aa3e1e9a5c292154f6ec6bf9aa8cad8b584eb449b088f133ad615ee3200c0ae1a0f15ace4330641482f68aefbd69b7c40babedf0f2120c48fb9973966fd33bcf2eb6407bf4696cb117990333238d5d1a5452f147f611dca1bc922e28dc06379bf4cb08d4c39b21e0deeb5ce0b48ebef82663fde47eb0f26d81f3b8cf8089b4dd5607f71440b018e971d8fc789c0b698230e5abefad8559b1807eca26391ec140ec20155696a06e8b0e418ef13fc372807cb961b182e1e801e8264611d4951d9de194a6407f42856ddca96ed7942fa71ff4939786ca48301569186b2e284d6f2985074b072db4bd34d650cbb418c75856f1a61d20b5dbeb3829d970ae39701f6f17e8469c2d619e483e964e08ebc02a2c57341d25837792891e8f98877a1b60961aa7db83db2a936ba3c6a93facc066858f360137f71cb9aa2459d113139f853f25add72372d99e0ea7da546ad47e74863401830915f02a1d040d0d36227292e9edf551d509e4b92ee9dcd3650a5e356de6c3c386490354c01b036a00a72f08a8f5b59f9ed921aaf6bd13a1c3345a2721a3151f9f54243f63d12f933e3b5832d758e9527963f2d3075201135a2b3fc893f795c4659749fc95ae5213a67321d97a334495463c54dacf7366e57df18a322d6adb4613d377828edf77b326d11cc433c40d0afac76366c06258af57b89346a81d6044b22e5c99c5f9d4d25e215612daf1b4f1325e631bee5f220246a7df7af6ae1ff568b4a8bb07d45fddd1faa7b8265bcd25af3885bd745cbe9348f8d1f3ae46e02c384e18d3e823e0b6d1bb12bd860748556b0c0713bf369af364742cc7af6104aeea92e2a935138e7a70e38e77e95cd7ca658d6ad82bf76fbfb694c07451934fd0688f9b0b22c296f605e17d8d667569633ed70be1afa10d3385d7e28379628aba52ec28d73c4b0c8901cb86b3c08adc167079513d373ca454c3eb105e5edd8b4ac2d0a2cfbf45f184195c194ea0a47f29d8e1a53f3fbd69a88d801915ea04520898a4dc7ace44e7d38c7da07cb3bf34401c0b4d664064028143a205217d94b5b95e0eaa176b0981a34d84b4d469c77c33cb7bb5c087598105dc4457c365b8b4bdd844b89ea0bbfe35b997107a059dc7dbec0b8889020576f4b1dc8acaeca93c62c64180d6e1dadf05cb84790d6e4b8714a34f0f1a318115b29741246ddf04ade7928eaaf267e4807a9beaf0015577ed8c490a7b09c04098c3ee428be85ceeefde3f0aebf978fb8241df9cba482d1d17d2c73685ccf5a406b519257f5ba9caeaa1921971c3d04cb9adc9951d177caa8d6698a8fd782bbc59278ca2abc909c4a4708cf6f78b9a5bfadcc2ea0fa71abba2e7d74f0d5c5d585db89493dd443f6fc4f55763204503074b6b73f13473d6fa8b7bc0b23444c389915a60719ca77a9f97909b8e667d66f92c6f2c7b59d0ccd9d578ed34cf928b477359499ed5f2761695c938bd29f94d36b8e5fef0b611715a26cf8c4e958c93c442b39168675b97ce635f1b0accb1782332ba140d52c235051bcecb46781d5a063a0e8f335aed60c17d0a3af2eb6637f8ad31dca163f3746254d09b3ae232a000d1cb860396552a0aac286ee40d8f31c605f573f18c2e6877b76eb10b9d089e28751d9b883c7473abea79d451525b52461c4d2e5173bc2b7da9456c45f15bc431d1a0bad71caf3c7c159dc97fd019c0b44cf65e4d1aba7d343d6666238bf46736926eee325b0007862fbb33a525510c4b4285356ee594cc3d50fed72c46a323ffcd0c91380c9034c31b22122262020dea39ade55ad66bdd3fb3fa0d8c6d8930930e867f5f1bf2c1977c5fd48e49d8fdbb72611a3bdc20672f080933974385475b5f3911f4370a8e1c335b9d70df2b04aa3ea9147d8afecc50214840a4eb20bbabfdba9afae985085bcb099f589f8e21526d7770f6ba712bdc7087ca68470bee8a16cdc16c2872e75e81f3872f52546561372112a6fd52c047d146ca7d6dc8fd22e181e3069cd6f432296bd2147bb3c6f6d7acd3cd42b5a75e1e7cb3f5ac9c9951e1fc7bbf1557c45603ceb0c30d00ac2ee8d95d7493494b0e574f6152bb54f33bbe55e0ba7c3b3ba6729fb2e214087d6f5a9339c8c912b98fcdc72e12d8337605bfed9dc9916fc3b4f60fe127445954888d4789f6ca1b681ef45714d01fced900ab390a58b08c5d244c3111944a0b252aec87de0ae6e8ca83e75e4ffbf8be48324d235abf1e4a0787b582ed401f356d9ec1551363df1218b31112b279feee4a4985c2d5415a946f24acb37fa13a3a9d249b374ba46830066c8362bcfd76bb8d36ac11136adaa279222ffec3146ab34937a6a261a2ce1199c5b8237f392b15b2e73d116fd4c5042d05f8843f50e0567a7c91becc6a2033f1dd14a894bd322a0cad5484feb6532ff8bbf94d9968f60edf5fbe45c5a8a4c2e8c6e39aeb458e1ad4dd76c7523e3911604978a624d514ca524fd7c39d28eec28c37a4c6086f692429ce0e0e1115efa4c544eeab3be1dfcabb74055d9dc33fda66aa4a1c95b927d3d4c546f54149083ec2984548b8121f832ce023256305d14a0c69678473e0bf45ae2f651fc79e521845d20c7c078e15a4d9556077ba9a4d20cf82c7f8e3dc6e45b40ffc07b840a0063531f8fd2f5b884a6064a3a177ab54f4a1804272477391dffb4a9d96e2933f73caef92b305976be681ecaa5d68e86b119199c0256b38381f7dc668921f70652c7b3252b3d20bff39dce64341c00006a989132ccd8fa9eb26c228f01f73b143256ae89f0b712aeda031fec9734d4e3cf916bfd281e2708fa17a0a8f8eda2ac4b1a4402779afc91ab210d1f78070c8d76759aa5c31a6fac8a77cb83b3f679214da5e47e13128b528c0f63c56c3470fc680be58599ed34985087a99ca7c0ab3a34ab7e8c5408703dfdef1afd0dbaa65c84f8902c7b9469a42d9a837665c39972a3338d3a7e11f468346058401d50c00bf1b088481f95d1b1085ecc748bd30dae7f863aefb3a0c0b46a00a7c2926d8a74083be2d87403681bd5297e6f2ba7e04cbd4bbcc62f9bdb482564ae143a3f1dc3e5b4783979c97990c63318b91bbabf820f554895b63ed9f009ba39db964c2947495771566330b3f51ee6b4136611398d72eecd90a56d84aef93ff3b3fef8c9096b2bc4467726c70237335b2724dada6741811d4bb9844c304dc5a261e6f8a1bd9a4e90cccae634a223c6c80c57370abda165b276ed03000ebe06ce5e7fcc74eaac4b57e146acc56e94ee5cd6d55a15c0f97349d1121dc3057c6452cf3b2d9e3870aa99ddba9ed7f9b8245134c469172bd5dc164e1d1c8e97c45d99d320e6a581326d8a88e9ba2547940eba1bf75fdcc5b6bd7ebfd936b2419ff1ffae4fb121b1ed5d0ff72b60c13fc044062194cf52df7a7e0c366c5d9b23611176b80f6d729993a893cc7f8b144d2fb29e7d383f19bdabc29f8fe8fa7c6bc620b9c02bd40ce28236723d3c753e7a91a9328c0ea5d3c29cb5350c649de08cfbbd036ec004be360f466f3bb236230ce200dff92fc5a8176884db64d149eb92c8a97d56baa9c2a55fb86bc20c954616486461a3cb6df8d098e1e5b09fcbd11e0df21a43ea407d1cb024892579935a24a0e281ea49dd6d90f9e0819093cee03bac7fab823043bd471099d4d85905d495a9f46206fbe230f0133daed8d94b7e6a070f5bb4cda7b2a594b5ac7667236da378dc9e939c4abd544d961c4e2ef6f31efd3a7add1cf950ad040f1ea10888d3d3595b28f5a314a87d1c40fb2775c42f7091133f99f92d2323daa9289811294b43be3dad02961e690a3ffb9581aa9edb53a2f5c3ca094a5a9c6b0d9ed3f3c9c9d0e3460cedec48cf46466218c228271c2cf0ab61046557ea5d31e9c86d87c32d737522e602200e001074d30d49f0b3f2bc1c217499b55f6e31dd032549b4bef7ace9e98dc202001eeb5712276e716a08e238fb38fe3952102916ae96a938e72fef2485149582e21e7a47e69311fae084502dfa2a92c3c4fddf605e46ccde02d994cad9c913e8347073dcce5583e6385cc20c0733b86c805fa1cce011bc1af7b16b99478f0a73ca0cc693f491463e7f0ee62b390409f79f5f5613d76ac4004c8a5858082ac1308653df7e703addc7095e461a784d9f40e0d84998814a8d2a71f822258d9a6195963ba2d8e2e347663d8c04bed223c2308c67d3c4f2428fcd83bda113a2851d50478ac66b914c724c99dd05b7793aac2c36751dd0304a59a8eb80a84c7cf0a2f43c66a8c9410add2f5bd87bb375f0c20d64172ee93ed348e1d246758d222c5192513cf642ca322e75119232c06e159a6db667746f25f1c6caf4af1e68a593cdb3db7d4fa3a15893b42a8056ddd6af1e3d5f5cf037d8dce61f44d13fb16206d1a9fc2d2f1f289eee9d7cacabc8fd3e473d75263bc815f65c11bb19e9feabf337e15940b07b389c6c590ba6df1f2aa7ae434e089f98c1e32eac731f66cc0c1128bca751fab83ae60b241756e9044f9d9021a39592034d1b11023f42ebb4f88b7252b509e7429c3147c2f97a088e1623ba7ddf9fd5f0447d576be3082f40d9b8e7bdae9fcf2548b345978ae4e28af4c10184be1b888f751515b26ca7384486bc2e315b929eef56fbb7d281ea1c5bef1f1fc80464b03daf839e037ad16b67b01c1a4ac4f6fc3ba8a3c8b1a78780139ff021e2e66e888acdb58a3b849d11c5a90ef5c6f8cea447176cb35ce9da1a4533c2e67d2a6034ccd30b2850eed619bdc7cfdade9ad91de3119996e032a4c7f7a4591e2ed2aa4ae873f0e478926089c820d9227a4c1d112a500e5cbb22a4829537053546ae2da349089d05c88ffeb71b6994bebff4d773dc7dacae3367cd35b7e1c95c24524b7230475e493baa1ad4ff6c84f41b494f7a2edaa28b9e202c9bdcea7b7e1ba5dde19c4fb1c932b601ba1a025345300452be284667738bfeb552ba9c4c1232fb5d823d39a57f95fbe43569ac16f9a83f4ccc9dfb90d452ebc64cc4810f3e0a312fce653b6486514cae576657510979b8b3df8e81edf628d6a440c7590f383db837992226ffd2ec52390ae5ffefe1079e6e2f9ba342d9e012b33f64d0c9cba61cd3020f93a95d5abbb73c48e604733048b4d9f87f4abaf5d43ea24eebf71452b27ab82af437884b201bd59f273a446ee5520c4fd5f20a3da63bbf9369427108dbdf19d39b9c7a8e629f40965901918a2b098b3ac984845e7ebae6a5a447fa96a08ac6e64d90de5db62224f647bd3c101b2e88c65db5424f7d260212f44a5ec634acad9a02013d9ba43c834809b2549782a5c7efa37fcd7c778bfafffb96dc81adae8d0f760d5d9f067c7d2c91ce70c18b3327032a36aef364c25948372d38aed969ff97b4154ea4dfd6f5a61cf1f3398a50396724151cde34fea43919c7708a276efe2d7c2aa71a93140d14ad6450dd721a8fc2700cf19c9fae9d9ff99284224b3120cc56590c0812cebc5785c1a2a7f8547d17c61ebbd833b97d8804c52c480572c6768f3fac9251b81c8f257b28c9849f49c453e218a170e21dfebfb9c37e4a9474f14fb69d399f4e94656890a8607b9aa09a0e00dbc1ebe13f437c80f145018d6b91b58ddeb516b6c85088343a053b3ee88cd20af94bf55c2f2f45931998f38129d6549013650b1da89dd0b4e77e31391372b5fa3fabf3d8b477fdfcfe7642fd4cc5e0e58e6f570428342d9932848e229679cdca210e5ec550d786950538766fcc373c99df0f4f7ea5ee3a6212becac4506ba79aae9f81277875a4bea4dfe7b401aa92322de57af2289cfc55a067952b47b853c2877af0352402aaf00a9edf10547a6146cbb9b3b9676af88a2c75811f9fae71fb083a16c28a913798a6d0f800530b5ff8bfa178bfa971fa0bd318f1afdfdb98b2b04c060bd17258759c5ca88e96b62095ae37b4134534950a3c193898800206956ed4998527065d7c074ee7376d46771da3e5a62dee1e93adc8af1c30e37b66c8c6cad756f4616cfdd9809943398a66afdce744d58f7fe9a71a4ff68ef62e405a29cde44fe3e2f6fb842cb68250f037d2aff09f58a6f047deacd87de24a9190791e56e2cb0fb8f882d9933a03ccf06c4f811a8fdd552e5ab042f67b86f074bd9480ae5766473cdf25fbd413215140c5df6b24aa2d4219f56af24b29527dcc68434f20c254638d2b0b127072f3407dd2750631faecf7dd6b04e9736cf1a4c43ccc4403c6684c0b7c8b220ebc96f6c9bc2bc09c329cdaad9507f1e3b4466a5b449bdb00776464a32ec974185205079e0565d16260c34b60cefa60a7cfc3f2bb5807ea4dee77f5e8ba1ee31f2cb2b17b759cc70d6e0722a7aa9d4a15eda3616bf25e57c9dae2ba21119c038ee5cfb4b0778783190d7b6049d3c3527adcfa2e24db9e2c441983c78e8c67882afea21a4e1706baa1be581e8e77570b1e62a04f2e6492bcbc4d39ed5ed47aad33e90b7d759fa2cb74d5d3cc10390fa66e7a8079e506fb8d3c95c95b9bea3d9957445c05de9c93cb4d1739b5886d0641ec177ac3dc43a832d8bcd5809749aad38a5c5c28e61bba1674bbb2e1ea7663fa3639e388f92151f29407e0bf844d8d473e83ba4527ba403c5e0af2a039e0aecc784ff9bd9649ff4619a0d265cd385e9b97167e3b14bf131c390ff9713dfc8256684124a2c175c9fa75db2faf8c3d70104d7dd3f9bf7fca5a90c56769c34d8213dace6fd07d8e71a65bad0c90b946938fc139b49deb8fcbe91b1d581e8cfe31ee1c6435ce173d42b2d7427d9c7527fed1bb5983d9de536dcf320be8527dd05b3f3a51c56ffae585fcb20b9ff250de963e69febab97aca455c893589dbb80dbfd7f266f6b2267d300ae07dbbe5985a6ad8e28e862f6ca5b07130595ddd4bcc3ec9767c050710569b627116d437027444da42e738c3a6e6a03cf1e113d22dfb21473050c626900f0bad7c6dc904994d42234120fdd3f1c37ffd1e45a0494dac7b02105d45fafa4484d9bf33d1a5c4e8ba3e108e37391260c20d686ed1ffa5ea0d232e6d0e1d4989db70dc1ad34911c356b3c708c9223276afa69ac08b90d4b56064a17a275ac514066d367691c740842a614f2c39380702acf7a686a9003f21cc0f32a9650b8876d921a8bfa066d21c79f5e9f9b8ca4a34499dd7ec505bfb57aabf841603aafdee837bb27d816b45600ce9c28323e39d07374445da41b2e0d2fed7c78bb6f92b768b44fd62e655dfc8fb35c444be04d95a5cb46687f62441e6d806b67c8ef6fd891619f55710183bdb5e7f294c8d49c3202291a915533597225c590f0b02e64f1c247e630fef59d1dec6dc6ef095ab041a0b04d92507856884e9bd30667a0247f33332e3705c4bef3b18db530d16e162530cf97e692039ca0d696619c0f72416b7c96ce4b8008b5fe28b6483d6d0511747e3b315db21a9b1ea83dfacc6c353624a156c0a15d9483dc38182ebc546b94b06fc763f33568b06a623dea384f97ee6c4af088a3c56b7ee51d0cb0357184e0f6c20e65e2a387030ec98cceed5a94781dc9e7245622160947c906c83bbc9ac4d74f3d08428073206ba12678871c66cbe3150150fd5bf13944e47832c4d28d549660094a63136e70d5892db379be110797b164671679c2951ac6fbbce81038608a5f621a755b05bce2aef08fe88ca31a1c640b59919fca5572712a93dfdf228001d71e9575b4fc6299331f03d89720fbcb7e3f14c5efdc0344e15b218e0fc5a3549e8e8338d7fbff9e97dd805d4fa67d6f144653fd9d3e6dcd5ef0edec4a595cc4f1ae853a1a34333d198f3287101cc5fd4fe1f800455d94134c44f7227ac8814b305ddcd93be626d301d09918b0ab0f803f6beacd1a9c41ffa22483e2159d19bf8d3cc1f740e1f869c1fbb140758585efba5656634b2946800018e8a3c819dd611a9d9496090a81f3d0ec2310e5057e9629c64d04e3792b3fdc9ac08c49144b28e7fa7b566189694d338a70f480c0099f511eeb44b27ea776aa9edbef9b3f452f7be22d0bed08a49b3a882e08853a2d30b6a3e41f828e987531592f7afd9002660815ad360fb01685c33f802133fd42fb753103ba931fa046d2608d4ab86cac9e6cc4891f0472bda9ecda6c26679c6bf1677c8108677e0ac2fc6725f0dc511bb938ea9c222b703878c6032a3c655891724bdd0d419da8e382d20be1020048e7b22821e726f755acfb415c0b6dade63b7d078c5265cca3c2b0a457716df08c5532e31e68df1c7632cdaa685000809caf426d1971cc2a1a482aff98b634a85937da5f0bf3285ae25573317a1a5945b7de25514f87b90dfee405a192be032767a7821c9adb78f3a50f98502de4f80da0f783e848beb67caa20782a5b31b911d65e54574779114e51cd74dff03f72bbb351733bce3e8a121bf1335ca855f707ec57382085db68403dc0ed41643f829c887e0d6b7ebc23edf48bd70acc15859b4118de5889cb60fd3c28901b235725bb3c62df8831bdd76a136502b1d3297284d2259bdb7451d034397f0df45898abda3988cf4cea667cfa488b1d487f5709a7c52effada0fb2cf548fa0242f14d7a3f7b5496f8295649f5eea4b63295e2925d7e725f3179a8a7b611cde3ad7e73206cc2f240d44e040e6a302b74e5259b4df48bdde56f066d89949841284d1bee03403b6e00f2351f97fda43661650ac42a9d03ea2274ed3740720b6baa7e9447deea855293829f75200bc02be7a85a3510db872ce8dac55cb58774e8e5591a72330e982cca4b9c4ad8ce3798898988b1b393d5d68084c42b74417682a668563ddd38ec6a67e3ccc0bfb650d9bb89601802f9edccee2f200ac2f4c2a1487a38b05e3724ecd428c9880846911b22b5d2d20818c1f9d3210d99654a65b5dbaf3b0467b913b297868ec6d7b235fa7d0d3c3fac2c4ccbe1887cc4f7008a34301ab60458ddce6bfa9de9ceeffe01a69e351012960a901963ad4b70e6d3785e63023a219308ba471bc4687a61953b4ba22b8a564ae7f8fd37c5932de67dfd3957b8b140f987aa4ec32579f8a78d11814aff2e6e160908417f83e8917bcae5d7562ef089c5019119e7f853bfe5576cfbe5454606d8327d62f06d80751e3b7d749aea66dfb164af4f4a6fe7213204afa6432ca739335eb94d5634aa34e2ec5fd13b795078f5eba3b07e9942439ddc2b8fe74f00a9b04bf456566542575502b56ff6b51278e54bd93ef07e2fa1e651770fbbdf19d930b5bc8ccbd2b4ecb1a166f6c141dd1f0b5577fa87c438bca45dc649891200bd269d76295b82f7289152d6d409898c7967cf3b5e3b8f2dfee6bd2b027e7fe11fe3089fb5f568b262545a3ec9672f92cb1dca1f96f8bbe1d059f9e499f658d52528a886b17d2dec4a7282d40e6885d65cf04134aad3ace5af709a499d844f409e02365ddbfc701898a7e259b0f375ecdd3b96c0b1b30629d578c60bbc24fcdeda7d84ce19a65e7fa1a0efcafe6a1809a7606afb17228342c54f19575bb0b46c01447734dcdfba0257493c4bcacc5747f6715e36611239fd55714fab94f0bd0b0497fb5378c325c3c29238d7a5864bb118895dcb6ec91db93b97216adc4011eae0340eb1fecc460111d5556466bce1bfb7aa62da0cd1b8901f5ec5eb973a80132e2227ecfc2344dc543170043a10de1adfab75ed0a81d411575ab55e8e8aad113044c63320065657ecb8d147054c3389a72c857805cd2fba7a8f45d81a54a4679a545efaf618c402e536c800782e06061e2e59a07f0b72da60a2bc5f58c463995c5746273c48efd45186618c187d52f184a8afe188ef61171a9515367d6d82f05aabab9d0b48b54fb23b0abc4c4ad127bb245f0a33d964d935e67ced75041e3c29f1824a0e4bfecc6dfdd56621d97a59369552f6604b518f3b2432e2f763ff0214f9095680c0919478deb0035e9d00ddb7170e0cbdbc705aaf6f58465ebfcd911b0f45adace18d20b924859982d56f7ee34be00f6fcfb3baf00aee96d06e67c1bdcb72367c6c569e1e47361f1734db48287c6d0144bac217e2d9dd752f2aaf9f5f20b7cec9b2a839a21836daa93bd5afa788334419f1afbd9a37f576f3db9545563be4b6d9dff35f130531caeb7996624f289f545f1ecdbde5e80780ee0c83429241d435cf60ef849c029521f9d54bed1c59551585c70ddd50f64fd835d86769838823f6e8cb2dac046b0d673af0f2c177c39fbf6002e5af2764fdd9ea9678e1aa4423d7052e002fdf8fc85641c6ddbe2c868a4c084aec0bbc7cd87b79737cc2db090183c31168a128943a52321b980252b1d7149df2360b5b84bc0b83d5a138530020e6b2a408535f73e55cabfe8a1e2c006487b3cfe1ad86bb68e9935ea579bed378dca3e8842988a75e6ce028ecd7b6e912980042268cc47275b0ef7f23cca46bf85d825a436ea3b8304b25f22b6c3f6eb49f6cbdb71427845887dd291c29e5a1cc9b8ef4bbdff2cfb09e55300b31d2796598780a53cabe569386de1ec946f8dd82233bdfec353e5fe9c57ad9df262a4e5c43aedd133fc101c666e73b9051121d940b1b10af0feab598eaa819b9368271120f72f5e032d09decb789f1849c6f22a870c6f9a51466678d2256d6edf45dc455a9c89d84ec6322a50b87535d5be4e77e2ead220cb626eddcca761642d27b2152cf2a427686b3f260dec45924b8705c9d9d6d14c99d9d8591f536fc910687cf436b743a5a6021e1411c40030f7d387929947c3eefe473d4f1fb4a4e77c090ab8d1f9f0dfad451d342aef8d226cc85203086fb1519c406390526e6d67cb8533a9fc16457bf4972d1e8a5b01f4d659ad7883936796143f325947bebbfa6e507a8c7d7e38affcf5c63d79f5306717ea10f06bacfbb4b1a7241a0a43128b43f2afee742ed3eb55b95b8db69124423d040cb647a0a9a9fc9cea4114227990a5b35fd9e6da98d6e5464b14f15eb2dd5e08ca5a5cb8e254ccb2dd899f9fd074609fbfc4a1a32ceb504ea00f6b91b993dde8b147c93a8431e24c3682d7cb804c8db769f8388300295e1a18cb7834a7f433846fb7d0d71701bbe772379517f3a727255646eb62e5b087af734350e0ce2f84eb9ada51d04826d41c8c764b8694d53f8ae9ff4d9e37433036803a73a0938191548d5cfaf68bce16013d3a913613cffb14662f9b567f8dd7d74b25a31d225b1c51f085478e1af856a8f19ed180c639ee096b57e714aa2ef57f897492d9a3977e9118f23fa02402834250e3f275b9463ed69993f73c4ad7e5705069175f0d6325f841e8797f69dc85164a765eeb53b77c17919c29576257c69a980a06d647102e480bca19d11ac6e87cb51b8c2d881a2103dcf1f4da6bd631ad727fc305b11fa3f5bf5daf96c03ec000f0069591b9737bfc1bdf968955560e9d0bc9b51a6ef3d05137430672b2cf408b670a7422e26d4c797b234404dad350c4aabedad4d78f0c4f6214436cc64827a1c3bb8036df7cee0c2e2948e06e28cd4d201b637d3715b5c48c417b49aa3fb5fd27e85dedc128b1d60ff7044d6ecd1a5db3405e8c7bd417f57ed956380798385e501ade010205fb08a859ea3ad9c86a17fa8490b683c3a710b53bbbbdecc74bca2f21b310913f80f4e11aceae0c3db3d0c0bb1612dff73ea239ecb06adb58b26b1d520959a7a458a32b62e8e9ee6b33e2920f2486faf9c3c5251da9251a1f7136b6905433cfea51f5f242b8fefe0c3bf0d02005e171505cec91f20790148ab27331fb836a782436aeb437f55d9add6a83ded564650a5510bf0d03bd402cb9294af6485144a8fe870a6b1ce92979f8ab5426934d14ceb53177a5e756244fe65e155ddbdb0be720b47e1557049c20cf3b1b3295c64d5dddde9f7085e156f862031212a113eb082412f2152c1b824aa16c000a0e9e6fb011e8f9e2a9d9fc9f7b116e5e8fe5af08859f4c0953b6a89a06d0c71bce1d6100b5e32e4e4d4f5d43710f87fcbfd8db82f5259f327c844d7101ea21410c0c37c4901c6f6aa9dce48b65ee2866814d0f95ff39b5bd774d31bae4b29d38cd8b18608ecd14718d806d9d520a1ab89d16e8ac95d7d681382c7590c49e79248cf5c843706a7914d669c00c95eb5a4b4d8ae77fb82d20c4c456ebbb07ca94431de6c2cd1f1d7fe68457cbe18ff3a97b186b73c26ba90b489a05591ccedb21c0b8bd981ed0bf75e9c0c54664be208884cbaad160c2751ff2427a33457db35e32a6d7af2a0944fddeb92047bca5df539b440cb4fce43f6a462317d21ca3d654de8e31a2c7863b1c1a4a23046647a40365e5924f22ecb18c0370fad5ffc816708cdf6ac7115efeece3bfa9f2ba329da1edaccaf26768978c79ce62b4b6e241d59acd67950f40fb8fa9386831dc1b6e00fa167afc67969fb49c79b10aeff5621e2fc97ab157d0e62385c58873ad50d3afd5f5b7d84818317d23c7b186a0df8655d48ea12509f2de4779b6604e657637971b080e6c85d24516c4da061270f64ee558812d7027da04abd0141fc828a7de4fb4fd94e6b8849b6b71331cd640c0c121f569f995993889e1e3cdd8a2f6b6ba2b072870e34de963f81060d508d968acc178bb6a9249a20c2c9d8ae471a3a46d56500b36b98bb11f099917e60ee5f11018035d651bd341c6a34004ed4ac24152d9a34e1058811e7505cf75859b0f77dc960c60a9af64c8e7a08b4ac3cb4af13897db313cacbe6d6296a2185fa49d1a51715be6f3d8aaf48990e79d58aff3c21747f7247f5a9c9ede62eb7eaa75f0a74cb103005602b4ed1e4be685caa78216be2a96faf8e99be8944a3603fefafb494a3bb18ff43d537174e2d9764beee412846e1119b4bfd7ab30843efcee2de5d2d679917147d94b28e41969512d6cb6d5279d878643db97a0514334797c49dd974ec68777d96df89b31a9c3d08abf22bf318275f02a2fd2d603772221c0438a8b44698ebb94d57fdc825282d4a4d433a8bd49ba9fe37f1c8911d445970659e62a37ef0f65d7b45e91282d657bfa2e39fefa7e58e0f63816c16a9aa65c24abe5b9a49bd348285aa3fac864a555f2bb571d1db51caa09c4a78b06187a0cdda422c2b4cd39cdc3205f5d765af3e8c36f254dfebd278b5348e67ba750df4aca2fd57ce309fbe70afc613f8c5df682c1abb19030d903a478bd6268afc716ed132bbfc55b6c22c24df5f0e80a46b9ba291a2298f781aead537660fdfc32a9c3af1ce201cb6d1bfbc02b9c100d1d21a918c749323b29b2406b70f0738434bc936b33044ab5aac5cdf9bc72bbfe0360cd8d0df68fadbf7fc2ded4b6c7b2fc237b15e5198558dcb23bbed6f0c491a575b07060de387c4a0b7fd2b41745d8e79ca400cc2a04c213b29a611e8e68878ad07e8bc7460d6b81246a02709ee51ce765fdb3b1ed7feccbda7b7d9930002dc156c6182b96f4e2bebb63249a4e3bb4277908d6fdc0833787ec0510bc857b7e356aaee5f458530507b6740392c77cea302c8d1ff226df206fa1ef566d2db953c3fe69c8eaff2f2d16dd1ff286909cc2a2e9b8012815ab050c456fa89189a2bcc24ea3d7a4e97f511032f279c357244d864011be56fe13f578e380e52e01d19430d3f73fb38a15e44da20701867826f1864ad05e76f75da4a9b127348ad4f4e02a8583be20d262e88bc41f0c320ea9724d4660119f6582993bf1fcea35a2a935d500cda8b20be4e6d40d4216a76efa807d36f6e7776f646ad80e673ac83c9b9a11438c72fce9301eacbdcbfb76d7cfb57bb294351c3815ab80cdf7d901f4692166a1eb9d2a020b8fcab7aa697308b4e3f10316c76ae56b83d8771d636d329cceb972159aa11f9a2255fccbbbb54823cf1d4d6ae854d9ee34d513dea5a5dc3048c9d5db0834db8180005474c9f2b128c1c6103157e59e297063afa927d9a78d18edd2c7285fb45bc4b62545065d7fb1f0acd0dabbba61d46aeaa56d775da3cc38a9bc22adcc65cd157229f94b77feeb2a0d1046361a2f4ffaa8e693b9670b911e1831002f0e048a6b0a1f8a3eaec9b597ae5488f59182cc1ddc7cecc88e5df8628e444e935e68f611a8f965952391d5a4eb9528d8188a258acfb22b61a0725f9d8d3cee3f5a99ccb29f035ebcfc09b96028c55c88600b655f493271095a4f3c40e3e357f93a4e537f20da493d8f20acda75ce57285a16ceca583200ba23ecfdbbdc66e9874ebbddfb5329bc0256066dc13398027a9165eebf6f96cb1a34b9155fb28ea7dddf00d445654e4822f831983228934046cc7952ebc2ab6b4b9e47f6687859fb49478cb458015214cc3e585a1395eff267057defdca7eee1d782351d9c4b5c11e4cbed76d26451c0e102da380fc3740b943f29c75c6a40e09f3ca4632b61e20b846b4a07f27260c75f73e79971cf8cb78cbc420403408a18dd7274d736f88a0dbbb62a36bdb92bf035c05d82fa19299ab6d4115b0bdc175582a4b8925f0bf5e65b25ccf6b6e1573f08997314c22a82fd0dec2db17daa06d2b00d6fd5f051dd39bb76a4abd83837094a73b1bc84d4c528a04e7af4f49d93251424829e0699105473cb04f92f0ad651f04b0a28fa8a08e9fce91ff1197b509ab0f7cbaf3fb2089c72da7d9c938c2618244fff3714e52592968503136628c0e0353fb3cb8e961bf96a5ec50d80a5b97529f1407a86ecdd1151a2193c3eec77d8e477495110536e246d781f7d7f36560f199b0d8e51c255b5089465aa3b9dc16d97121e90a155d98cfef062b8996b4f5ecae91e45f479ae6ea74b5c396ef42b0fd767612ef011215779720574b964cfd3a79adfb3394bfbde574dbff0ddc773b8a9b496ef98c48b59799ef24e2de689f01662335d2fa837a8f50215d84d4be8c495ceab3380dfce777f27d9a611696d1791e15df966a5d223bee6730c5cc0852ccd591b9d521f971d8568224ece403315da4f2c8ead5bdf58795afa3300d50d251a47345940cb3cf65f7a0ebe1a2d4142617a3ed0927da5991632008e76833b784b8a5089022070e1481c1d1c14ff6b4dd55f915ed45d33551b53beac2c7337b21b25fa178e26e86bce84ce223fb75f3bb45121869b43d2db7ae2408b8918b3b1334378423c6285ffb7afc6ab694a27d7503ed73767ac8689a6203d8900a3bba21f4a352efb9859f8281181f0b83eabe88907f7d43124494cf3f33788d53d77ee40f05a4cf94eecf9785a4671ceeb38ea3744b45231429649d97fc3ad2d0fa070bf80cf5103b6a67204c3b955b7f55b032a3b24400f4a53ae9793c4e15ea552b16de3e2807b575415b71364cdf72647cab4ffa7bb61ae9848c456a308b3fbeff658e4d59e69f37cb5f4fc6552f8079fcbceba8f704e197e9d6bd02851064cb8af259e37d318ff66ad3b7d11b45ef644fedbcd820d5a69c5636d2299e454f155526489175c23a1baef7ef3916d16c4137e383b3470728067a9ac5db1ea1194a4185434ad0a5476be2d17a3660c6351611975beeaa731972320eba4053de37fc386c2e6d7abec36b5c64451a37611b81d8736f63df3fcaff526f13043a07a996f5004cad98b41190b8401040898c4f5c7522db034f83435d33567322523c38b57279fb1b08bb4e51129b84f4a04da54f6a76aa466be19a7354b702abe97567327c4871c9936a6dffc6493109236077b8f239f711548464e9f9fb491e5f721251190fce08d0dfdf217978747ed5b28fdd7b4e56526df7796a9e83a767664162de5784770001d6c4ebe13690175aecebdc3f6c674f4aebef83f06b58ff2ec3df01e11b47cec97e70e84a47847922bcfc8bd2f0f8ce64dbc1643a375966aeb0e9510998181fb84edc63076db93d262d52e52cbd8d6690ded068c0b83e6d2da6b3a6b3512fa4851955f04b11b324a4458240aec106951e6803e96cd5babd4c7e028fb570771be34d42c7bd7e24bbcfc05bfed27bf3a7a27a89f57d4524f629df6ff54d7a1f8eafaaa75f9aba3b7572abf10eaa5bbc377c22816e9ebe1b199c9b6f71a2f7f244d81788fcae029aa672e433176f19e3fa80b0b11a46c1a23c7ef640ca4c000b5a872a434f7851ccbc4aab2dbd99b70cd18d599bcb28cad69137e9f4072b42c4721d66099605e12ed07399dd495d76c0a0a760bf0a0ee0dc82ff54776614457f32846653f03fb35b465ae972d9824ef6d27901bea4e75b591163bb3415d54e22760213f7da3cc9897db73463324c393abdea987e1bd856686e7a10577f374a30e1f4b6232e3063fb1cc720fa12e49cf3c88def0f37564a07de00a15f14223c52647272cdef42d61821376eec4f17c778104f33b9d94ec5c367b9a12e0969d7d33cfd3adf52d801cdb59b0e6a942b3bb1cd1fd629c9fe24435f0faaae476ef8c4c2af51c6baf6bbf161399164aa394d3e678c38f85c1f86e5c61134b3c19a30be1a8b76e3a005e239cc027ad93785c8b06905c89a4ed49d2c2c454c187486b105871b3cd640bc0672baa14aca0aa40a331a8ec7bd3bcae507c5dfd63991bc737a84a7fe5ee6ca5ab7fceb104dff446781c41b1a5ec901cb2093b17f8ce095b4215793b54ea0f1b9335d2905b1e2349c546ad6871db54ca44d034eab41fb70fb65446c95a6fc6cad9b25898352e127d0ae9923a4284a75ca2795a04b74e3bf8831b1d83f138531a8f993bcf96d42ea05fbdd0226ff1714fd285df4a7b75674c00b5864b7dcc30466b72da8ece1c28bd465da60f9de9823d90d749c473b9d5f8a79f5571215e1bcae078f7538e28e03b8f2120c5b5b4abafdb8b03bca042bda94ac3715ee74e5f3f29629750e22c4c9c2c4c5a1e90a864f37311236bb9d88f73dcefe11fe94e4794aee28248d07fcbe2891fe03db06a262f618ea7d5ab8390616a3bd98015115579f0f4d2785eb09c73f6432cf88273723194cef5f8ede3d3860a6c7722e05328df3704b0dbb927d8ccc5c2f362edc3953bc987636720ae14966432af6119f985af73f1883eed8832486fdd91932f7aa52fbba818d51a05abdf85cbf4423d08f6b3b1e89a3e043c8fbe4c3b6531ed1f3112f6120eef81e5379a882ab2e47618800611da2969f1d7c64e395b59dadbf9442dd589adba24d862e1ea508d18f9aa8b2518421890402a70c873b0b566ac07ca70cd9f2c8b77036c4ea4d41f8ce8039e85a7c3f76f1a950cb9ebe69f904fa0a966c8c83a78cb8488d70820d784002846da2256b5a1c62b289e3bb323e2a85c0981e9dfeb666fc0d2c38935f85bccbf244f49c06c5e3c673c4390d7b31d70dc8090ea6fe90462b9e9263b0ef388734b9cc9468ba181a8a9d48625164c1257ce3966bb1fe396611a0ca60c7c9b92771ea1307d8b0851fbcd0b28e7b2bd798fa976cc2e5f005e89a1192d3b74d16c652c388d930f2a61c9cf19e76991fe6b1adc5db5a6fb0755ae19bd11861d84dd46a39e19eac56666c74d7849cac81cf27addd15bef47cebd25e5d999ca75fe1d94cf2339b4e346c865d622b7a1b3676954d269823fd4144f0e08b82918e41e130432e42d6200a606ca4283dda87cfc727ab90844742fdbca7ae765e7bff40e3301371667761d70692bd0ef9519d846bf4477215b41cbf335021f037b813ea36d4a0711a6a690c34d1da85e33c2563997d7b4329a163c913e49547a5f0f20eff7493606fd7422a6b8cdffc874d09fccb7356bc54165d1444acf63a6a94b3ca18a4eea61295a204069ad9249e85ae56053ee088d2fc87cd29b5e3ca1215a56d48eb3c490e68186b1fc6b33747def68b54bab7383be8c6c7c8ee0705100a6dafe376628e669341838fda3367b6f908090f514408d5df1baf4b36902bacd8d8bdbab28a2b3eb56481b03a60b1dfb84917af8b1519013160971a5d89f1ae0d45a142332121d378f2ddd964551e096f8276aa993f8ab889a45c545b086da92266f5b46c716e9850244f9cc0630d1ac215a265aecaa6fbe18f40f1af2f91a29b2386531e4e4c343b9872b2c23665ead3c8487ed82dc67b166419a9d66eafaaff3d5837b13ac88bf6a5abc611a94169216c0916b0f265e99489822b6abae6a8e3720ddd85a2b5ad87a84bc006e4b401e66fc362e7384ffedf94394092202852ba9d10668e7e98b42c8f7a118438694c33d38787add8c3a7ca8a5abdf17dd1aff769a51717dd42f9405aca841fda79a00dbb52b89a9109cde3abe55a159c9bea77008efe5e620b902ee3c0c8d7e4a40e2b4f12e91234c7d5591e4117fd891230a4526d0d58bb60406aa83e4cc33aa439365c7e43d4529d58cf4031da1cd8ab1802d05df01a63edfb95bdf8d9617c417326559a1d16a41c6de2a91eee87a9e4a9814b693731f73f53b101d82ecff425f6f9135119597017ee69da87184a7e4c01039147e120715518e290819a799d9047288facc1e53a5c8d74ec50a2ab671c9b44cb965b43ab30e910ae3cb0b75718837bc53a9df64a90c733b54ee677b268cb3dfdab78ddd70af9666a29ee4ebbbafcab0470a4cb2d26ed0004a68fa1f69e40f6aad80bdf8122bb44c8bb446a68c45c4ee8c1ef95df5322df8ebf9af1415eceeedca6b237e669a49bddf6e8c733336eb4ddcc8e7097e3d1f6cb70b6b370cfdff27d99ad0f2f5d30e91c63e75f7a0fb483b3aa6f01b75d4989ea1b0b5a5e0885f2b94d38c942f97cb8dd7880cddb72dd389a0a1a7138e796087b509287574036eb545e5afd81912a7b895e28ba3679358e388ff230fcb108eac6594df513fe8192ce97f534391fd3f05a564233cc053c2f89f8044610864dccbd5ac78935a3c60826ee9ad81c4f15b6f26ac28f2791fd5bf8086aa73ece905f3ed580b9a6464fba268dd9f6622d3e4f21500828e01d92ebf3b24eb835ed69798a102c8677d7bf0b0d49e0259f63c670e376cf6dd605f886d0931b36a665840c94f1bba180d9b2ec04580c82dd213373f43962de92337cc3098ec9b82275e480e5e0e5441af07562f355f9c3fd217a10f8af2a743d525d5c6cc3267619064ca13caf48d1a51b1868c7d1814942bb8bfd2aca6218c10eebe9b20a9cb02beecaa857a24e08a0a1f1ad79ac40cd8d84cc3ec814426162a19f7cd5b8d34dc7a398c45482e125ed0fee012778e1d43eeeed9daacad32031056592c22f9855c40706910c0a11522b3df6be91b4eabc4cccc0377f512b20180c60338f9b532a4dce8b3d6657b9290061badc4e6685d54b7bd7aa724968f4bf1b5496c91e3bb89ea428cef55b18216710473cba2834844f42109ae3c9ae94929d65287f708dd7fc5848d894e2b0a21308e3741444d3dc499a862084ee42d35d753df93ce24192e1065cdade65786d865d21ed3c11c7ed94e105ab4e2dcded3b1a9ea766323ea285bd31dfb4e2ffe209ad198eed6011cc15c742b63a71b0af3a9daeb7c85f060544c3d4915dafec8c0d16cb2e6a28789fd5a42cf820ba8f7f1b1b98efec7fc2e78bac039d9f2c4653f8e0ad670d3ba9e7c49ed295b5665e29fd32603fb5f86bedb81b8d1ebe8e10a2e4a98e41dc6a2b7470fe64aadf18f898ae2e0704d1e09c068ae4369c48e0bfb015a7cb05eb5b71d58fd8a81def734457d8d8cbc984b0d49e429a2361bc412371ed8b4b28880627853b65503fec424bd64965384e0b9b9c68794cbe3fc3426e27020046840c385708d630dba079f59abb456f03aad83d234dcbf8150f53d0142cf662be521a6dbdff5ab1097910857827894d52ea5638d9217604a9288b551033c0693484797e28dbf681d1c3ee869509f54610e4a590cbf30acdd978088201266a1a998c67dc90b290f52f75b5947af699308376f98fa1e9b404baf7b45439a070c564155ddf713ac6c7a5c913e7b6f3fb0af064519fe06eeae8403b6e7b8267bfe61cbfff19b501e15a4b99548dfe81204bef78934be0145401ce825c468a222a9abe98b9f283519bdfee6cc5374bb2496f1bb2ef702436438e10bb1b624159bb2309c4fa1d81f0e0464b22ad0c60e702b8e7b88382892deedfa32e0ef5558fcb280552d599177e75a5794d0409c39a9fdce3a1afc32aa41f2f6b628fb2b1940608ea8bcbd46dca353d25fd68df124175bd825df7e67178ffe0fb372862aeae0898ac215b50b71257f7ab0c6db69ace0d479b1e80da1768b0dde60421be48a4e18e04916a84d3d848875a8e5cb7c5d1bd88914c8aba36c6ee8a55149bc39e588fbb3bb176ca7c666fc4983506ab270d176bca8fbb94054f8bf92e5807b5aa57c4f9b8ada6a92d0e93eafac77896084644b5b38591d51526584e681aa5260834222d593b61c785f216b5f3ed7db5b37bdc34751ac3993003e5ee3de2bca22e0f73fdd8b2059efb6124723c521e656aaa66552ee6e21e54d8a44da1383946c168ed31cea533602e24e92bbfac2db5a2947aca95a79d777302eb6e49d3a5a59b6718a6dccf8523ab02e9f81940e02b150389f81d0a9f7964422318b5f00d9462eca7fee3e9b2f239009501404a3ad959f674624900d417dd54655568997871d9b38d2ba546156276296f2a8362dc93e542cc4160d356341e6c2b0a35fda38c5fc21a281165fe128f61ffa03b9aed10394358aee704e7d3945f516c6c536bc8a050ad107c4074dcb197c3a21b15ab70c56681be072c7fa78e1bfd0f0a31805b9d95056153ee8974e3589790cae3075a93b0e841b1eca3fa5c872493b50d455c7e852041e2a87cd7052ab30c3cdcfdf65794dca93289ff02d418904f969f689cb280176146f969b485e89d8923d1b8ed5436d7f3ee9909d8bc141f0dc162b97dba3fe4f0094338db5f86543b63ce33b4b4bee3220c85e2ff97f7a8a0f3f421a909b288ba2494b260e7a2a659a8397617dcccdb529348a58d287df8edbf46b68c6d0ef7e9515c62f60de2c0089d65de565f0a082560d1d3ec80fb8b39325fb279093d080c1ea7cd8542b589f3e96bd6d69d4531c865ceff2a7b3936dfa0547fa50eff93c5bf3aab140de4491e251485706127fd2f01c747a4a1f3f63bee7cff663da518fd5c3f3b8022fd52193e7a1da0a94efbe7e28166c3b5548c2debe3793c06c2ee91f6154501e38af9431c0db15988c9b8f243c576f622dd5ddc88c02053c03389572955f6397cac9b92b199b77a9f54177cdf71967a0819cd088a79ee0e2d37a38805c61c712598688551894fe6a66e37c1771013941d7594fb708e77d8db8a0ae5914d98d7226cf783b3e2a2a2aa91538826ff5857c464c643cb607c1d2de99bfed761fee15cfc66b8f32ad6551d7b8e8482c46904507f8b828527c7c54ca8cc1919fe936e8145f557e5b3d512f40b722acd4bc4813a7ee27ecfcc90cf2100d964b0408dbf2a5902741427080dabd5b3bf87eb6b90c8181397b48dfd810df1942a53c7ed46319c8c7bf1dd162477bc0682ace8f98a7752cf2ac49d5ca8302bb6221b9fc2b62e8b21adfb1d127c62af398c0131a297d824184cb0a529c71cdf556c299a1d7d605eca1a4bc79d0bd1a04eaf958ebe45189e9b1279e8b5456de77990a99442eb62b71fe2a99e46f2106eb61fde3f0e0a6951c873ed479da3c2582b8220b17f547e7961d58fff1dd5d5f25e2ce84af9d540e4da9a5022900a2484995dae5616836c6ba9c26dd35b1172ddee380927c1bb429e9185f8155ef1853c507e5f98ad47d320ecde0dd81b7059dd9f6f9e83f12378b98c36974c95a769412ed5a16b1d961cc0329311f444bb72b366cef1f49f5f517a3b15e45ea8375033fc82c50d1bead15ccaf691f269183e999c0efa5c5454696310d521c51a6b996a2ee7cec226e5b1cd3f931e609e461544c7a513cf8a8d900a23129d230c35eb89972882d941ff1ccb2b74bad230572279bdcee074ac52f1b98e827e5f5a2d75ee7f74213c1b567210a74ea6f70508d65495fae655160ab56cb3c59042004bb661e977daf2dd942ca5eafa63dcd81b29ee8e113f7c8f9c3814f7e768b89715777e6465080e8eba3c2d3f8399d1881eb815aac19e40be56419a9edfb956d39f87d374f753e35a3879f4cff9da43ac30c4da3416a06246b2674bc738f4c17dcb8221e86822c52f7f52f16d1c4eb6e18fb9e7ad5250021642127d4199df2be5f354767d48d571c1d2285257dfcc5c30e7da3745e23798dd22d421c74b474cbc3aa61993b275870b1528027ec7a3a7ec08e06dcd59465bb119b958e44f5c527ea6a11f323708c1f9c0c69a54f0f11975b8f67c3edff122951ff843e2a69f94c0e299b65c1641dafc4f1e9a4de9b6db9555c5f880899a25d505cbfbd626d82da30598fec22c0b1e0b3b97a569bb3b8420d6245a3e31953b514a950d758a8e9e303ee66a32226b932830200fa21c9c07639b49a6f114e45562bbfd5b97f03571b47dae4faadb9de2cc633229963f5fd8df46ad209fb89a22c5ddba09d1837be57df2724e9112f5c03681c5cc05ae36b57b728d57c0f71cf9c0e7084e9168d044361e2961d07b86eaca6f618b78078057f547b0f3abb5489a25e488f475cf4c6587d81e74b9364c7d839c4d0ffacfb44e431115f7d591897f5f43bee1e2a869a868c081b81413ed3f30f6833bd097fb1f6de9a919d7fd166cb56170144cc260b562927b197426e4299d89c8450445f586e4e7b51f3e3707f7d79bcde8538410ac7597e51f96068b2c9b512714c2ef63360b92c660a138add75871c717f211dda4b49cd9a8967c348ec05395e4bd7cbb44cc6e49728d3b887c158bed1d9baf884744df77f7ce3e8a249fc6b29ffe9cff3ef340075684ef88b5016e7f96e720a7d319c7ca93d6f67e40b11301e0063a55d4bb8973eeaf75ddaeb78acd2ce56f0c55ce21f34f91b5b41baac3a996a1de317be83e341dd245e3a6c83418142b54e3f1df481bf4b7ea667da34eddf9638c8e84a6d357c125d64d3bd96eae5b0b46e31f5c5703a84f8d76d02ab6641902fba52ad54ff7d5a83871904939140d01f283f452f3f8ae8a4efde76e7c80d65932438ffec7be8618599f19603df4c2a3ccf41b4e50975253f16522e1214d5f1e441483204d50379924b75664d395460a3a7d2ea5555acef45ec44e560b682cad50513e1d417cf68dde35ba67e5bae1abad6a5bbe6a611cdc7e3cc952389f0bb1b46df1dd90a882febe974bfe430515b1d7568d39592d42ed45e6a3b3c2375a3905ddd6f179d88a30076d23e08f4a22de964c974eac0af963609570e4442c7f1b9df20a61629427d42db71574f39ffe88a29c014d1da6a5ca00b33a5c53256fceae62e4420a06808003b37513289f448c81ea28c1aae8b71730240724892d391ecb038780933165bf14eedfe77297634894e2bcbe6216d4568e52c6ae4456b2bf84abda3b86dde13652062f7ea3df28039cde6657597d1d15320dc5462fa974fb0678de6888018e4010d760c936480c1fdef0fc15e7a519c26eb92cdbb9a2d35ac25d11e71bada5256851da08c228f09511f47a0c5b6597628bd26fe9a62e9d931155d5242adf24d322c555b754d5d4999088078ac77766999deba03348a9ef1e6c7f68e296f0bd0df3dfa814bcee8d1760c8b78f9fccb106aa756e850306b04f23e8411461db5ebe5d95963e9b4300771c6d22b354df4e8eeccff6005f8c806069cd4375703474af6fefd006085cf539112ba317e0ddee391e503a1f975f21961189dcb11b3074890c01aa932848adb7125d34cee1ae31daf3e38676a5f2b018d28b4bc7fd02fc6270ebbdb154d624124e7fe1a608dd33ef29d52a68010dc72d939295da98a451fef0cb13c9f2fd3efb7611775e4ec41fb561d6daef2e180fbfac3b4665d7b27fea25909621be90f418b299dcb16090d830346891a16201b91c8fabedc6e373db2da2f3e2ee7148d8c6004ac713ecaf0bad6eed3811f85b5a5b614fbb7d928c61cdd934a37e3edabffe8109b117632606d5ca7d4bbd8b07f90ecc6bd5df06202e7908060a62c19a5fabc54899b42ff4c39420e958a61064584e85cf592552cabd2be8e6b287f2610d91373ee830d31c1cf1bac7fce47ffe1dc80effee23871bcd82ff42652ca58a979c2359d1b3e0143e732d9ad47f307b0239027b69943fbad5142687e7db6f86f7339f9694afb085cd40045861e9023ab40714d8cd488a264508963dda2f67486133dc8eeef60c1ebf02621415a37f061899decad42d2ae10cde8d478836f9e125c4edffaa5b77196c8677e98d971093bcf7b3da5afb6c951cf2e2822a27c34dc312a366a54772856d1d941604a021cf893edaac1fcd1b56b26bf567b7f885cb993c12ac93e4e2dc2a5c40a4011ddd96bb49fd233e692111ee02b55121bd243c1b43bf602ec0a39155b3020be7d2c72e9ffa7febdc150365e44d44f40f9a3832c0c1163b730a14064aec6fac98c8a9c83af6e4a5b38f84a4253674d456fc5f36689a5545fc42b812c1b89b5650c4363beea40b25f433a79d03ecabf488b891671305c33c5fbf24bd701e31fa0df9318e502b30789ac300768804ae2888a9c34046bb5359cfdd60e2b4c4a5c1b59a5ec761a9e9fae470b854450ed486cff025e3a10d9f4e6390c5c9c8946393cde681f19dc70d0575ecb75f162bc80608a8d666d09a767e5fd175641fbdcb61b3356c9788755a1f7976ba81a78c8189f01a1ec9c2280e8c9ee6d9fd1b59d865ac5c303835df0c43a0dac7f696cf537ef3a6744209587899dc7ca0199f2dbfeb9200aab18f84792a270df18dee662aa414ca0c03c486c76c5a6f51013b46a17841582b2f02d03f13404969b973740ca40aeaef0374a6b819ac7a04c95ad968142ea8608f5e4e2b37f0d0f6bfab758b1fbf0fe14e17e585a1c32a965e039d2e6f5fd6359d6b28f12ea4d90a120cc6ad97501422f51f0f0475a5ec7b740e8134cb2f3d06c4207443ef7defff7f2d87492a1407cb3cccfbf99fc117b4d8244887b21227138145c15963acbcfa76eba7cbf6b148d71f9459d203161a8efba8fb426ed14d1e92c025742313dee59d9d163320a85a1b156116c8e94c85529011586aabecb333a8bd477b3e191cf4b37e7ff66a35ee18f79c180db6c3b749519688afec4bab738274680f696dfe37a5f50aa917f5358f0472de7dd1650556a87452b04ead470a4ff341a83d697502e89b9ea01334fd4e66fe172ba83202c7f53b699b9a1f64f40cf38d2be6a1ad900cad48412486e0d1f6ddb55a4cbfda4f630e06fe376b53b37bf9d2bebe215b42973f9f87bf459da2c8b10389459269a7cb1d3ffc71510c35f8b1524412a8895c1f70509c2ab4179cee3f94fccd0b474b4cca63e313fe1cebcf15c2fe45940b3cf9c316f2893d43cc6d0dcc3d6463d77a839a961d8f5ab2967b5c97c43041b754608447db853d8497dacb717b9ceb4d3cf79eec7e286a04ba9535ef97423336fa441f454e054b68ad7a2d4aa2114e8576654be9d26d5d5423915f8f840814c9582e61e474abbb319c9134343d30756ee620ce00108de463c24e5fb83683f55d86b68487be61fd275bf9c1d58d4349f31c7b3e32a6862a4c85f15ac619e682b1cc3bd9cdf7d4028bf90851ad9d4fcf6213f7e2f2b5aea923e53d6f9378a9e8e2acded8cd8671f19f5422f3bb78989d2db2ebbaacede95558c6a294ae985384ea0bdf9d5d88866fcca1118d60f5319c651c66a5a828b09ca65d421705a065168c4c5ba26b8455185fb1f534a50ea311de771d7b99a1d5280f8450a173b8c6aaa489d631021ca7ea380542b74cdb544cd7b676d389c4505f14365e22d530cb9ad4780434ec5d5313d02941bb10c1565c74a6aa1d257fbc7e69ca47b901d49c04ce3af6c491c56f3160e94a9b63d72d96b5a64a3804d677bcf5ce9550e1787e3f7617484a1c3c834c456c0b644aacedb6d309c554ab502db757e9023b6f15845980c91969593245fafe1c7ef0b7457928c18e04c6ad36007a30b25f5aa68e23f291757159a552c2a0a7cae70aba8b4fc5d33d5dc768e927e964bd41698752637e23b5393fc60413300e63fa14bea617f376d7318b94232618df3d7fe5c3a81da0f02a59cb225d0e3f65ef58023c62ae0b128d3d4356332a60c54713b247550db925f2d5069fa5e5e3b7916dc0a423caa9ac79c3054d21095991ec4530eed0a300366bba3a98338258b4b8b81a0af7c7074f28785ea44855c859b5e7b8dabee36df87761e1755bb882359b028ca84ff28280012d341ad8de21ec62922e14ffc8239432a96f0290d34a0ea5290b5a74f0fd51d11105aa036d82e55d07ada25f8dfc25660bdb6bf2f972444c5ca5cfadcbb682654a258427642862b18b614de3b5c61a1720bff9fd21340014117aa94fe4f858175c3a1018e3ba9775bdebd27fd41431b490f291ca77ebd9d62775824ee0bc1819bc631c5998dae53ed57fe88210287c5d2542d208cf7b63750cfd8e6ac60768b81300311df683c9ff9db770d30564f0d560540b3f5c538c8b83b092cff828812ac8afe8abd33e94692ff4d7181b68d115e238e4f4acd574c1fda0bdfffd790383098a73020c3a2cb2a7bee7d6c7e15a3c31ad111dd4d4e805b706d1919dade3f4268b5b1f7312732f56714c102c922b03619ecb8613ec185977758e7f5fa4d5826212f58d3029b4f7ef5132c99d23a06ff016ea32ffa8456b6301c4a9012c0e2da12100637228013915db53d82c9d57c13c2fe9e05f5b2719b6864a31e4d07848d77e7bc683910cdae5987ec086b773e406c67e1755b04507366944ba4c97f400864b5de1079cc8c4e65c6e8af371ce85b048a6a26ee587ea7bf0efdd0d96441a48cea524f25263840dbf475987849670ebb1d43791517203bb800e2f65286ab0d0f512d0daed7415ed007f9dab9c1ec1c15cbc05ebf20ccdd653334f063efd32eac92a3ba26287b0d5c416023d9f4d455965e9462bafe9094df0695f8484f01f5249267f82c005210f0fb63a453090fc4e9ff7df79ea79acb1891817cb4b591fe2d1a528ebbdf2d3ecbdda832edc470132e008daf9faa17e118a3d828e7217472b5ed312891f43f3b4f482bb2521114e9b54eef0090f35c82584c04ab347db9b474b51bc3a0a69598a8e07e9484b66b91ca216923a4762ef9838bcfc93fbc23ac34a166d69ab6c14157d1d92627aa0ad45e3ba455536036345251dbf5ea00d8419a38e4cfda41702f055f4b773f492458a39c20472c1aa8bbac88d5ea9370eb205f79523fa0402b3880089f65bcdda6b981c53536f5ad69cb41da44bd84d2dde7de21ba59ce42524f5ea2982ef662639901ea88659f96dce8f34a6dc0a91cc407a15832c1acfb21b2c02799bdd60120961b57875cdcaf947375df15228c0accad5513999a8b275f0e7de8c11ddc2fc8eaa36a3e1f7b8b9c9d597f2e24c774e87c1c0c00d6de481af14b385530fb67feb92cb20c101f167dd52e5fca998d01719cbd3c8b83ce3513b5dfaf4a6e28980a94c93d527814e80918e1e3e792c79ad2f19afeb85af086c3945b61e329dbc4b0df9070685dfed264c8a6a73ff655597add13c9713972fe1e9bce983afec47206f83f6c4de4e4625979589b8503e5d96b320cee9630110fdd0e9a0975c7bf12d85a5601425e6b3936d893e5bb4d3852ee4be83a86f92ac49161fcef8887065f1ff88731a13e90cf8aeaf8b11a34919c9790ab83a4aea5d4064e97480e6dd2447900ad3cf41168db00f39e7c21c12d23d4be76e7f1df56ef77d8557069e95fd7a1e6d1732d1551c9bd4338a53a83d8e2406fac00458e36836f224df4b72e1d69977a19cbc9e845155179eabb0279d0e4aaeb8c5890c4d562a0d85435feee8aaba79e7fb46d707b3912bfdebce716789ecd85fc0cb2ef294005837fa0224feefdd533c02b479d0e0719e771c91c0458782784a1599244da386c2edf4f8a8c11b117a9185ed994965dc44e89b31ee14e1394bfa638429073693f78af039e2fb0ad26d31628d917b6f695906e722533e1a895bebf183556900f2b378e4b26ecc7225329906a4df6d0250847441593ae96d2c774162dc52cb38ed3c30f268b6882fa99224112b3cf3524fd04a716cca8783caea814461971f2224d05c15311c3717055cec5f52d984a063f7db62d429e29e1e6852a871549303fe80aca4e3e82065a7e003e53241d180a26cf21cd3e6b2414964f82b60c508d25d34423f020741fc7ad6e19c360efe69a942552371c0b75a1be87cfcef976f5f8a94c1cf726fcb6e7a56553fc5b1b08f3d939607f6507e66f78c5dfdb6d7b5b7fc55407867a3d47f916c58ba683aa4b34cda7d35e491acd390ac0335e1a7a5429d7c3610e0ddc7fa8d1695b5932be43148450bc6bfb36f4e3b8beda593e6f1fa35c251472bd5c7b01adecae039502199908e9f576e7f7f56316d6762553c80e1a99490ac08cbd6b24bf2b3d15dc26895aae5b0d62cfc9abc8be8c63c8e336bcf3b66d430514c48a6b7de42e49c3184a418189421ab8f375b6a0414d51647f6d2b1b3972e3f962e135d8b40627684f5421e45dc9e630e3c465e53d63f6998f541071c3dbaa203da1a58bde88bd2cb6eb2f448dd72c49a5c66be6bcd988f1a55307a6c2e901c4a7cedc298de804efae7c8cf7abf22fa8907a1ce5c7fd8c589f412839e1dbf03d6c22d6da7e8693ddff13c8c682a5058d2afff23e532d97d4be830bc3138c017afab4e4298872e00e1758461c97367a9d1923cf9d8254fc661ccc6806990ab5b3ea4307e6a816f2ed80ed24f0a41bb38e5be6211fa40556e4a180629085db78545d82d5f59c67ebc38cda519f50289008626d9e17497230e3d9b806e57912acbaa6ae123a226f06eacc97ed2759edc8eccba8331880b3c9b04f2bd38b4794473da37c127564170aaa71cf7816e041336fd8f569ebc134a23bc316104d85c84131c6228b9c887c4a67cc1f6867b3115fd27738c8c63f0d03f703846ab5940b32f0c8efecc39e2e56a60028f071df270434b64f0785e0373b8ffbd819f9c5ef9ff5efdc5d3c97338eb473c40705bfa5d42e549d2c153930cc70a25c1555f64392775addb2c2d0bbf1d9bbd8ad2fc877fd06647be89710514d962380d40e2049938e8dce50f7d99aa3678bf9a4996387831d5a771c68be594a010b0d2175a772ce2dd15248a7113b426c57a3ffb7f4e12ae130b863a91f5b2879f7003b5ac001f331283f65532047c3e725ffa6c492494cb24b4da69e332e4225b8a64d8ba1dea421ecd58142f5fa922545c6947994fce7905fe9fb4af774498ad5eab37fd188249e7f0f58485721d29f9898ffd39a22071aa5419e4ecee1e17e35aaf879b84c45f7314a681d1d8630e2a3d197e023ab6c56124518050093731bbb0b0de7eadb4b102964cc9852bbb741c8f7f1db7d1f01e5b11b78742867f25f89f9959874269402c38222582aef4ee6b137cbc0ab105f7c2bcb861d4853a622e7b6321a8f4f82cc51579fee310450c867642b0bcadbe92cf4f6491292e8406d39e7dcbe805194b30999565e0e864f498e66b5c2ab2ca8bf1cc5f4edfffcae18b8fe4e713b227125d1491fc9b8b9122f837c96d85ff2e6ea25ff81025c093bc169e5e5769cc1422031864442263d9e1688937a25db3037a9598647508b9dec1e347777e72bdb770f7ca14d61060f2545c35f5003a5e4e4ac0dc65ff39eb251639ce380f7f10a256c9258184718a0a91099b7508a43691beb617fcb229e49cf64992b14e1c543256743b062a9d4cb1ed5ca5ae71703f09236c5121e5f7e52b146ab148d965752e11e28bfbf7e0c66e0c46968b2e5445dbe392861fb80c2ca63cb31a2f3d27b6c2b19eaab12e065b3ee042011fc4255ee7c0fef296a0465fe4d87075ecbb45102c177f738449b7af6ce2eda77fc22367cedf2416c00c9fbb7192e4bb62d4569a1bdbe9b160342b66d79507dd26c4e6585eb3f5f14487eb10e1be19d141bd74f821737dfdf1eeacbde41f1de8cbb3979c3849d1cfa414bdd5b04a6da83a9b071ad391db93dd6573a2064b631379e5ff94be74ac96fe4f8c33422adf0c4483eec622fb5dc5fc0b087e7dac4a182cbfdf1a5e93fe83558a0af6bc1705d194fae0c4d24a590b3a7bfb9d16d3b3af9a9e9f4ec75acbf2845dc4a0129788426ee23ac68242f8f9264e9d3ded4d47cd580c85767237743149c29090dcb4349df1328cd1f2144e2c1d450a4c96c6323ca0d48283c2195f0a47a77d459457394ecf96ce5775e6867cb0fadf6da1a07f036bba6b476edc7a2e4659c913177d3887771264939efce3f7f6c9fe287e59c232f865c85aa26bd68295db15c151e2d521f74ce275c68852b24b4b249c8636796ec69dd9d8661323290421d0cb06b01d52f977c3f521197b29695d3c0380925d18d74cc537f375ffcee7feffe2d3d4b3c3735101a79bc12bb015b2c652b6517c412c5da15eef4fb6b787430d91942da50f199050ae101eb652e58fb134de125f7a37e5f52d3365e945edcf07717f8886330b12c737bbabb43adbb5a0810601f2f6ef748970e1ab71fcab951c9383c67ee74a8aea1bb5ce0b8138f0c927210feb66736b0bde7cdf251fea75fce91209109a7d3a327387d84bb7e3e6c39ff00ac9fbec58b86a41000d0e04dd0812cf2c84d6792c76f1de72c246170fec931924d5834c9ab51fa4a5bef0c8f80ba2989371013b39bb12c221a7f60ba35d680af9a53d853ec892fc473ed26e663e4fa208e78d309c4540983ebd657b4e61b0c1158e97bba7f0e46a695731c33d7fde3bd83ecc4605877c47cd86380ac2060e98cefd702ab2d315c6bf0d75f6f2f1bb35cdf735a3bf11f2a0cc17db792e0af0ffda3b542fe56c40be9f2def4afa2bc371b3b2f86d2732a3d3821bbeed14ceb40d7026267143d9514a06405a9146d503e723fcc575e999853c8a43d4830d4e2006dcb7abba1a9571ecdb7598c5dc3919071becc6267ded58a9852238be818e62f5847c8f7722cd59e89c48b1797c9bf2f554920014e4bb17abcbb9de1ddb9de54bce27941f7f84208e6a00fad511086500ebd9a7a80ad4de5b6b8541579cbe591c86427c9e1f4535a62ed7761997e8138aae05156f939d02357e5ce5cda12b18f75514cf748cb9f9468437e3da721c7443542660ace5e972036aec4ec9838007361d89044e0ad66d4dae00271b9c1661da249a88e548e8435f09e3d3187cea00d7d6ec2373164100458c15f542d47ad830e6671c36973d890a8818087fec0660e2c9675ccdda1aee009e347ef0676718d8f0d03b3a87eafe413173f8c4ed49def06cba059738d4713bfecab8e12cac9f4eeb5d92555d21a0bbf167ce7da0c2fdbfb3199bbbb79906d65c630831d21f880f555a362db43c959f1f68d95807fc46f9d62711ebbfa76287cac7d19a21a507de48298b7067784b5db4555a116eaf4168347333295c416e86ccba570bf9fd26daab568d59f3baa540ae70e3f3bb4d5361836483144e0e57a758a5520dbca9bda11fd02acb7f876dc7a181a3945fd8244603883c8432766c75380366a7c617f73a011a3558b3cebf3c43384c97261ca4065bd2e840ff27adf67fd620c7b1a1aade35ce18973275444cc0c3bf0c6a50488dc4dc2ab33c3496baa1d8167a69b74c260f59dd6c210f316beeef29c4ad6959a8e2f2e03995281d7693291493bf3341e20c56620e605578950980f0fa1d586c6b9c83a0ce51397988218c0e6713fd21cea29126d3c1714d868bd66885226e7b43159a3fd5f3eaaa4aab1636c55228863cb178398f06cba3435ad1b0f5e24e67679a2527e0da3bafcfbbd43d04eef3bf33495a8a48b76ea905e3c14aadf684322324671724ae896d410d6cd326d9886bc8562e3fab9cac51cfb8ca328015ed8c9ddddfd4cce7f242018f33133172c19a1c77fbe5b265ee0cce8b7491220f8df48b31d6f4dc3e97e0e26fad6d1ec99559affd92e1439db444ec79cae639f11f74ac651c64202ba6fff4d7b14ed2c37a516cf2b662ecf4f8f47a2da1a5fe3fff705880eea8331a3698f6eeb0f0739a8206df4c1ec5ce19a9acb1130223e895e0b91df4206be9ae234d70ca3124cc2042112e2fdb931fea73b9723a66f72d61c5bdc210a3a72248d7ed287f572297f9e925763424e990dfb6a69de278f90cfa32e427c846afd07d65972fede6a95b81ef88a90096d213ea9d56fa01ee4dcc5dd8e71c0d95d45ca9203ae8074aed742855114a597c3e26781e233f4453212b5396247ad43279acbc5e1d27bce5f345c71649ca0cfaa80bc944fa530d85b8c5afcb052a11646fa8ccad4408c2426de8913dd2d65a9cba2e5943291ff0f9cec02b84859a53f3745aedf20e2d41b11a2f988e6bcb4f879c7edd4a68e2f97808e3b52acd5c1adc6409f8899a70b8cf5e0aa9bf21cdea237d4683dd79f105a44cb1fc7620a538c801cd1ea6fe494415d28cf41095fa278aad9af5df5fc3c13a7cf0caf6ed869f183797718429b52bb332562b8840576aa851c87096148259876b6338048d37a8978625e1005c27481c19a595f69396be9834d5735ff8beb6141ddd80c057e682c8449c4b840be1d533cda0ed80df05d79acc5f14af3154b45205c6cb8a2c6adb45fb927c0f43661e74a34ac1f2648a60539e124018a5e0dedd4e203e3acace90e0e6f2dee239594d02828b994eb4e3479a2cf1b1850ce4619a3a4efdf77ad227341ecf0fbd6f86ea81f9d08390aa17643895b2d0e0fffe52c1066256dd26e719f1e3f9afb5e4d8229e19346e8a41854ff06787b62e2efabd3befce25986702ea54b546c87a339f853d9895f2ef72db932101525853791dd2f219c8d6d80f4376f782c4220a6612a6da69f37760faaa13af1213e8ae4757921c33d4fbaed6e9133c6342ee77e1466162932d8e24f636511b7887e26c4d012172da9232242eac9c37627fc291328e7a4ac9c0dbbb588466d76d8dbe5855a0b6aaad284633462197c65902d21f5918d725668f431f4cde29c08a6d64068392c49305603341a5f3d8b670ca4e2aea61543dc664c0d0172410c407f616bf3ad8aaf24884d6dcccf4b9942ef582b020209987a3d4ec800f580614d3ad8a7cb9f2262c2b02b0c77b544b635f2c8352e17c836801af556c5e14f5c9b0283845d8e14a6c1be5c6cc35c21bde888f00365bb2fddba07e5b07c4f9c601043c76a301eb3691975756870d2a166c7f487cf4c76e438d09a05fa3f3802c758adc354a9c3a0e48e47f1ac08241990dfef50c77060b4ee12f196673599fac8b9fb2108730d85411888f8d2941c265ca9655d3e7edcf2cc8dbc61c5d153654388859499add4315749ee77ed7f166977aa99a09e050983b8b1201bd216a3d44cd6a01cf1f9ac99ef1457e8a66ba118d0ec513a98f5033a56dd2e578795e47c543222e72f50d6974b210240a74f6ce3dc66df417028df5a6e10a4978ce5e90ed343c5fe0ebc0eda952cf94a586b21a2cac25e125eb94fab93d2d2ff4472279e88e02d8aef3e0e580c5e19cb53e953f0fb0842deea413e7662ab32e470167f700f8a4a6175718fbfdc83ca10f8c96eca99ce9af1658106a7c97b98dc5ff51beb0463b9c55029a15eebf7df3d11e299768eb8069a797814c47cb7a54f852eb5244d2ba915c9edebc2c866d68d2150eb859224553ef9e19ac110d3d4cffb2aed3264e7e8d3e772e8564010f4319974b34c592368ba49ffb43006d77b765b4a9d9aaaaa34abbfd990c2fb7643fda561ff2977bcd6a070c481f96b107837e9308fdf4e430b79abd997d3456a69cf5a93caf4e96c7131e474bb4d8f7d52cd93a89c2f78fa8915fd8b585aba26b2de71fb7f7aef687b6329bdcc0f223c05c7c124c6b3144b7012ea11162557364d70db81d3b7defa30cdd58fe63f16cb37110b05844f020464f6c88f59efe42d7f047e883ab3b520a984a7b3a3757233d3dc71908485dd3ececcbb3682acd0afad8dcf5f75daf13bd4bf711d87e0f7962f3a8917327466a0208368b6921e18168402c2810fbfb74206b8b6993bae9dd90c93968a5d5ea1e5602d73bdc4ad75581dd8962a2c0641b3a5a3e32f0f19767fa503ad4c80281446ea59778156f0813c48ffd6455822931aa2fddfa175a9d177fc8df77020d0cfdc86e04c8f626023f0fcdcc2a8d24196e397680485e35207fbf2e0e929f1016b3ea21f698b6032e4ed603e77e7b4a85923f56ae087e9b43dcf0341f049076a824a9be939693af6226f857125eb4320b9cf8e79a21ccfe915cbefbfe073a604591cd5acfd7088f3db0b6d03bdc297851ddf295e153c6d42c5bc221511afd30c3b9084c5fac471567b47b010b44113ad02968c6a061d342b77b03f26b52af9573e556eda2698d2103ef76ec59b7de71f7d5f82984b625ff37df52cf6c375e99548ee1f8fb3e7233d3b9e183b53cc3565a2534dfc53a4ee0eff2e457e4791f110afe83f39d849ac88359cd27d0a895cd4f824f4a9f77a11a69d4d054d9d329ec33567f629dda5eb480286baab8045651d443f2e6c4a6e95e1e4b5f04a1b57614f215c607113ba6e88d7445e8c0d7882272e1795a4b1c7ca620006e62e371c8aecfdfb2aaec908ba3fa3c98fe1d0d3874a7ac0a9213633cad3d65f91d3d08f0dccef642b1590116ddfd599e3ec516c86bb6b120d13fa0366e343fa9d676a469ced5782da15ce24ef482e798474d08a470592dcba57aebb883e4d39546d19bfabaac2978929cc984da41ef689e0c6e7c5c181bd517ef776ba3edb8ab0b0b7ec2983551e8d4c1400dd69ad7cdfa34bfeb46669280fe708972993aa39fc971c19ce637d7ea52db5cc3b0c06b28ddca8da9eb3b0c8581708e7bd3ee078b51a420e46708b9ad96269db7146d3920e8e73e893add5685b9ca7a67e1edd2c5e9b8238f4c3fe38c0e865ab3f0060a9e5ee3ab4ea33a735a189b0578c08bdd97e2ac2f1b0c1efc1b045e6239338d13292b11113df6852193e574295a7f890756239974ce517a0b181636d28cb25a07384811dfb808035c967c840b003f1a8e9ef624222e005292466b0ed484caf74ac5205922194c3c2f9289af373d3c6b1b3a69fd8ad18d337a31d93b4363cf81a034f1a41c2a5a00ef01092ea5b51b4efd08e4cf463f6da6a8eb908d4862e0adefd645ae0fc8534d5b1091844617c7ba5988b9a076f06565cda2ce3313f3e0d233cf90853a55b4ee306aeeee1e9310a1f9a81317ccea24946bb62efaaa6bb5d373194b3311d944825c2ff9a3cb1410748a8e192510d83323c497b0c5fbba71af57a290eff4dccd869a10626f895346ad7fc6488cc14cba88ba5ecec5891b2ad4cb675c35a0b23b0898f1a3dacc9b51941c44d73e3ecfa2bdc68b133c630c3552585a2fd2c4ce79bd500ffb6432a6787bcd00b44f3ce0d7ddde5fc5978f9a2847b6604ffafa8dfb39a1fb1c6e076290807a25e0f8c239fbe6b25eab8fb0775c0c2402e20a6c30e3c52941fb7735da828c02c02bc19efd4c482fcef027c15123960461d03fa3bca7b5f18193165debb951fbc015edfdb9f71a0a241702f7a2a27b37dac21e4a0b9d813630da67c59d738b34c8794e5ecde856d0ad3ce95dd4205fd16bd4f794c41f5ee62dfa2bad8502cd8c0bee730ab99f0ba25e659ee647743e520729325b707454b68cd1a3725b375b7833e38071682a33cac7070cc2b528623c78b7353bf82fad6d052f423fe1cce7009efe583a6f3dcf75e854717eca198855142f7a9fbe105b7c9c439b051a84d0a6227109d3ec88d097c19920590ef50bf6c41d768850dea8b905db9713fbf36124ef05bfac57c9ea23df552bcf480e88a02d9b9a12e18d8a1dfbd208a88e4c873add9deccd7888512dc7bceaad6ba0c5f4fbf6c855a63d58b0664ea0df1b735bb7bc41b01b17cb3ed26c55cf414712410f5e6639e411f60a6dc19e1379bc7ea733088f8be91bf9553de9cfbffa74c60717ab8630193b424c29c12d7b341c1b4b6ae8af93f25d9d83b666a51d63da226446bfd7614a4ec19ccc3b6249ed3501fd0e9e134e8d736619ba5cfa167b2ec29e22471c4d4ef4a228a8cd86b45b74c838cb531ad6d7bb7f011a2c5a436e3b512c523a973824e2e428a2bb30c68dcf4e8d0536edcf6d84bff013aa9fe79f442cfdc925f2654e76670f5e6a2df7f6980ad23b0532e24f4e3116a2921d692093ffd31698e8f2d0b8305aac3e5be79ff6d25ed5a64c034b090456e3be00ffe6440bec16f297b318094a134a3a6c39b16ee24cdbc0e21b516dacd90598377b165fa43377cdab6677749a9baed890528e2808a19070f12b43efa66b9880409c25d5bf75e637b3369507af7ba3e3b9fa4162b83a544f9f650caf45a783543e8e7b9764b44667628eabe39f3fc48305cd73684912272c94e35eb4c6dcb513fce5e719aea6903c749a3a20f396d94665dc87d1fd78749ee0294d432bd2fa22e7449d7fd3a95f9fbef33a5d58af8689d0e6a86d69cdf62374dc26e0279a7932ff57b3829730e60be2bf1e7d8a2ac197ab2b07b6ca9eb14054b76d4c88b09d398c15d2fb6e1054a8058ecee8d58e0bab84845608f804f541584a65e647aeec796934fdbb30174e44125c15c6cc71531347c86daa340aa4e57f04e5d6b6a2e60c0c45dea7d37680561a41f04c6546fc544833f1bbe4d54fa6efac7094f848100b3d55bd4ebcc8aa5370d72a7e2369639123826ffd22c4a8d61e34ebd56da411888e87071d34eba2e3aee55b6fa6f52203aa4508ab4e489b9dc7d7b81e377ea94ecb6e9662e4ba65dbf4b2d32b386affc89b8ff64b18d67c953252c66c448257f737aa88d48568320e6bbb324fe6bb30eb9f9d5fc1f54dd726cd88f755a2cc78e7b2657bb9a5b5e4c3e5bc95c2c2bd25278d2993efc86169f5abd5a0ff78b63948e5c3a2160fe228a53ec9b3acd5abda86a722d478cbc48851f2e2fd505ab8ac60b191b47ce6a1e5f03671adcd473a49d143ea231553f810d4d716b33ba579ab25c48a266a5fb7b45751a2fea5b06d363220f821e5372a133d5324bcb17668c17dd150414c872c4c9ce02654d1288a2c4a7991b96c8fdf30f534c69eb65a5a991ab71568cf0d9ff94e9f0858627b3cc021797a4be0c1e08a9b870b349c2cddeb89d7d882201f033dc940fa42f1a15ba26fdedfba36dfea08aa41796e51fde0c7391538d888ffcad5fe75e388707af600df2f0ae3f083a71d2d99f447f33b483ab58331bed0b2acf55c882699790bbd2abbf9c1818c8b9a1a6adc35e1a71889706d4ec18dda8a61c46f611096faab5f84ecb85dfb38a1ec6c8700ab1bbd61cc97e820f381b93a705b24395ff932115bbdfcf5b41450d22509a314ccf2208501889200e467d72d725b7016270398e449147d8dfc3fd228d01a61a32aee6fa60081fe24c74ad5c64a74fe4a0b21eeeca44151683bc10ca8c84a6a3fd9e96db272fa02f97b584f411c31dc18b1241b9961657f19c495f3ef212bacc9bef4fbb3165d164ee3cd566a10f78b39ed10614e511f306bcf4d080bdf9631e88b65d5542860beeeeec5c287293310957b14348d027ddc7b62f031bb14952209f7869c066e849b2e0d4613120cac728f500d8064d4f902ff4cba831c4f955ce422e0ed2ce7df7f22ae1b3b114da4f1825ba42fe7e110d5f1ba0fc385bf3ee652f7ddad18b2b673741e1b0eeaa3531d929258440f8bbb8b98487efe2ffffcd5d480756ffcd7322fb8ed41cf783751fc1b28ee848beae409014816e9bc25df11d2fbb16200976d460c63b1a4c73ae9ae9ee7d8f697896d94c47b3112ab543419e26c44e44d50be60da5cef5a29a48dbd2f791737795b8423d05e5415242e1e54b8a3b2e09201758b2d3e2c0b24b9fdede0717453e174d123d41df64e849be0656df2e7cb6455ee1077bf1166b3a5100c9ed77a6de1b1ee7ff6debc1f8d9ccd67735882ff7fbfb34cb7b585f689aee2fb1bbbdb0353911333a9fb13d16d3b87c5f23cff43a0efc6d8c91ba387f92aad28bef103b4bd1859575e5465c5d9ecd1be56852820085f8078d464b460af2a12ff1a6d623e8e6b647149792803e4a2146b8898849ff9e46c750514fe7bf95cc8aa0dae58fc333a644b427418750ad4c6e5197c8f8c8ed034484e0b99113862d4f6de5d300c353b98ccb2645a867d31dfc32b5abf5e5bf4aec51e4dc4520cd8403ddb77d7797156d61dcff99c62fb87493ffa633e0597bbf81da52b6b8769b9eb8fd29ee0d4e702dd6436d035dd9d73bff5431fa45c0ac4f397c568346bbeec5f72125c11dca255e30d5f8b78ce28266b7cd5c7ae9dc8e56b70137a2aa8050bfe1fb2d9017d4bebbec105ce4d06ee170deca26f7939d244cf8e2e66d6e3e79d797b7b7fae2a37a663aac615f114715f33abc7fcb3f360a8c6798e2e2c726c79b2aa2a141cc286a4bc05bdb5e6ad925abb9d8b9816569aac8d1f1b067f9d016a869409700df100a2a39dbfaa73d1048b56123e933a5afb5864d08c043cadcd23ae88eca7247f34b1b2ea6e6fce36e7974a020358776daddeda2b4a48809c8ed500a8d4e636e9537562f7adf438df000bba4d69480970fa42190b57d38a4aed2b03e7f8e9bc6d09eabe61d46dae9ae31d015a14613578ae1991217770a25bb991e5b2e9c8895069a513bc2f7da43158feaaf094ada61a9f64d3d01388a459ad5de1ca96200ae0b8928ea1d98eb13f16d2083ef15c5b4e9768082d9b170912a4e05c56c89ba4f6177c792391ec4c9dbc90742933d3c34dbec46338f8008ce3745b68c753b8940ea49350e5429ce90b03050aee370ad394e1f749a0f0f6992eba26df9b0c914745e9951fef0c7048f81eeeedbf18ba1c1466160d01d466334170661e5575984ec5357be9b18acad3dd4ce3b38f642223a79e46889e141c9226e372791af10b3bf9069951fdf1edf55081a31bb37769ed2861ae2ebc19ebebd8ecee84100f7120ad5355cba6046247587dc760ad354526908c044ac296fab26d7039278f66c8c0f3d699de7eb9f630d2060d63e3f1133135c9c7727202a646fb0aff1728fd142a3aae6220ff179f43c8b3e3ca522482b79af51fbde46fc54b97497f5691fff3d7d275887cfedaa209169e557362f6e6337eac4a2a46d10df7f04f5f5e2eb8f62a6639e6cb5d60352f4c14641ab590d4a378f6f477e64f164d76f22dcb32a575c19a10d685dd17e200db1800efe10f9af306272b604596bd569de64bd12a59ea9f315d19e4c5d88bdc81b12606c0c9c5438e6d8c23987416dff59f43aaadcea2926bae1e4e09c1ddc8e48282fdee1487d093b88153dd2c6817e1ba76b9e5e46d1d210b831df755e9f8c395ff5faadf462eff73d4e20c4959e5a0d3aa514289968303b33c48d8004b7f2bf9a0f7345eb010c556bb0279290e9e221507f3e3155ff44464c2bb1675a14b7810d10cf7eb353af271d3fa7144514c35928f717aa656714c17e24a5146f6b99cfb6ed3558825a83755ddb7ad5b16fc6738f6bcb2175a3504a4563e293a82b8b829f11b546d303a566a7d90d45631781feee8201af80bfe20209de2c084bf5f071c3a1549a329ceb8191a5d419057fe6e0b3e7afc0140c535bf16143f298bc31597aefaea072d558e1ed6b82145021fdb513a7e4d55708adaa612ec594c66f5880da5891fdfc1a45ecd61b7c6bee6141be893cd02fa6e2cae16afec31496fdc2b7eacd6dd4364684c8801f03661b7edaad26493d40aa98961ee91510de76ce803ba547ca0a62c25ed687aab6734f83be5f6f73fcb37893084329e0e49b742b84873d99a3a9cf13166f95490b07fb0f0ccc8419fffad8c81ad2a9282e311cf63770abdd0463e941585f4c827f16b7769e0158229e2e53add6e30918dbf9dd2bd861c6a644a8fe7dcde1bac3ea29e51aace31d7943d67df404361b59a7c100bf2e0f6d6e4b24a88873e26641d8219fa7fc5c942fb4b28955cccfa3db9d64e00f9b8b1f2d36b3b9cdd5e5e809bd27e43adaff4366c35f7aff6ed8241f60b7a2e32a5d6729ec71eb6ea8c80104dafce63866b47b3362fff42baf1df5309b5dfbe1899cbcac4564cff71cb620564ce31635db3f05438e35dff8f67ef7fa369f6c0662d0a31cc6daacf81bc9b2319ada8786a788439b6d45c4242a60acf773eb2550027e637d83e50e9ff2e63c7ea615228f04be3e4041f6ba2a4677ab67ff65c2b9a13f2b08797914b488982304ef6a22f1b5020a61d9aaa670fdbb3260cd7d2d1472bdc3047a1effb44514dcde7f58c0427ed28a382aa75b0a6b537ed09d237bdd5be7fa1cefb34432fe8c7c0253685f57d31ecdbad1ebcf4ee8b6692b959e86a1dae63c231097b7360fe2d4a775f46c2c71d7dbc913309d5d899ac0f9f80e2a40adb56f339f92fdef06e310eb2297c63b9a4809744c337aa99d4ec2b5ff9e2dacb32aa4aa47cc41cbf72eb1d57903b12e8b018123b2c5533a3814bfd7b0c55517e222ee969467afa509336bdfbc20fce82008890b4c20ecea1e2a653e5145e317b3f83ea1d5160e053c04d585db8ee24a1c4dae3d06987862e5606478c2c28e1240616a0727fe21004267dd67aa957c04a2b4ff24a2a6372f69a56677ba765f98f4980ada9c79ae2b5a90d79bae802527c387e606edc1cde03da6e84ae885c540f70572b3025799814ec60ee9d13b8a07727f9337422bf5842dad8cea903c64c77f9aef283b58924d931734971fc0f564a71e255f51f6ed7daadaf85111b59cfc923343376814175e146eceb1247e9fbc9678c860586b9ce7d1215985a2514c711ec6e4adde48e5cef45d1b8cb765acf750b44862b89d941afdc8a2aa753089e8799716bbbda9ea5f4420413dd982d2f681b75c9a3fb9007aa21a57d84d13d0009ada62fd7b111e31e7f76eba86127076a70e959c0bb6a8f6002a56119e86fcfeaeaa6cb6986e552bb2fca792f69e902a562c754a5bdc3d6ab9c9da90bbe5c6d171cc82a5e6080420329120d17de44cacd1745f5be1def0e69279ed2175c9ce7c933bf08169c18cadbaef8692eda83bb1ab8c23f60aaf2603968f04b1a1220bad6252dea2c846d51879e6b8719ccce680d254b0f62158e8d3e3ea64904becb9a902bb4a562f6be299ffe5adabf01291a8840ad350767ba3956f3df457bb265ce9eadfe2ac5721d97100b6a523d0ede81990f5cd962c5ddd01a80592d23be434f442a834d0306ad2cc82d09df2683e896c5196a22b5d279a26573ee0e8ada88a9f6ba03397e756d8743cf0bbb3ff8bbf7116df6b7355995235891da42f0520e5f3715e81b577a39c5e630f26e747625c734f3d1067fb09ddffcc1c7a6c7e5b60f8c474a8341f073b07a1e4ea2501aed262f8abf6cb18327b9adbe1ff8d846486212cee9ea08f36901f3aaec9c2af86437e61dc723770989ffada69cf2c894a88903237703b9f5237796843b67077c8c9ea8e4450c8ae4bccff6a1900c154068412ed1f98edb4ddd13f2472ebac11ad2b9e79041ac152d1f54f4bc183c966b5fdbc3d685ea97178e41a564f5456223f50bf3a2e66e6806113aa8c9dcba58f21fe661068095094a738a35f6dfcf20cbdc1bcb965a3e48f15b9d4c71ac04dde9e549db830916bceb12d41e173e63ff259ea22ec2c6aed7415cb74d3ce355d662f2a0f38c5378cfecfc382044850f323143d6359e76944aab95ee79de40192748975bb8be629f525feb6853984529cb6c957467a3d3b6083cedae5c6dc30873d7efe22342b01a999f05698f226d7d00fe5bf183d9fa6c3a6cdf21f8466dcf0903590dff9d880182ba9034ebdc74a051a61e1e2b19943f052ceeb7fdce3478aacb1fa15b9e49052697b9462e66ff029abca336975dc0096fadd1714b5de913b055844c318141f1d9bfb7d987358e45fbba0893b3e0943f3f5491e0ea5b2ada4b692ced79f81c4b6f1ec8aa24a05298eb3eec65856bc4e638a04e149cd9face66105db008476efdf0fcec3085540bd0e933087915b70f052a5cd714827fbd2e76eca75a26dcc337ac2aa763741cf0414ac0dc05cc37fc2cb3e68cff9c3fdfa4051445beeff13210f194e0e1393b1c8f96c45261582c252b95df7b8e9b01e057f85d9693a07c1ea401f5f75588843a4befe52cdc07cb4d3c688b0af5e72390538c2d772bc587a4830ed28874fdbc8c43cf78d1262d79376ea0d6150eb108d2dea4ac76521e429d802efd8bd65060e7e2105571e8ad65a313a1460504ac6ef521a60f8f92ac6fd710aaea3ca154068cbbbbd4eb6c88f29a5d4a6eb4924f9bb1fb668c036921467fc3bb97ca2c1ab97fe4d0756125b21df24d3fb3738ff167b83a809a6550602366c4391f94d7767199fd855e9901d46172fa334488b1947913dffce9bbfe6275ebc6ff90a6c9f82449dc80ef4642778266921f125fc9ff293af5f4496fa0964ea352f4c2918120466873a516955c655863dd3697e9ea22d2c96042d33934f283a85226c66258bad0c3bf1ac3f20620d22ab6c0d955892395609ddb8a09770c1d906bd55998cba8fc716d93adde1373c66a476715623041cd0a9bcbbe1b9af4f2cb06703ab876ab70d8e88981129ae2ae034b670aad7309da6e4a7924a6d7347300195687a5d173bbd4f5a071e5287a7ffe5d2270c1b9262ef6493cfa92a6238d079fc779b4fb9a5e498cd3b17c699bd326bc65e00cc9ea69ae575cf05b9c52281780c4764774df826d6a131a5e358a42dea716ffe1b170e56293b80c25a0b59951426448625e1a117b565e3c4010fc0fa86650237d9b68d7649e815b8534c4670b9db5425c24060fde83e8348ff4c1cf020f147378a1574c5146a8b256e6c8c1712a6a8db8c123310e4282127de32e6c12bf3dc60a74be28152be6f7720c2b32661faeea1b1326026fef16411cf92cec64c3f44abe117e749c894c4f5046bd21f0fdf8265630066f25c1c7ee80014ee1e6ad86ccfec2568893515370df12a3fa6a49b91eb2a166838b60143c4b9e1282982209f7a2c003f42003a7ac83727dc670c90f2b659d6aa2c5992623ae808841d54b5c7c92cc8c6d18f522a5b3ff6e3ea48bc40f27799b4cfd763144cfa5b329c2a5be91468edd5f74b35d8a26cdb3922218ff92930a97e95673fd05606e7e806ab6cd6a7f01e366a1f6dfd6b71c0d34997e66ab7acc9e116ccdea884f41247dd16001e2abdb5e3cde959905de1029f84325688a555f25b01450963ebdb290bbfba0bf2772733b957ff81e05d2277081818726d6f31eb6f879787848c06e50d4ad49f971ad0aa43e8cdd5084aa41061f0ed31a4d4253b6ff0d6be695f85801cd3f33bc075bb742156eb57bdb84f04a97185674b0e169700e6915a7caa62fa28bf777c6c98c47d6555476f31bd07cba7f6a834425863bbc6e5b6f179e91e8a7c878a6631348d610beefd4267a5b1ff7890058a66d6219df0aa32c512970865126105a75eab22fd2554eaa9c672c744856db85c25226bb8e1f8522338f4624a0fd317b9777ff35beb5fd931832e831771fe42b7978bfbea85f2cf5ca6f0100db7c989a60f908d317360edc5e094ebd004fe25f795d60a52da4a21d0a217062c620891d1a822404e895824bb9eef2db31867bc25e387269896807e458fa17a8c542c557ecad6f5b8ed52439b0d291cbeee6159065002dfa0ee579f9927a8f51637efd4b2bb1c8ba41f9a0bdc6717e06a0ae758d2879be6f6c79c408a16a7e2ce555052c1b03c824a25eaa6126b8687efc9dbb99b3745cf33b0a89c27adc834f20db90fac0e556f94e10280ce8a48e60722444974b5fbdbe9f36e40147368a158f5bc88629c4c95c79e71add72585ec0da88675d4efd34b858e86fdeb5168e36a43346755a2ddfbf5a86b6ab86782ecd88760e0003c212edaf9cc19a9c051ca36b33ae777c541bb29b398d6a40cf78335dd2b11ebbb276b2bc9bb558f3b3658b4f758fb5740d1766e5b311103ea69c63c0de307cdcc66c4075712a8204f57ec197632b8629c6705fb0f8d0660eb9a69e63ea1c52b0873662a8dc0b21e58862fe7f03ac4f950395645c11e4100c42b2fc32b1e06585c38b9f4ef9506dde441772badbe1b794e2a045f6a5a9d0861f27f32b614afacf80808b8b4ff047c3d63d91c6129e1fb8dd28bf0196af53812cbd311bd47ba740a6f1d5db20b9d05781b845b552e83f535b915586235ae3726c534b747af80e38fd33bd6ce07eff0c3b75697ecc69b8af24c874dec4a04b8348569cc84d96237404780a8fc36bd21403539e05ea4f2ca8ba54265286f1fe9aed082e54ce1417da1392622ee143aa1fe4664170acf464454e0b37ff1ba2029ac235c02e66b74ec4c2bbce1ca5537439598c020671252de4723cc48f025ca17436770238a92ac02357a56cd84b180694c4b874bb877f84e8ef682778b83a10aba9f47ff943a95be1f5fd3ca59a4d0fbad20d9713131717352ba61e19b4e2fc81355925553abb1565fb31cf362eb35b87ad5be096ddc733d07150180c97a2716b95cc14c9701814cc95f16547ed9be553bd112052abe6033808784145d441d9dfec998a34396c8a050537966eb2c2fc36e97a7c8989889dde50605c8fc865ca1eec068e9595b6754e8dc2416b5aec22953bec02807f74ac6b2a2d2e3b8898e11998cbe566c830db6bb7179d74082486cf068d8b349562ec7a877320f943e509411b2cdca6c2ee1e418249e3cfa16038f7e981159f3e439811dcfeab0f79038e11f06a392b6b01ce2d4df6f7d568faa0954de12a66a48ba830b923e892e2bc51476996405fc5f56580ccbe3a7971569ffcfd3378d2fe8ff500f3d22b5923f57f8ee5e5e9964acf492709042cc30017ae0f7f791ab747255578377f149994bfbd88c2439875b5db8153c405e2e0a96c78ff40e61ddd8a5e3aafed9af515ab121eceb0d472eedc65704641e5ddc9b1ec5f33f5239f4cf8a6b3d613a2066825988ff345de9c4719acd81f7db44414942b1226edd96421b15b31086178df3e5f6ae8564ee9c4a06d29f6c75eeb0a97a765406c6ea9e7091a2ff2ea04b772be0173109eedbebd8efd4d8bfa7b03829d7fbe763ef5d9eec926a15363266c7764016e85bca6b48080a3c0aabaeb03b958e42df3a2e23a75c2be6700c7b24ae59778f142c2904823e2131ccc7be03d2ca86bae1453fd5c5206cc1bb4dda9e3b4c7f4b5f2429a44ab1afd6d3d5bbe128b84e6250ee1a23ca52291c7cb22c6fc6ffc3e595c0b8bbfd716ccde0738184ccf2b1c751829cdba711e0015adcff6862413f7e5353b29ea80d462f540251785b3f32c94068a6923c5c9a718bdc60900eb6715a37e505570a5005f7f543edfcae01b76ce7b8b5896f19014e4b46c8c0affcb0087235d3ec58c5bdc4ea714acde4177a47da02e126190ae401e50a23eb38d53f6b81e43e97d790b650fdc176664bbd36e85e84546d85eafa8289b6ca71e7fae34a4cb3925230acb696aff7b13e7cc0b63c54a60b398f6fc3cdecce93458797b253d0b6f07a3da1d22ea9e03e98e64b9f23bc9e2e0d9eff86d58ee4c50b3379752919ef681cd5d185d673b81c080ec160fa9a4ed967d7b1f5be1a9dc797e193167a35b6dc76c51934faf0910fb1117b8a5e1000f1cfc7b2a3062f1bcc7aa4bc23f34c54b28ee19830d6327f867984f415ecba8f69529f79e93fa5add478de9f63db0a0b8a2670da59a5694cb00074c4853426a1c2c66ad775003b248717aa03e8b185ce96fb37d8bf3752c3c5d1293d70c79c3a0d749086bfa741aff10e02c39175c28a99f3217f87587cc17f1f3817ceedcf2d3a1e1669702695167cf5d0a11925119ca22c04d54cb0678d31868af3f812a883723e9868be26d84cad601e5092405a69728dc8e26dc4d65a9408b023af51394add19baef1f7d5f18efe1450be06001a9ee6ea106529d74f58c84c84bc84716ffe5a9f06dc77273a7628f6b9a02ccf1ee40709f2e9aad42b4f6b106d9acfef01efd7220e2356ef8b4e8be284fb7937aabf559cb5b041efb5854ef81321de3d2663c60d196a3bf2e7eb3240dd6606aa9869e921908d86712b8e6e7d67ca60b4edd4760424bbf359311e3f5305ac0fd508002ffae6fb2e4b16e9fd08b115aec5c84b63f689ef98ff416519c7d67277968a0f45e410aac47c0c94037ca34520e28f20ba6b63e9e109143661e94b61ab2ee0b821347a02b19df2295ec029e91e4aca00985bde5451579af752e98fdeec4439e2e5f25d63afe3044170cb928439bf4c3c6803d255f3c6923047b083e06d6b4c7fee48b08e1cbd06bb4a2a30d175c004ee9b3bde578f8154369883a850f0f5412b9771f8a955aa1cac234c5645272069bdff7a9ae4b1d9748d5776dceb6fb0d36791e95bc10dbc77fba97d2998ab523fa1ae1b8d535bf6bbf0e39a5ce5e5e6ec622f207c130fd35ce0a5a821ceeecd40c24324c29132d2e3622aaca33f5c41673c32e39915aab0f7f8c3aa792cb2c17a0d5572424a194160ff63229d7f50ba5759678fbf112de564a11b6493f21ef28bc7be738604dc651137ba367468fbf5770b9a051d5c26acfa52ebea73ef25787a490ad528826f6ba1096ffe44f1927c98ac59010b4fd774a7abecc68d72dd069ec24bb932834f3bcdb8fbac030d2a8b97a89b924dedbee46cc6ad9f5904b281679b5bd93183c6cebc010d751b8da6fb973782a32e6c86850502befd9c654c2444eb8b41bb2836f98e8fe5b8c82a93fabf4dc17ad939119b66c522ac40261d9bc40d11ff366ecd991ac9c3ff5c9376d3751f3640cc539b94ab3453926c3d67c6789d482149f56ce4d88be9637298f05974adecdbe835d91915126763972324d8d65824c48dfcc9c3e184aabc477ff473c05e2d1d035307468147df80aa20c18fe1c1ca217bbb83e76ab9deec520b669ecda302bfe3680927ddc72aef30059759ce35718e9f05179d6d3c07775ba5da28509e807dab4613705b13d0a7ccdab814d6fa6c18510fb3ab514e788cbe039cfc31662843b48fce536fd6be0d492fbd84e285a1ac7fb59774ab718e638ec0454643e216b3cd006493e4cf5293951c77cf5fc9589f3bd14afd009ef6225ec9e983573cc08d3727d11948c5a3d15157a7123cfb16f9b6e98864b2b25ea08e5a196ee9ebfbf8be5b439d7952fdadf3c3a49a4537d22ba85bcd988ac87faaf24f088d69968024bda4b4268fcd383671d5a3a6c6f1daab2713be314c7556f8f1cedaabe9a28b14af3b9b03e4cbef1f312c07df5f04fca753a56fbc36be91059a10cc9566033a3bb1214fd5d741f0fff5c2d95e9dd52001be24616e3d2dbe2460081c3aaedb805da64983f81221d5c7137ab0e9d9380ee9ce2173df6c8c6b461db016fc039157a586c736d55d0d04d9426b880ed3ccc64378200bfff38f750f9715ab0422253ac3beac3666e8a2160018dca4415daad9eb8fba4bddfb30c0986e4b7a54379dfd58a8e544ed551f340f03b79f4515b6109c7b481b11902fa890c5680732abbbabef4a2059cd5e1cae0623934477cd28b0e13d233e47f1b51dfa56593128c7283587d952ffde7fc9f8976eaec61a260a13bb230295eaa90a949147746eb6712812dd7d3eb5f1995a871172af03371e81e87b17177ef91813d2ddb3eb3fca7f1fb05617c20842bd9ec6b40cd5b7925cc64c6c7b7d2066d8430d05cc3ba99b2bf7ce833701767d455960a41cfd1d2c7ae4e5326a2cc09edb985517d2dc6554c423dfad533726427caeb77548346a9667a9ab5c3b511561a1f593167484c9c2dd5da8639c0b17b5139332a36fe787a2c702409125862087f3a4a4dd7d08e499d6c1ac4437ca14f8e1314ce666a38dd4109c46ab52aba33ee4a471e67bba4d00d0eb19f986aac02bc3d1baeb236044e6ce78645a4f3e83bbe0e9d146e5f0d1af2884e483353edf960c9f997a662fe94e7b279b3580c1053eb7721e14b775a621247262e32068cd36628261d74cf593a8330201a3e420834a2ee162182fe3d83f17b8b7ed49f7fe9c30a7ee46746890769ceb28ad8d286c5c7e53c93e0187f49b137fb01adf56778fd4599c7f236c614e9a2d67958e570ae581979a6f1f76fc3999745097e89f193771e2909221706786fdf4bf92f7e85559696bb75a1695092a7d8ec91286f95f5b8edbc12d80d72f82d9c671740a19293b02a8008b37b3921f563935eea12e2822cef264997d6e073c873f3e69bfdab3870555f534e7c3be108fb468089def5fab5bf3ff5b3d43190fcfce57abd4c049e6f82933335b17900d80010ae9cab2c7e9e2e9aa6c2232bc74a75a86ea9329a4067ce65f99bcfe07165f1d413215d9f8362bb9854d44e69a3c7670122cc0452a6e099606dce3d799b6182afbe3000693d8d0fd6b5c3128eead8791d3ea28d94a2d7e6cebb9ed8c3588a5cceee98c265baf2c0fd7efd79eda095e062d8ac95d29c2806a68c9295633dc7aa72f0ed4643c14f3855d32971a368e3d0c6990fc38a1adea82dc22bde2319ea0c74a39137d5fa60408e25cd52e48731b3e937980f1db1b227e203aacb9c49abdc2b410b713f7ee7b94d8f94f05cc01bc23866777269a8b5fc80a6f6903be42e378e201c7f308b4b3c429d925ab691c6a3f681f6a360dd2aeab41ae569f94219e0885b9dae7517cc8e965e1a07d3b1b63fc0edcffef5c1b49b3567311104d6033a2022b0f2df3a252c95cbaece3e31e0dd697f14d29a67ce15abb22d4c89f149147f413e20ad9d6291cc80a9ffe504cf7f9686eae9b93d0b66381127793e18935d10d670043d65467f7cbc5071199b2ab63627c5c885856e285455fb8c6b22991faa898abb3b60b5c1554ab4ae71db690104097978b616aab5e0f7a02b961e6ec3bbda693d61a303d60bba862c9903cc2175350f0163ad4c53ad727173b455270118a7cfbcb009fb547a780b04a168fe2932c829fcaf044718a31eb110b6ec8ca2ee4dba2caca1a65e690291dd2d2ef42cdacb974a07fa63163424505ef980efd10d24edaabeb230427066124015e5e8732ce912468ee79f6f38e75bf8318c79c13a6cd52eee2868d6fd051db424434bf138b00949be53af7f75c1d1de859b8505a16c430767d435fc214aae0cd59e3d5cf0dbbc4583e548e17fa896e2012918fc68ce9d4faeb4ebabd646667f91c1aebe5a9105afb22893d9a37e1bb5a9de5f4b4fb4264894ce52f7249f568a118fa46aa585d20665806514f40ac939e886184761d085ef62e7224b2a693483f5399e84f24c9bf932fd5516bb14d791b8a70cd895bb8eb2b58f47beebd70d9fc23e976d57e4624cc62c00bb23fb2a5e7c48f804062af6941829587cbf4da2</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">please enter the credential then you can view the content:</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>redhat</tag>
      </tags>
  </entry>
  <entry>
    <title>setup AD controller on linux</title>
    <url>/2024/03/30-setup-AD-controller-on-linux/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="Setup-AD-controller-with-Samba-on-linux"><a href="#Setup-AD-controller-with-Samba-on-linux" class="headerlink" title="Setup AD controller with Samba on linux"></a>Setup AD controller with Samba on linux</h2><h3 id="Server"><a href="#Server" class="headerlink" title="Server:"></a>Server:</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">root@ad:~<span class="hljs-comment"># cat /etc/resolv.conf </span><br>search hubo.io<br>nameserver 10.157.17.12<br><br>root@ad:~<span class="hljs-comment"># cat /etc/hosts | grep ad</span><br>10.157.17.12 ad.hubo.io ad<br>root@ad:~<span class="hljs-comment"># egrep -v &quot;^#|^$|#&quot; /etc/samba/smb.conf</span><br>[global]<br>        dns forwarder = 10.50.50.50<br>        netbios name = AD<br>        realm = HUBO.IO<br>        server role = active directory domain controller<br>        workgroup = HUBO<br>        idmap_ldb:use rfc2307 = <span class="hljs-built_in">yes</span><br>[netlogon]<br>        path = /var/lib/samba/sysvol/dc.hubo.io/scripts<br>        <span class="hljs-built_in">read</span> only = No<br>[sysvol]<br>        path = /var/lib/samba/sysvol<br>        <span class="hljs-built_in">read</span> only = No<br>root@ad:~<span class="hljs-comment"># sudo apt install -y acl attr samba samba-dsdb-modules samba-vfs-modules smbclient winbind libpam-winbind libnss-winbind libpam-krb5 krb5-config krb5-user dnsutils chrony net-tools</span><br>root@ad:~<span class="hljs-comment"># sudo samba-tool domain provision </span><br>Realm [HUBO.IO]: <br> Domain [HUBO]: <br> Server Role (dc, member, standalone) [dc]: <br> DNS backend (SAMBA_INTERNAL, BIND9_FLATFILE, BIND9_DLZ, NONE) [SAMBA_INTERNAL]: <br> DNS forwarder IP address (write <span class="hljs-string">&#x27;none&#x27;</span> to <span class="hljs-built_in">disable</span> forwarding) [10.157.17.12]: 10.50.50.50<br>Administrator password: <br>root@ad:~<span class="hljs-comment"># samba-tool user create jason Huawei12#$</span><br>User <span class="hljs-string">&#x27;jason&#x27;</span> created successfully<br>root@ad:~<span class="hljs-comment"># samba-tool user create root Huawei12#$</span><br>User <span class="hljs-string">&#x27;root&#x27;</span> created successfully<br>root@ad:~<span class="hljs-comment"># samba-tool user list</span><br>Administrator<br>jasonoss<br>krbtgt<br>Guest<br>jason<br>root<br>root@ad:~<span class="hljs-comment"># nslookup ad</span><br>Server:         10.157.17.12<br>Address:        10.157.17.12<span class="hljs-comment">#53</span><br><br>Name:   ad.hubo.io<br>Address: 10.157.17.12<br>Name:   ad.hubo.io<br>Address: 2404:f801:1f:10a:21d:d8ff:fec1:372c<br></code></pre></td></tr></table></figure>
<h3 id="client"><a href="#client" class="headerlink" title="client"></a>client</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"> * Resolving: _ldap._tcp.hubo.io<br> * Performing LDAP DSE lookup on: 10.157.17.12<br> * Performing LDAP DSE lookup on: 2404:f801:1f:10a:21d:d8ff:fec1:372c<br> * Successfully discovered: hubo.io<br>Password <span class="hljs-keyword">for</span> Administrator@HUBO.IO: <br> * Required files: /usr/sbin/oddjobd, /usr/libexec/oddjob/mkhomedir, /usr/sbin/sssd, /usr/bin/net<br> * LANG=C LOGNAME=root /usr/bin/net -s /var/cache/realmd/realmd-smb-conf.X1SLQ1 -U Administrator@HUBO.IO ads <span class="hljs-built_in">join</span> hubo.io<br>Enter Administrator@HUBO.IO<span class="hljs-string">&#x27;s password:DNS update failed: NT_STATUS_INVALID_PARAMETER</span><br><span class="hljs-string"></span><br><span class="hljs-string">Using short domain name -- HUBO</span><br><span class="hljs-string">Joined &#x27;</span>SQL1<span class="hljs-string">&#x27; to dns domain &#x27;</span>hubo.io<span class="hljs-string">&#x27;</span><br><span class="hljs-string">No DNS domain configured for sql1. Unable to perform DNS Update.</span><br><span class="hljs-string"> * LANG=C LOGNAME=root /usr/bin/net -s /var/cache/realmd/realmd-smb-conf.X1SLQ1 -U Administrator@HUBO.IO ads keytab create</span><br><span class="hljs-string">Enter Administrator@HUBO.IO&#x27;</span>s password:<br> * /usr/bin/systemctl <span class="hljs-built_in">enable</span> sssd.service<br>Created symlink from /etc/systemd/system/multi-user.target.wants/sssd.service to /usr/lib/systemd/system/sssd.service.<br> * /usr/bin/systemctl restart sssd.service<br> * /usr/bin/sh -c /usr/sbin/authconfig --update --enablesssd --enablesssdauth --enablemkhomedir --nostart &amp;&amp; /usr/bin/systemctl <span class="hljs-built_in">enable</span> oddjobd.service &amp;&amp; /usr/bin/systemctl start oddjobd.service<br> * Successfully enrolled machine <span class="hljs-keyword">in</span> realm<br>[root@sql1 ~]<span class="hljs-comment"># realm discover hubo.io</span><br>    hubo.io<br>      <span class="hljs-built_in">type</span>: kerberos<br>      realm-name: HUBO.IO<br>      domain-name: hubo.io<br>      configured: kerberos-member<br>      server-software: active-directory<br>      client-software: sssd<br>      required-package: oddjob<br>      required-package: oddjob-mkhomedir<br>      required-package: sssd<br>      required-package: adcli<br>      required-package: samba-common-tools<br>      login-formats: %U@hubo.io<br>      login-policy: allow-realm-logins<br>[root@sql1 ~]<span class="hljs-comment"># id jason@hubo.io</span><br>uid=1064201104(jason@hubo.io) gid=1064200513(domain <span class="hljs-built_in">users</span>@hubo.io) <span class="hljs-built_in">groups</span>=1064200513(domain <span class="hljs-built_in">users</span>@hubo.io)<br>[root@sql1 ~]<span class="hljs-comment"># ssh jason@hubo.io@localhost</span><br>jason@hubo.io@localhost<span class="hljs-string">&#x27;s password: </span><br><span class="hljs-string">Creating home directory for jason@hubo.io.</span><br><span class="hljs-string">[jason@hubo.io@sql1 ~]$ pwd</span><br><span class="hljs-string">/home/jason@hubo.io</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>setup k8s ha cluster with kubeasz</title>
    <url>/2023/10/18-setup-k8s-ha-cluster-with-kubeasz/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="Architecture"><a href="#Architecture" class="headerlink" title="Architecture"></a>Architecture</h3><p><img src="/../images/v2-d28aa5c21134bcc4d05bbfdcfc785e29_1440w.png" alt="高可用"></p>
<h3 id="Environment"><a href="#Environment" class="headerlink" title="Environment"></a>Environment</h3><table>
<thead>
<tr>
<th align="center">Cluster Role</th>
<th align="center">IP Address</th>
<th align="center">Component</th>
<th align="center">Hostname</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Master-01</td>
<td align="center">192.168.3.11</td>
<td align="center"><code>kube-apiserver</code> <code>kube-controller-manager</code> <code>kube-scheduler</code> <code>ansible</code></td>
<td align="center">K8snode1</td>
</tr>
<tr>
<td align="center">Master-02</td>
<td align="center">192.168.3.12</td>
<td align="center"><code>kube-apiserver</code> <code>kube-controller-manager</code> <code>kube-scheduler</code></td>
<td align="center">K8snode2</td>
</tr>
<tr>
<td align="center">Worker-01</td>
<td align="center">192.168.3.13</td>
<td align="center"><code>Kubelet</code> <code>kube-proxy</code> <code>etcd</code></td>
<td align="center">K8snode3</td>
</tr>
<tr>
<td align="center">Worker-02</td>
<td align="center">192.168.3.14</td>
<td align="center"><code>Kubelet</code> <code>kube-proxy</code> <code>etcd</code> <code>keepalived</code> <code>haproxy</code></td>
<td align="center">K8snode4</td>
</tr>
<tr>
<td align="center">Worker-03</td>
<td align="center">192.168.3.15</td>
<td align="center"><code>Kubelet</code> <code>kube-proxy</code> <code>etcd</code> <code>keepalived</code> <code>haproxy</code></td>
<td align="center">K8snode5</td>
</tr>
</tbody></table>
<h3 id="Setup"><a href="#Setup" class="headerlink" title="Setup"></a>Setup</h3><h4 id="env-prepare-on-deploy-server-k8snode1"><a href="#env-prepare-on-deploy-server-k8snode1" class="headerlink" title="env prepare on deploy server (k8snode1)"></a>env prepare on deploy server (k8snode1)</h4><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># env prepare on deploy server (k8snode1)</span><br>[root@node1 ~]<span class="hljs-comment"># ssh-keygen</span><br>[root@node1 ~]<span class="hljs-comment"># for i in 192.168.3.&#123;11..15&#125;;do ssh-copy-id root@$i;done</span><br>[root@node1 ~]<span class="hljs-comment"># yum install ansible -y</span><br>[root@node1 ~]<span class="hljs-comment"># egrep -v &#x27;^#|^$|#&#x27; /etc/ansible/hosts</span><br>192.168.3.[11:15]<br>[root@node1 ~]<span class="hljs-comment"># ansible all -m yum -a &#x27;name=vim,net-tools,epel-release,yum-utils.noarch,bash-completion state=present&#x27;</span><br>[root@node1 ~]<span class="hljs-comment"># ansible all -m shell -a &#x27;yum-config-manager --add-repo http://repo.srv/centos7/x86/&#x27;</span><br></code></pre></td></tr></table></figure>

<h4 id="Kubeasz-setup-k8s"><a href="#Kubeasz-setup-k8s" class="headerlink" title="Kubeasz setup k8s"></a>Kubeasz setup k8s</h4><p><a href="https://github.com/easzlab/kubeasz">https://github.com/easzlab/kubeasz</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># download setup tool</span><br>[root@node1 ~]<span class="hljs-comment"># wget https://github.com/easzlab/kubeasz/releases/download/3.6.2/ezdown</span><br>[root@node1 ~]<span class="hljs-comment"># chmod +x ezdown</span><br>[root@node1 ~]<span class="hljs-comment"># ./ezdown -D # init kubeasz env, all files will be saved in /etc/kubeasz/</span><br>[root@node1 ~]<span class="hljs-comment"># /etc/kubeasz/ezctl -h</span><br>[root@node1 ~]<span class="hljs-comment"># /etc/kubeasz/ezctl new k8s01</span><br>[root@node1 ~]<span class="hljs-comment"># vim /etc/kubeasz/cluster/k8s01/hosts</span><br>[root@node1 ~]<span class="hljs-comment"># vim /etc/kubeasz/cluster/k8s01/config.yml</span><br>[root@node1 ~]<span class="hljs-comment"># egrep -v &quot;^$|^#|#&quot; /etc/kubeasz/clusters/k8slab/hosts</span><br>[etcd]<br>192.168.3.[13:15]<br>[kube_master]<br>192.168.3.11 k8s_nodename=<span class="hljs-string">&#x27;master-01&#x27;</span><br>192.168.3.12 k8s_nodename=<span class="hljs-string">&#x27;master-02&#x27;</span><br>[kube_node]<br>192.168.3.13 k8s_nodename=<span class="hljs-string">&#x27;worker-01&#x27;</span><br>192.168.3.14 k8s_nodename=<span class="hljs-string">&#x27;worker-02&#x27;</span><br>192.168.3.15 k8s_nodename=<span class="hljs-string">&#x27;worker-03&#x27;</span><br>[harbor]<br>[ex_lb]<br>192.168.3.15 LB_ROLE=backup EX_APISERVER_VIP=192.168.3.250 EX_APISERVER_PORT=8443<br>192.168.3.14 LB_ROLE=master EX_APISERVER_VIP=192.168.3.250 EX_APISERVER_PORT=8443<br>[chrony]<br>192.168.3.11<br>[all:vars]<br>SECURE_PORT=<span class="hljs-string">&quot;6443&quot;</span><br>CONTAINER_RUNTIME=<span class="hljs-string">&quot;containerd&quot;</span><br>CLUSTER_NETWORK=<span class="hljs-string">&quot;calico&quot;</span><br>PROXY_MODE=<span class="hljs-string">&quot;ipvs&quot;</span><br>SERVICE_CIDR=<span class="hljs-string">&quot;10.10.0.0/16&quot;</span><br>CLUSTER_CIDR=<span class="hljs-string">&quot;192.10.0.0/16&quot;</span><br>NODE_PORT_RANGE=<span class="hljs-string">&quot;30000-32767&quot;</span><br>CLUSTER_DNS_DOMAIN=<span class="hljs-string">&quot;cluster.k8slab&quot;</span><br>bin_dir=<span class="hljs-string">&quot;/opt/kube/bin&quot;</span><br>base_dir=<span class="hljs-string">&quot;/etc/kubeasz&quot;</span><br>cluster_dir=<span class="hljs-string">&quot;&#123;&#123; base_dir &#125;&#125;/clusters/k8slab&quot;</span><br>ca_dir=<span class="hljs-string">&quot;/etc/kubernetes/ssl&quot;</span><br>k8s_nodename=<span class="hljs-string">&#x27;&#x27;</span><br>ansible_python_interpreter=/usr/bin/python<br>[root@node1 ~]<span class="hljs-comment"># egrep -v &quot;^$|^#|#&quot; /etc/kubeasz/clusters/k8slab/config.yml</span><br>INSTALL_SOURCE: <span class="hljs-string">&quot;online&quot;</span><br>OS_HARDEN: <span class="hljs-literal">true</span><br>CA_EXPIRY: <span class="hljs-string">&quot;876000h&quot;</span><br>CERT_EXPIRY: <span class="hljs-string">&quot;438000h&quot;</span><br>CHANGE_CA: <span class="hljs-literal">false</span><br>CLUSTER_NAME: <span class="hljs-string">&quot;cluster1&quot;</span><br>CONTEXT_NAME: <span class="hljs-string">&quot;context-&#123;&#123; CLUSTER_NAME &#125;&#125;&quot;</span><br>K8S_VER: <span class="hljs-string">&quot;1.28.1&quot;</span><br>K8S_NODENAME: <span class="hljs-string">&quot;&#123;%- if k8s_nodename != &#x27;&#x27; -%&#125; \</span><br><span class="hljs-string">                    &#123;&#123; k8s_nodename|replace(&#x27;_&#x27;, &#x27;-&#x27;)|lower &#125;&#125; \</span><br><span class="hljs-string">               &#123;%- else -%&#125; \</span><br><span class="hljs-string">                    &#123;&#123; inventory_hostname &#125;&#125; \</span><br><span class="hljs-string">               &#123;%- endif -%&#125;&quot;</span><br>ETCD_DATA_DIR: <span class="hljs-string">&quot;/var/lib/etcd&quot;</span><br>ETCD_WAL_DIR: <span class="hljs-string">&quot;&quot;</span><br>ENABLE_MIRROR_REGISTRY: <span class="hljs-literal">true</span><br>INSECURE_REG:<br>  - <span class="hljs-string">&quot;http://easzlab.io.local:5000&quot;</span><br>  - <span class="hljs-string">&quot;https://&#123;&#123; HARBOR_REGISTRY &#125;&#125;&quot;</span><br>SANDBOX_IMAGE: <span class="hljs-string">&quot;easzlab.io.local:5000/easzlab/pause:3.9&quot;</span><br>CONTAINERD_STORAGE_DIR: <span class="hljs-string">&quot;/var/lib/containerd&quot;</span><br>DOCKER_STORAGE_DIR: <span class="hljs-string">&quot;/var/lib/docker&quot;</span><br>DOCKER_ENABLE_REMOTE_API: <span class="hljs-literal">false</span><br>MASTER_CERT_HOSTS:<br>  - <span class="hljs-string">&quot;192.168.3.11&quot;</span><br>  - <span class="hljs-string">&quot;192.168.3.12&quot;</span><br>  - <span class="hljs-string">&quot;192.168.3.250&quot;</span><br>  - <span class="hljs-string">&quot;k8s.easzlab.io&quot;</span><br>NODE_CIDR_LEN: 24<br>KUBELET_ROOT_DIR: <span class="hljs-string">&quot;/var/lib/kubelet&quot;</span><br>MAX_PODS: 110<br>KUBE_RESERVED_ENABLED: <span class="hljs-string">&quot;no&quot;</span><br>SYS_RESERVED_ENABLED: <span class="hljs-string">&quot;no&quot;</span><br>FLANNEL_BACKEND: <span class="hljs-string">&quot;vxlan&quot;</span><br>DIRECT_ROUTING: <span class="hljs-literal">false</span><br>flannel_ver: <span class="hljs-string">&quot;v0.22.2&quot;</span><br>CALICO_IPV4POOL_IPIP: <span class="hljs-string">&quot;Always&quot;</span><br>IP_AUTODETECTION_METHOD: <span class="hljs-string">&quot;can-reach=&#123;&#123; groups[&#x27;kube_master&#x27;][0] &#125;&#125;&quot;</span><br>CALICO_NETWORKING_BACKEND: <span class="hljs-string">&quot;bird&quot;</span><br>CALICO_RR_ENABLED: <span class="hljs-literal">false</span><br>CALICO_RR_NODES: []<br>calico_ver: <span class="hljs-string">&quot;v3.24.6&quot;</span><br>calico_ver_main: <span class="hljs-string">&quot;&#123;&#123; calico_ver.split(&#x27;.&#x27;)[0] &#125;&#125;.&#123;&#123; calico_ver.split(&#x27;.&#x27;)[1] &#125;&#125;&quot;</span><br>cilium_ver: <span class="hljs-string">&quot;1.13.6&quot;</span><br>cilium_connectivity_check: <span class="hljs-literal">true</span><br>cilium_hubble_enabled: <span class="hljs-literal">false</span><br>cilium_hubble_ui_enabled: <span class="hljs-literal">false</span><br>kube_ovn_ver: <span class="hljs-string">&quot;v1.11.5&quot;</span><br>OVERLAY_TYPE: <span class="hljs-string">&quot;full&quot;</span><br>FIREWALL_ENABLE: <span class="hljs-literal">true</span><br>kube_router_ver: <span class="hljs-string">&quot;v1.5.4&quot;</span><br>dns_install: <span class="hljs-string">&quot;yes&quot;</span><br>corednsVer: <span class="hljs-string">&quot;1.11.1&quot;</span><br>ENABLE_LOCAL_DNS_CACHE: <span class="hljs-literal">true</span><br>dnsNodeCacheVer: <span class="hljs-string">&quot;1.22.23&quot;</span><br>LOCAL_DNS_CACHE: <span class="hljs-string">&quot;169.254.20.10&quot;</span><br>metricsserver_install: <span class="hljs-string">&quot;yes&quot;</span><br>metricsVer: <span class="hljs-string">&quot;v0.6.4&quot;</span><br>dashboard_install: <span class="hljs-string">&quot;yes&quot;</span><br>dashboardVer: <span class="hljs-string">&quot;v2.7.0&quot;</span><br>dashboardMetricsScraperVer: <span class="hljs-string">&quot;v1.0.8&quot;</span><br>prom_install: <span class="hljs-string">&quot;yes&quot;</span><br>prom_namespace: <span class="hljs-string">&quot;monitor&quot;</span><br>prom_chart_ver: <span class="hljs-string">&quot;45.23.0&quot;</span><br>kubeapps_install: <span class="hljs-string">&quot;no&quot;</span><br>kubeapps_install_namespace: <span class="hljs-string">&quot;kubeapps&quot;</span><br>kubeapps_working_namespace: <span class="hljs-string">&quot;default&quot;</span><br>kubeapps_storage_class: <span class="hljs-string">&quot;local-path&quot;</span><br>kubeapps_chart_ver: <span class="hljs-string">&quot;12.4.3&quot;</span><br>local_path_provisioner_install: <span class="hljs-string">&quot;no&quot;</span><br>local_path_provisioner_ver: <span class="hljs-string">&quot;v0.0.24&quot;</span><br>local_path_provisioner_dir: <span class="hljs-string">&quot;/opt/local-path-provisioner&quot;</span><br>nfs_provisioner_install: <span class="hljs-string">&quot;no&quot;</span><br>nfs_provisioner_namespace: <span class="hljs-string">&quot;kube-system&quot;</span><br>nfs_provisioner_ver: <span class="hljs-string">&quot;v4.0.2&quot;</span><br>nfs_storage_class: <span class="hljs-string">&quot;managed-nfs-storage&quot;</span><br>nfs_server: <span class="hljs-string">&quot;192.168.1.10&quot;</span><br>nfs_path: <span class="hljs-string">&quot;/data/nfs&quot;</span><br>network_check_enabled: <span class="hljs-literal">true</span><br>network_check_schedule: <span class="hljs-string">&quot;*/5 * * * *&quot;</span><br>HARBOR_VER: <span class="hljs-string">&quot;v2.6.4&quot;</span><br>HARBOR_DOMAIN: <span class="hljs-string">&quot;harbor.easzlab.io.local&quot;</span><br>HARBOR_PATH: /var/data<br>HARBOR_TLS_PORT: 8443<br>HARBOR_REGISTRY: <span class="hljs-string">&quot;&#123;&#123; HARBOR_DOMAIN &#125;&#125;:&#123;&#123; HARBOR_TLS_PORT &#125;&#125;&quot;</span><br>HARBOR_SELF_SIGNED_CERT: <span class="hljs-literal">true</span><br>HARBOR_WITH_NOTARY: <span class="hljs-literal">false</span><br>HARBOR_WITH_TRIVY: <span class="hljs-literal">false</span><br>HARBOR_WITH_CHARTMUSEUM: <span class="hljs-literal">true</span><br><span class="hljs-comment">####</span><br>[root@node1 ~]<span class="hljs-comment"># /etc/kubeasz/ezctl setup -h</span><br>[root@node1 ~]<span class="hljs-comment"># /etc/kubeasz/ezctl setup k8s01 all </span><br><span class="hljs-comment">###</span><br>[root@node1 ~]<span class="hljs-comment"># /etc/kubeasz/ezctl setup k8s01 01</span><br>[root@node1 ~]<span class="hljs-comment"># /etc/kubeasz/ezctl setup k8s01 02</span><br>[root@node1 ~]<span class="hljs-comment"># /etc/kubeasz/ezctl setup k8s01 03</span><br>[root@node1 ~]<span class="hljs-comment"># /etc/kubeasz/ezctl setup k8s01 04</span><br>[root@node1 ~]<span class="hljs-comment"># /etc/kubeasz/ezctl setup k8s01 05</span><br>[root@node1 ~]<span class="hljs-comment"># /etc/kubeasz/ezctl setup k8s01 06</span><br>[root@node1 ~]<span class="hljs-comment"># /etc/kubeasz/ezctl setup k8s01 07</span><br>[root@node1 ~]<span class="hljs-comment"># /etc/kubeasz/ezctl setup k8s01 ex-lb</span><br><span class="hljs-comment">##</span><br>[root@node1 ~]<span class="hljs-comment"># kubectl get node -o wide</span><br>NAME        STATUS                     ROLES    AGE   VERSION   INTERNAL-IP    EXTERNAL-IP   OS-IMAGE                KERNEL-VERSION                CONTAINER-RUNTIME<br>master-01   Ready,SchedulingDisabled   master   19m   v1.28.1   192.168.3.11   &lt;none&gt;        CentOS Linux 7 (Core)   3.10.0-1160.71.1.el7.x86_64   containerd://1.6.23<br>master-02   Ready,SchedulingDisabled   master   19m   v1.28.1   192.168.3.12   &lt;none&gt;        CentOS Linux 7 (Core)   3.10.0-1160.71.1.el7.x86_64   containerd://1.6.23<br>worker-01   Ready                      node     17m   v1.28.1   192.168.3.13   &lt;none&gt;        CentOS Linux 7 (Core)   3.10.0-1160.71.1.el7.x86_64   containerd://1.6.23<br>worker-02   Ready                      node     17m   v1.28.1   192.168.3.14   &lt;none&gt;        CentOS Linux 7 (Core)   3.10.0-1160.71.1.el7.x86_64   containerd://1.6.23<br>worker-03   Ready                      node     17m   v1.28.1   192.168.3.15   &lt;none&gt;        CentOS Linux 7 (Core)   3.10.0-1160.71.1.el7.x86_64   containerd://1.6.23<br>[root@node1 ~]<span class="hljs-comment"># kubectl get pod -n kube-system</span><br>NAME                                         READY   STATUS    RESTARTS   AGE<br>calico-kube-controllers-86b55cf789-6l69w     1/1     Running   0          17m<br>calico-node-2tlph                            1/1     Running   0          17m<br>calico-node-br4qf                            1/1     Running   0          17m<br>calico-node-bxnpg                            1/1     Running   0          17m<br>calico-node-r74ns                            1/1     Running   0          17m<br>calico-node-tzcm9                            1/1     Running   0          17m<br>coredns-7bc88ddb8b-dtk4t                     1/1     Running   0          16m<br>dashboard-metrics-scraper-77b667b99d-gs6mt   1/1     Running   0          16m<br>kubernetes-dashboard-74fb9f77fb-cd6pc        1/1     Running   0          16m<br>metrics-server-dfb478476-q62nr               1/1     Running   0          16m<br>node-local-dns-chmpp                         1/1     Running   0          16m<br>node-local-dns-cphrq                         1/1     Running   0          16m<br>node-local-dns-wmp4f                         1/1     Running   0          16m<br>node-local-dns-z8hx7                         1/1     Running   0          16m<br>node-local-dns-zbnv8                         1/1     Running   0          16m<br></code></pre></td></tr></table></figure>

<h4 id="Live-demo"><a href="#Live-demo" class="headerlink" title="Live demo"></a>Live demo</h4><script type="text/javascript" src="https://asciinema.org/a/Uunw1gW6PSDLXmSMPqG3y8ouF.js" id="asciicast-Uunw1gW6PSDLXmSMPqG3y8ouF" async></script>

<h4 id="K8s-dashboard"><a href="#K8s-dashboard" class="headerlink" title="K8s dashboard"></a>K8s dashboard</h4><ul>
<li>kuboard: <a href="https://kuboard.cn/install/v3/install-in-k8s.html#%E5%AE%89%E8%A3%85">https://kuboard.cn/install/v3/install-in-k8s.html#%E5%AE%89%E8%A3%85</a></li>
<li>Kubesphere: <a href="https://kubesphere.io/zh/docs/v3.4/quick-start/all-in-one-on-linux/">https://kubesphere.io/zh/docs/v3.4/quick-start/all-in-one-on-linux/</a></li>
</ul>
]]></content>
      <categories>
        <category>devops</category>
      </categories>
      <tags>
        <tag>k8s</tag>
        <tag>kubeasz</tag>
      </tags>
  </entry>
  <entry>
    <title>sql server best practice</title>
    <url>/2024/03/30-sql-server-best-practice/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="CPU最佳实践。"><a href="#CPU最佳实践。" class="headerlink" title="CPU最佳实践。"></a>CPU最佳实践。</h3><p>根据CPU架构和核数配置MaxDop.<br><a href="https://learn.microsoft.com/zh-CN/sql/database-engine/configure-windows/configure-the-max-degree-of-parallelism-server-configuration-option?view=sql-server-ver16">https://learn.microsoft.com/zh-CN/sql/database-engine/configure-windows/configure-the-max-degree-of-parallelism-server-configuration-option?view=sql-server-ver16</a></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">EXEC</span> sp_configure <span class="hljs-string">&#x27;show advanced options&#x27;</span>, <span class="hljs-number">1</span>;<br>GO<br>RECONFIGURE <span class="hljs-keyword">WITH</span> OVERRIDE;<br>GO<br><span class="hljs-keyword">EXEC</span> sp_configure <span class="hljs-string">&#x27;max degree of parallelism&#x27;</span>, <span class="hljs-number">4</span>;<br>GO<br>RECONFIGURE <span class="hljs-keyword">WITH</span> OVERRIDE;<br>GO<br></code></pre></td></tr></table></figure>
<h3 id="内存最佳实践。"><a href="#内存最佳实践。" class="headerlink" title="内存最佳实践。"></a>内存最佳实践。</h3><p>Sqlserver的内存尽量占用至主机的85%~80%之间。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">sp_configure <span class="hljs-string">&#x27;show advanced options&#x27;</span>,<span class="hljs-number">1</span>      <span class="hljs-comment">----打开高级配置选项</span><br>go<br>reconfigure                                 <span class="hljs-comment">----确认上述配置</span><br>go<br>sp_configure <span class="hljs-string">&#x27;max server memory (MB)&#x27;</span>,<span class="hljs-number">400000</span> <span class="hljs-comment">----例如，配置‘max Server memory’内存为400000 MB</span><br>go<br>reconfigure                                 <span class="hljs-comment">----确认上述配置</span><br>go<br></code></pre></td></tr></table></figure>
<h3 id="日常管理相关建议。"><a href="#日常管理相关建议。" class="headerlink" title="日常管理相关建议。"></a>日常管理相关建议。</h3><ol>
<li>日志文件和数据文件尽量分别放置在不同的磁盘上有利于磁盘带宽的分配。</li>
<li>对于数据库文件较大的数据库，如果空间使用率很高。对于这方面的优化建议定期检查文件大小及空间使用率预先手动给数据文件分配空间，比如与增长20%的sugg。或是直接将文件增长设为500MB。<br>ALTER DATABASE db2 MODIFY FILE (NAME &#x3D; db2,SIZE &#x3D; <target_size>MB)</li>
<li>对与数据库的日志文件过大，不能截断。建议定期backup log，使日志文件大小保持恒定。</li>
<li>对于数据库中有比较多的表有较大的碎片率，建议定期整理。<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">--使用‘文本方式运行结果集’模式生成批量运行的语句，并结果拷贝至SSMS中运行。</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-string">&#x27;ALTER INDEX &#x27;</span><span class="hljs-operator">+</span>b.name <span class="hljs-operator">+</span><span class="hljs-string">&#x27; ON &#x27;</span><span class="hljs-operator">+</span>schema_name(o.schema_id)<span class="hljs-operator">+</span><span class="hljs-string">&#x27;.&#x27;</span><span class="hljs-operator">+</span>o.name<span class="hljs-operator">+</span><span class="hljs-string">&#x27; REBUILD&#x27;</span><span class="hljs-operator">+</span><span class="hljs-type">char</span>(<span class="hljs-number">13</span>)<span class="hljs-operator">+</span><span class="hljs-string">&#x27;Go&#x27;</span><br><span class="hljs-keyword">FROM</span> sys.dm_db_index_physical_stats (DB_ID(), <span class="hljs-keyword">null</span>, <span class="hljs-keyword">NULL</span>, <span class="hljs-keyword">NULL</span>, <span class="hljs-keyword">NULL</span>) <span class="hljs-keyword">AS</span> a  <br><span class="hljs-keyword">JOIN</span> sys.indexes <span class="hljs-keyword">AS</span> b <br><span class="hljs-keyword">ON</span> a.object_id <span class="hljs-operator">=</span> b.object_id <span class="hljs-keyword">AND</span> a.index_id <span class="hljs-operator">=</span> b.index_id<br><span class="hljs-keyword">join</span> sys.objects <span class="hljs-keyword">as</span> o <br><span class="hljs-keyword">on</span> o.object_id<span class="hljs-operator">=</span>a.object_id<br><span class="hljs-keyword">where</span> avg_fragmentation_in_percent<span class="hljs-operator">&gt;</span><span class="hljs-number">30</span> <span class="hljs-keyword">and</span> b.name <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span><br></code></pre></td></tr></table></figure></li>
</ol>
<h3 id="Tempdb相关建议。"><a href="#Tempdb相关建议。" class="headerlink" title="Tempdb相关建议。"></a>Tempdb相关建议。</h3><ol>
<li>将tempdb放置在非常快速的磁盘上。<br>每一个资源消耗较大的语句都很有可能会使用tempdb。Tempdb的性能对全局性能至关重要。</li>
<li>给tempdb数据库足够数量的文件数量。由于CPU在使用tempdb是以文件为单位的，因此如果比较繁忙时有可能产生有多个CPU核等在同一个文件上产生争用。<br>通常情况下，我们可以给tempdb 8个数据文件。可以使tempdb文件数量和单一NUMA节点内的CPU核数相同。甚至可以使tempdb文件数量和CPU的核数相同。</li>
<li>给tempdb数据库足够的大小尽量避免语句在使用时产生文件的扩张导致执行时间变长。</li>
</ol>
<h3 id="备份相关建议。"><a href="#备份相关建议。" class="headerlink" title="备份相关建议。"></a>备份相关建议。</h3><h5 id="基本建议"><a href="#基本建议" class="headerlink" title="基本建议"></a>基本建议</h5><p>方案一： 每天一次全库备份，每个小时一次日志备份。<br>方案二： 每周一次全库备份，每天一次增量备份，每个小时一次日志备份。</p>
<h5 id="备份策略设计原则："><a href="#备份策略设计原则：" class="headerlink" title="备份策略设计原则："></a>备份策略设计原则：</h5><ol>
<li>根据您的最大允许丢失数据时间。如上述方案中，最大允许丢失数据时间为1h。如果想将此时间提升到15min，则您需要每15min进行一次日志备份。</li>
<li>备份文件的大小。如果每天一次全备则需要占用更大的空间，因此可以考虑每周一次全备，每天一次增量备份。方案一每天产生的大小约为全备+1天的日志变化量。方案二一周需要消耗的空间为一个全备+7天的数据变化量+7天的日志文件。方案一将消耗更多空间。</li>
<li>恢复时间。方案二将会消耗更长的时间。</li>
</ol>
<h3 id="锁相关建议。"><a href="#锁相关建议。" class="headerlink" title="锁相关建议。"></a>锁相关建议。</h3><ol>
<li>禁用锁升级的<code>trace flag 1211</code>来降低<code>deadlock</code>或阻塞的概率。建议只有在发现有明确非常多deadlock或是阻塞的情况下可以使用。<br><a href="https://www.microsoftpressstore.com/articles/article.aspx?p=2233327&seqNum=5">https://www.microsoftpressstore.com/articles/article.aspx?p=2233327&amp;seqNum=5</a></li>
<li>使用<code>snapshot</code>的隔离级别来降低读写之间的争用。</li>
</ol>
<h3 id="其他建议。"><a href="#其他建议。" class="headerlink" title="其他建议。"></a>其他建议。</h3><p>对于从2008大版本升级至2016以上版本，如果在2008上SQL server状态运行良好，可以考虑暂时禁用new_ce可能带来的语句性能下降。<br><a href="https://blogs.technet.microsoft.com/dataplatform/2017/03/22/sql-server-2016-new-features-to-deal-with-the-new-ce/">https://blogs.technet.microsoft.com/dataplatform/2017/03/22/sql-server-2016-new-features-to-deal-with-the-new-ce/</a></p>
<ol>
<li>在语句级别禁用<code>new_CE</code>.<br>使用<code>hint &#39;FORCE_LEGACY_CARDINALITY_ESTIMATION&#39;</code></li>
<li>在数据库级别禁用<code>new_CE</code>. 如下两种方式。<br><code>ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION=ON;</code><br><code>ALTER DATABASE [AdventureWorks2012] SET COMPATIBILITY_LEVEL = 110;</code></li>
<li>在实例级别禁用<code>new_CE</code>。使用<code>trace flag 9481</code>.</li>
</ol>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>sqlserver</tag>
      </tags>
  </entry>
  <entry>
    <title>How to Find Blocking and Deadlock in SQL Server</title>
    <url>/2022/09/19-sql-server-deadlock-and-blocking/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><style>.embed-container {
    position: relative;
    padding-bottom: 56.25%;
    height: 0;
    overflow: hidden;
    max-width: 100%;
  }
  .embed-container iframe, .embed-container object, .embed-container embed {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  </style>

<div class="embed-container"><iframe src="https://www.youtube.com/embed/uxlkQ1FbKyQ" allowfullscreen frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe></div>

<hr>
<ul>
<li>What is deadlock in SQL Server?</li>
<li>What is Blocking in SQL Server?</li>
<li>What is difference between deadlock and blocking in SQL Server?</li>
<li>How to create deliberate deadlock for learning purposes?</li>
<li>What are the deadlock traces in SQL Server?</li>
<li>How to turn on deadlock traces on and off in SQL Server?</li>
<li>How and where to check deadlock information in SQL Server?</li>
</ul>
<hr>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">--How to check blocking in SQL Server</span><br><span class="hljs-keyword">Exec</span> sp_who;<br>GO<br><br><span class="hljs-comment">--How to turn on and off traces and check Traces on SQL Server</span><br>DBCC TRACESTATUS();<br><br><span class="hljs-comment">--How to check If Deadlock traces are enabled or disabled</span><br>DBCC TRACESTATUS(<span class="hljs-number">1204</span>,<span class="hljs-number">1222</span>, <span class="hljs-number">-1</span>)<br><br><span class="hljs-comment">--How to Turn Deadlock Traces on SQL Server</span><br>DBCC TRACEON(<span class="hljs-number">1204</span>,<span class="hljs-number">1222</span>, <span class="hljs-number">-1</span>)<br><br><span class="hljs-comment">--How to Turn deadlock Traces Off</span><br>DBCC TRACEOFF(<span class="hljs-number">1204</span>,<span class="hljs-number">1222</span>, <span class="hljs-number">-1</span>)<br></code></pre></td></tr></table></figure>


<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">--create deliberate deadlock</span><br><span class="hljs-comment">-- Tran1</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> DemoDeadLock1 (SessionNumber <span class="hljs-type">INT</span>)<br><span class="hljs-keyword">INSERT</span> DemoDeadLock1 <span class="hljs-keyword">SELECT</span> <span class="hljs-number">1</span><br><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> DemoDeadLock2 (SessionNumber <span class="hljs-type">INT</span>)<br><span class="hljs-keyword">INSERT</span> DemoDeadLock2 <span class="hljs-keyword">SELECT</span> <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">--Tran2 in new session</span><br><span class="hljs-keyword">BEGIN</span> TRAN<br><span class="hljs-keyword">UPDATE</span>  DemoDeadLock1 <span class="hljs-keyword">SET</span>  SessionNumber<span class="hljs-operator">=</span> <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">--Tran3</span><br><span class="hljs-keyword">BEGIN</span> TRAN<br><span class="hljs-keyword">UPDATE</span>  DemoDeadLock2 <span class="hljs-keyword">SET</span> SessionNumber <span class="hljs-operator">=</span> <span class="hljs-number">1</span><br><span class="hljs-keyword">UPDATE</span>  DemoDeadLock1 <span class="hljs-keyword">SET</span> SessionNumber <span class="hljs-operator">=</span> <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure>


<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">--update Demodeadlock2 table in our Tran2 session</span><br><span class="hljs-keyword">UPDATE</span> DemoDeadLock2 <span class="hljs-keyword">SET</span> SessionNumber <span class="hljs-operator">=</span> <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>SQL Server</tag>
        <tag>Deadlock</tag>
        <tag>Performers</tag>
      </tags>
  </entry>
  <entry>
    <title>sqlcmd client Connection error to sqlserver on windows server</title>
    <url>/2024/04/09-sqlcmd-client-Connection-error-to-sqlserver-on-windows-server/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="Case-scenario"><a href="#Case-scenario" class="headerlink" title="Case scenario"></a>Case scenario</h3><p>I installed <code>SQL Server 2019</code> on <code>Windows Server 2022</code>, When I successful installed <code>SQL Server</code>, local connection with <code>sql server management studio </code> all good. Well, when I tried to using <code>sqlcmd</code> to connect the <code>SQL Server</code> on another Linux machine.</p>
<p>I encountered an issue like this:</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><code class="hljs pgsql">Sqlcmd: Error: Microsoft ODBC Driver <span class="hljs-number">17</span> <span class="hljs-keyword">for</span> <span class="hljs-keyword">SQL</span> <span class="hljs-keyword">Server</span> : A network-related <span class="hljs-keyword">or</span> instance-specific error has occurred <span class="hljs-keyword">while</span> establishing a <span class="hljs-keyword">connection</span> <span class="hljs-keyword">to</span> <span class="hljs-keyword">SQL</span> <span class="hljs-keyword">Server</span>. <span class="hljs-keyword">Server</span> <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-built_in">found</span> <span class="hljs-keyword">or</span> <span class="hljs-keyword">not</span> accessible. <span class="hljs-keyword">Check</span> <span class="hljs-keyword">if</span> instance <span class="hljs-type">name</span> <span class="hljs-keyword">is</span> correct <span class="hljs-keyword">and</span> <span class="hljs-keyword">if</span> <span class="hljs-keyword">SQL</span> <span class="hljs-keyword">Server</span> <span class="hljs-keyword">is</span> configured <span class="hljs-keyword">to</span> allow remote connections. <span class="hljs-keyword">For</span> more information see <span class="hljs-keyword">SQL</span> <span class="hljs-keyword">Server</span> Books Online..<br></code></pre></td></tr></table></figure>

<h3 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h3><h4 id="Check-SQL-server-connection-protocol"><a href="#Check-SQL-server-connection-protocol" class="headerlink" title="Check SQL server connection protocol"></a>Check SQL server connection protocol</h4><p>we know <code>sqlcmd</code> use <code>TCP/IP</code> communicating with the server , so I checked the the server side connection protocol, make sure <code>TCP/IP</code> protocol enabled. Basically, <strong>It has been enabled by default.</strong> But  we still need to make sure it has been enabled. </p>
<p><img src="/../images/image-20240409103849823.png" alt="image-20240409103849823"></p>
<h4 id="Check-IPAddress-and-TCP-Port-1433"><a href="#Check-IPAddress-and-TCP-Port-1433" class="headerlink" title="Check IPAddress and TCP Port 1433"></a>Check IPAddress and TCP Port 1433</h4><blockquote>
<p>why we check this?</p>
</blockquote>
<p>Because on sql server <code>TCP/IP</code> configuration parameter, there is an optional value called <code>Dynamic TCP Port</code>, we have to disable it and set a <code>static IP and port </code>.</p>
<p>Checked TCP 1433, Well, not listening. Further checking, <code>Dynamic TCP Port</code> value set with <code>0</code>,that means enabled, we had to leave it blank to disable it. At meanwhile, We have to enable the IP just like below:</p>
<p><img src="/../images/image-20240409110129790.png" alt="image-20240409110129790"></p>
<p><img src="/../images/image-20240409105856847.png" alt="image-20240409105856847"></p>
<p>After <code>Restarting</code> the <code>SQL server</code>, check again:</p>
<p><img src="/../images/image-20240409111031743.png" alt="image-20240409111031743"></p>
<p><img src="/../images/image-20240409111122648.png" alt="image-20240409111122648"></p>
<h4 id="Add-firewall-rules-for-SQL-server-optional"><a href="#Add-firewall-rules-for-SQL-server-optional" class="headerlink" title="Add firewall rules for SQL server(optional)"></a>Add firewall rules for SQL server(optional)</h4><p>This step is optional, When you still have connection issues you can try this .</p>
<p><img src="/../images/image-20240409104338350.png" alt="image-20240409104338350"></p>
<p><img src="/../images/image-20240409104412171.png" alt="image-20240409104412171"></p>
<p><img src="/../images/image-20240409104446752.png" alt="image-20240409104446752"></p>
<p><img src="/../images/image-20240409104507857.png" alt="image-20240409104507857"></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>SQL Server</tag>
      </tags>
  </entry>
  <entry>
    <title>terraform-to-create-Azure-linux-Virtual-Machine</title>
    <url>/2022/12/11-terraform-to-create-Azure-linux-Virtual-Machine/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="terraform-to-create-Azure-linux-Virtual-Machine"><a href="#terraform-to-create-Azure-linux-Virtual-Machine" class="headerlink" title="terraform-to-create-Azure-linux-Virtual-Machine"></a>terraform-to-create-Azure-linux-Virtual-Machine</h2><blockquote>
<p> Reference</p>
</blockquote>
<ul>
<li><p><a href="https://github.com/hashicorp/terraform-provider-azurerm/tree/main/examples/virtual-machines">https://github.com/hashicorp/terraform-provider-azurerm/tree/main/examples/virtual-machines</a></p>
</li>
<li><p><a href="https://learn.microsoft.com/en-us/azure/virtual-machines/linux/quick-create-terraform">https://learn.microsoft.com/en-us/azure/virtual-machines/linux/quick-create-terraform</a></p>
</li>
<li><p><a href="https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_machine">https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_machine</a></p>
</li>
<li><p><a href="https://gmusumeci.medium.com/how-to-deploy-a-centos-linux-vm-in-azure-using-terraform-64d972008282">https://gmusumeci.medium.com/how-to-deploy-a-centos-linux-vm-in-azure-using-terraform-64d972008282</a></p>
</li>
</ul>
<blockquote>
<p>install azure cli</p>
</blockquote>
<p><a href="https://learn.microsoft.com/zh-cn/cli/azure/install-azure-cli">https://learn.microsoft.com/zh-cn/cli/azure/install-azure-cli</a></p>
<blockquote>
<p>install terraform </p>
</blockquote>
<p><a href="https://developer.hashicorp.com/terraform/downloads">https://developer.hashicorp.com/terraform/downloads</a></p>
<blockquote>
<p>Get started</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs hcl">[root@srv1 azure-vm]# cat output.tf<br>output &quot;resource_group_name&quot; &#123;<br>  value = azurerm_resource_group.main.name<br>&#125;<br>output &quot;computer_name&quot; &#123;<br>  value = azurerm_linux_virtual_machine.main.computer_name<br>&#125;<br>output &quot;admin_username&quot; &#123;<br>  value = azurerm_linux_virtual_machine.main.admin_username<br>&#125;<br>output &quot;public_ip_address&quot; &#123;<br>  value = azurerm_linux_virtual_machine.main.public_ip_address<br>&#125;<br></code></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs hcl">[root@srv1 ~]# cat main.tf<br>provider &quot;azurerm&quot; &#123;<br>  features &#123;<br>    resource_group &#123;<br>      prevent_deletion_if_contains_resources = false<br>    &#125;<br>    /* environment     = &quot;public&quot;<br>  subscription_id = var.azure-subscription-id<br>  client_id       = var.azure-client-id<br>  client_secret   = var.azure-client-secret<br>  tenant_id       = var.azure-tenant-id */<br>  &#125;<br>&#125;<br><br>resource &quot;azurerm_resource_group&quot; &quot;main&quot; &#123;<br>  name     = &quot;$&#123;var.prefix&#125;-resources&quot;<br>  location = var.location<br>&#125;<br><br>resource &quot;azurerm_virtual_network&quot; &quot;main&quot; &#123;<br>  name                = &quot;$&#123;var.prefix&#125;-network&quot;<br>  address_space       = [&quot;10.0.0.0/16&quot;]<br>  location            = azurerm_resource_group.main.location<br>  resource_group_name = azurerm_resource_group.main.name<br>&#125;<br><br>resource &quot;azurerm_subnet&quot; &quot;internal&quot; &#123;<br>  name                 = &quot;internal&quot;<br>  resource_group_name  = azurerm_resource_group.main.name<br>  virtual_network_name = azurerm_virtual_network.main.name<br>  address_prefixes     = [&quot;10.0.2.0/24&quot;]<br>&#125;<br><br>resource &quot;azurerm_public_ip&quot; &quot;main&quot; &#123;<br>  name                = &quot;$&#123;var.prefix&#125;-pip&quot;<br>  resource_group_name = azurerm_resource_group.main.name<br>  location            = azurerm_resource_group.main.location<br>  allocation_method   = &quot;Dynamic&quot;<br>&#125;<br><br>resource &quot;azurerm_network_interface&quot; &quot;main&quot; &#123;<br>  name                = &quot;$&#123;var.prefix&#125;-nic&quot;<br>  resource_group_name = azurerm_resource_group.main.name<br>  location            = azurerm_resource_group.main.location<br><br>  ip_configuration &#123;<br>    name                          = &quot;internal&quot;<br>    subnet_id                     = azurerm_subnet.internal.id<br>    private_ip_address_allocation = &quot;Dynamic&quot;<br>    public_ip_address_id          = azurerm_public_ip.main.id<br>  &#125;<br>&#125;<br><br># Create Network Security Group and rule<br>resource &quot;azurerm_network_security_group&quot; &quot;nsg&quot; &#123;<br>  name                = &quot;myNetworkSecurityGroup&quot;<br>  location            = azurerm_resource_group.main.location<br>  resource_group_name = azurerm_resource_group.main.name<br><br>  security_rule &#123;<br>    name                       = &quot;SSH&quot;<br>    priority                   = 1001<br>    direction                  = &quot;Inbound&quot;<br>    access                     = &quot;Allow&quot;<br>    protocol                   = &quot;Tcp&quot;<br>    source_port_range          = &quot;*&quot;<br>    destination_port_range     = &quot;22&quot;<br>    source_address_prefix      = &quot;*&quot;<br>    destination_address_prefix = &quot;*&quot;<br>  &#125;<br>&#125;<br><br># Connect the security group to the network interface<br>resource &quot;azurerm_network_interface_security_group_association&quot; &quot;main&quot; &#123;<br>  network_interface_id      = azurerm_network_interface.main.id<br>  network_security_group_id = azurerm_network_security_group.nsg.id<br>&#125;<br><br>resource &quot;azurerm_linux_virtual_machine&quot; &quot;main&quot; &#123;<br>  name                = &quot;$&#123;var.prefix&#125;-vm&quot;<br>  resource_group_name = azurerm_resource_group.main.name<br>  location            = azurerm_resource_group.main.location<br>  size                = &quot;Standard_B2s&quot;<br>  admin_username      = &quot;adminuser&quot;<br>  network_interface_ids = [<br>    azurerm_network_interface.main.id,<br>  ]<br><br>  source_image_reference &#123;<br>    publisher = var.linux_vm_image_publisher<br>    offer     = var.linux_vm_image_offer<br>    sku       = var.centos_7_gen2_sku<br>    version   = &quot;latest&quot;<br>  &#125;<br><br>  admin_ssh_key &#123;<br>    username   = &quot;adminuser&quot;<br>    public_key = file(&quot;~/.ssh/id_rsa.pub&quot;)<br>  &#125;<br><br>  os_disk &#123;<br>    storage_account_type = &quot;Standard_LRS&quot;<br>    caching              = &quot;ReadWrite&quot;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs hcl">[root@srv1 ~]# cat variables.tf<br>variable &quot;prefix&quot; &#123;<br>  default     = &quot;azvmlab&quot;<br>  description = &quot;The prefix which should be used for all resources in this example&quot;<br>&#125;<br><br>variable &quot;location&quot; &#123;<br>  default     = &quot;eastasia&quot;<br>  description = &quot;The Azure Region in which all resources in this example should be created.&quot;<br>&#125;<br><br># centos image<br><br>variable &quot;linux_vm_image_publisher&quot; &#123;<br>  type        = string<br>  description = &quot;Virtual machine source image publisher&quot;<br>  default     = &quot;OpenLogic&quot;<br>&#125;<br>variable &quot;linux_vm_image_offer&quot; &#123;<br>  type        = string<br>  description = &quot;Virtual machine source image offer&quot;<br>  default     = &quot;CentOS&quot;<br>&#125;<br>variable &quot;centos_7_sku&quot; &#123;<br>  type        = string<br>  description = &quot;SKU for latest CentOS 8 &quot;<br>  default     = &quot;7_9&quot;<br>&#125;<br>variable &quot;centos_7_gen2_sku&quot; &#123;<br>  type        = string<br>  description = &quot;SKU for latest CentOS 8 Gen2&quot;<br>  default     = &quot;7_9-gen2&quot;<br>&#125;<br>variable &quot;centos_8_sku&quot; &#123;<br>  type        = string<br>  description = &quot;SKU for latest CentOS 8 &quot;<br>  default     = &quot;8_5&quot;<br>&#125;<br>variable &quot;centos_8_gen2_sku&quot; &#123;<br>  type        = string<br>  description = &quot;SKU for latest CentOS 8 Gen2&quot;<br>  default     = &quot;8_5-gen2&quot;<br>&#125;<br><br># Azure auth<br><br>/* variable &quot;azure_subscription_id&quot; &#123;<br>  type = string<br>  description = &quot;Azure Subscription ID&quot;<br>&#125;<br>variable &quot;azure_client_id&quot; &#123;<br>  type = string<br>  defalut     =&quot;&lt;azure_client_id&gt;&quot;<br>  description = &quot;Azure Client ID&quot;<br>&#125;<br>variable &quot;azure_client_secret&quot; &#123;<br>  type = string<br>  description = &quot;Azure Client Secret&quot;<br>&#125;<br>variable &quot;azure_tenant_id&quot; &#123;<br>  type = string<br>  description = &quot;Azure Tenant ID&quot;<br>&#125; */<br></code></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs hcl">[root@srv1 ~]# cat output.tf<br>output &quot;computer_name&quot; &#123;<br>  value = azurerm_linux_virtual_machine.main.computer_name<br>&#125;<br>output &quot;admin_username&quot; &#123;<br>  value = azurerm_linux_virtual_machine.main.admin_username<br>&#125;<br>output &quot;public_ip_address&quot; &#123;<br>  value = azurerm_linux_virtual_machine.main.public_ip_address<br>&#125;<br></code></pre></td></tr></table></figure>
<blockquote>
<p>Need to Know</p>
</blockquote>
<h3 id="make-sure-you-have-ssh-key-created-on-local-machine"><a href="#make-sure-you-have-ssh-key-created-on-local-machine" class="headerlink" title="make sure you have ssh key created on local machine"></a>make sure you have ssh key created on local machine</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@srv1 ~]<span class="hljs-comment"># ssh-keygen</span><br></code></pre></td></tr></table></figure>
<p>We have defined <code>public_key</code> in <code>main.tf</code> file, when linux vm craeted we have to use ssh-key to login </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs hcl">admin_ssh_key &#123;<br>   username   = &quot;adminuser&quot;<br>   public_key = file(&quot;~/.ssh/id_rsa.pub&quot;)<br> &#125;<br></code></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs Bash">[root@srv1 azure-vm]<span class="hljs-comment"># tree</span><br>.<br>├── main.tf<br>├── output.tf<br>├── plan.maintf<br>├── README.md<br>├── terraform.tfstate<br>├── terraform.tfstate.backup<br>└── variables.tf<br><br>[root@srv1 azure-vm]<span class="hljs-comment"># terraform validate</span><br>Success! The configuration is valid.<br>[root@srv1 azure-vm]<span class="hljs-comment"># terraform fmt</span><br>[root@srv1 azure-vm]<span class="hljs-comment"># terraform init</span><br>[root@srv1 azure-vm]<span class="hljs-comment"># terraform plan -out main.plantf</span><br>[root@srv1 azure-vm]<span class="hljs-comment">#  terraform apply main.tfplan</span><br>...<br>Apply complete! Resources: 8 added, 0 changed, 0 destroyed.<br><br>Outputs:<br><br>admin_username = <span class="hljs-string">&quot;adminuser&quot;</span><br>computer_name = <span class="hljs-string">&quot;azvmlab-vm&quot;</span><br>public_ip_address = <span class="hljs-string">&quot;20.205.35.219&quot;</span><br>[root@srv1 azure-vm]<span class="hljs-comment"># terraform output</span><br>admin_username = <span class="hljs-string">&quot;adminuser&quot;</span><br>computer_name = <span class="hljs-string">&quot;azvmlab-vm&quot;</span><br>public_ip_address = <span class="hljs-string">&quot;20.205.35.219&quot;</span><br>[root@srv1 ~]<span class="hljs-comment"># az vm list --resource-group azvmlab-resources --show-details -o table</span><br>Name        ResourceGroup      PowerState    PublicIps      Fqdns    Location    Zones<br>----------  -----------------  ------------  -------------  -------  ----------  -------<br>azvmlab-vm  azvmlab-resources  VM running    20.205.35.219           eastasia<br>[root@srv1 azure-vm]<span class="hljs-comment"># ssh adminuser@20.205.35.219</span><br>The authenticity of host <span class="hljs-string">&#x27;20.205.35.219 (20.205.35.219)&#x27;</span> can<span class="hljs-string">&#x27;t be established.</span><br><span class="hljs-string">ECDSA key fingerprint is SHA256:6DA/ljluFG5cYpgxuDrutNGDsA7SwPPyRzZ2S1ewrpY.</span><br><span class="hljs-string">ECDSA key fingerprint is MD5:46:67:ff:6c:87:53:30:d1:ae:67:a3:39:5f:00:bf:3b.</span><br><span class="hljs-string">Are you sure you want to continue connecting (yes/no)? yes</span><br><span class="hljs-string">Warning: Permanently added &#x27;</span>20.205.35.219<span class="hljs-string">&#x27; (ECDSA) to the list of known hosts.</span><br><span class="hljs-string"></span><br><span class="hljs-string">Thank you for choosing this Microsoft sponsored CentOS image from OpenLogic!</span><br><span class="hljs-string">_______                    ______               _____</span><br><span class="hljs-string">__  __ \______________________  / _____________ ___(_)______</span><br><span class="hljs-string">_  / / /__  __ \  _ \_  __ \_  /  _  __ \_  __ `/_  /_  ___/</span><br><span class="hljs-string">/ /_/ /__  /_/ /  __/  / / /  /___/ /_/ /  /_/ /_  / / /__</span><br><span class="hljs-string">\____/ _  .___/\___//_/ /_//_____/\____/_\__, / /_/  \___/</span><br><span class="hljs-string">       /_/                              /____/  by Perforce</span><br><span class="hljs-string">                           ____           _    ___  ____    _____ ___</span><br><span class="hljs-string">                          / ___|___ _ __ | |_ / _ \/ ___|  |___  / _ \</span><br><span class="hljs-string">                         | |   / _ \ &#x27;</span>_ \| __| | | \___ \     / / (_) |<br>                         | |__|  __/ | | | |_| |_| |___) |   / / \__, |<br>                          \____\___|_| |_|\__|\___/|____/   /_(_)  /_/<br>                                                              (2009)<br><br>While OpenLogic support is not including with this image, OpenLogic does<br>offer Silver (12x5) &amp; Gold (24x7) support options and consulting <span class="hljs-keyword">for</span><br>enterprise and/or mission critical systems as well as over 400 open-source<br>packages.  If interested, email info@perforce.com or call +1 612.517.2100.<br><br>[adminuser@azvmlab-vm ~]$ hostnamectl<br>   Static hostname: azvmlab-vm<br>         Icon name: computer-vm<br>           Chassis: vm<br>        Machine ID: ee6f639ed7044de08fbcaa46cf045b35<br>           Boot ID: 2dce38ac9edd44db9107e451b054a7a6<br>    Virtualization: microsoft<br>  Operating System: CentOS Linux 7 (Core)<br>       CPE OS Name: cpe:/o:centos:centos:7<br>            Kernel: Linux 3.10.0-1160.76.1.el7.x86_64<br>      Architecture: x86-64<br><br></code></pre></td></tr></table></figure>

<h2 id="clean-up"><a href="#clean-up" class="headerlink" title="clean up"></a>clean up</h2><figure class="highlight tap"><table><tr><td class="code"><pre><code class="hljs tap">[root@srv1 azure-vm]<span class="hljs-comment">#  terraform plan -destroy -out main.destroy.tfplan</span><br>[root@srv1 azure-vm]<span class="hljs-comment">#  terraform apply main.destroy.tfplan</span><br>...<br>Apply complete! Resources:<span class="hljs-number"> 0 </span>added,<span class="hljs-number"> 0 </span>changed,<span class="hljs-number"> 8 </span>destroyed.<br><br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>devops</category>
      </categories>
      <tags>
        <tag>terryform</tag>
        <tag>Azure VM</tag>
      </tags>
  </entry>
  <entry>
    <title>update linux server terminal PS1 script</title>
    <url>/2023/10/20-update-linux-server-terminal-PS1-script/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote>
<p>Sometime is it we need to update Linx <code>PS1</code> to make the server to recognize and here is a script to help you to do that. Updated PS1 will like <code>[root@192.168.3.11]#</code></p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@192.168.3.11:~]<span class="hljs-comment"># ./ps1.sh</span><br> Update  /etc/profile Success! Please relogin your system <span class="hljs-keyword">for</span> refresh...<br></code></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/sh</span><br><span class="hljs-comment"># 先判断网卡是否存在，我这边 eth1 是内网网卡</span><br>ifconfig eth1 &gt;/dev/null 2&gt;&amp;1<br><span class="hljs-keyword">if</span> [[ $? != 0 ]]<br><span class="hljs-keyword">then</span><br>   <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;interface eth1 not exsit!&#x27;</span>;<br>   <span class="hljs-built_in">exit</span> 1<br><span class="hljs-keyword">fi</span><br><span class="hljs-comment"># Centos/Redhat 7 ifconfig 显示的结果不是 inet addr: 而是 inet 直接加 IP，所以这里需要判断下：</span><br><span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">Get_eth1IP</span></span>()<br>&#123;<br>  <span class="hljs-keyword">if</span> [[ <span class="hljs-variable">$1</span> -eq 7 ]]<br>  <span class="hljs-keyword">then</span><br>      <span class="hljs-comment">#for centos 7</span><br>      eth1_IP=$(ifconfig eth1 |awk <span class="hljs-string">&#x27;/inet / &#123;print $2&#125;&#x27;</span>|awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span>)<br>   <span class="hljs-keyword">else</span><br>       eth1_IP=$(ifconfig eth1 |awk -F<span class="hljs-string">&quot;:&quot;</span> <span class="hljs-string">&#x27;/inet addr:/ &#123;print $2&#125;&#x27;</span>|awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span>)<br>   <span class="hljs-keyword">fi</span><br>&#125;<br><br><span class="hljs-built_in">test</span> -f /etc/redhat-release &amp;&amp; grep 7 /etc/redhat-release &gt;/dev/null 2&gt;&amp;1 &amp;&amp; Get_eth1IP 7<br><span class="hljs-built_in">test</span> -f /etc/centos-release &amp;&amp; grep 7 /etc/redhat-release &gt;/dev/null 2&gt;&amp;1 &amp;&amp; Get_eth1IP 7 || Get_eth1IP<br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$eth1_IP</span> | grep -E <span class="hljs-string">&quot;[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;&quot;</span>  &gt;/dev/null 2&gt;&amp;1<br><br><span class="hljs-keyword">if</span> [[ $? != 0 ]]<br><span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;eth1_IP is empty!&#x27;</span><br>    <span class="hljs-built_in">exit</span> 1<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">Export</span></span>()<br>&#123;<br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;export PS1=&#x27;\[\e[32m\][\u@<span class="hljs-variable">$&#123;eth1_IP&#125;</span>:\[\e[m\]\[\e[33m\]\w\[\e[m\]\[\e[32m\]]\[\e[m\]\\$ &#x27;&quot;</span>&gt;&gt;<span class="hljs-variable">$&#123;1&#125;</span> &amp;&amp; \<br>    <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;\033[32m Update \033[0m \033[33m<span class="hljs-variable">$&#123;1&#125;</span>\033[33m \033[32mSuccess! Please relogin your system for refresh... \033[0m&quot;</span><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">home_env</span></span>()<br>&#123;<br>    <span class="hljs-keyword">if</span> [[ ! -z  <span class="hljs-variable">$1</span> ]]<br>    <span class="hljs-keyword">then</span><br>        home=<span class="hljs-variable">$1</span><br>    <span class="hljs-keyword">else</span><br>        home=/root<br>    <span class="hljs-keyword">fi</span><br>    <span class="hljs-comment">#有的用户可能会在家目录下自定义一些配置，即 .proflie 这个隐藏文件，所以也需要更新</span><br>    <span class="hljs-built_in">test</span> -f <span class="hljs-variable">$home</span>/.profile &amp;&amp; (<br>        sed -i <span class="hljs-string">&#x27;/export PS1=/d&#x27;</span> <span class="hljs-variable">$home</span>/.profile<br>        Export <span class="hljs-variable">$home</span>/.profile<br>        )<br>&#125;<br><br><span class="hljs-comment">#获取当前用户 id，如果是 root 组的则可以操作/etc/profile</span><br>userid=$(<span class="hljs-built_in">id</span> | awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span> | sed -e <span class="hljs-string">&#x27;s/=/ /&#x27;</span> -e <span class="hljs-string">&#x27;s/(/ /&#x27;</span> -e <span class="hljs-string">&#x27;s/)/ /&#x27;</span>|awk <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>)<br><span class="hljs-keyword">if</span> [[ <span class="hljs-variable">$userid</span> = 0 ]]<br><span class="hljs-keyword">then</span><br>    <span class="hljs-comment">#for all</span><br>    sed -i <span class="hljs-string">&#x27;/export PS1=/d&#x27;</span> /etc/profile<br>    Export /etc/profile<br>    <span class="hljs-comment">#for root</span><br>    home_env<br>    <span class="hljs-comment">#如果其他用户需要修改，只要开启一下三行，并将 other 修改成用户名</span><br>    <span class="hljs-comment">#id other &gt;/dev/null 2&gt;&amp;1 &amp;&amp; (</span><br>    <span class="hljs-comment">#    home_env ~other</span><br>    <span class="hljs-comment">#)</span><br><span class="hljs-keyword">else</span><br>    <span class="hljs-comment">#for userself</span><br>    home_env ~<br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>How-to-upgrade-k8s</title>
    <url>/2022/09/21-upgrade-k8s/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>STEPS:</p>
<ul>
<li>upgrade master node</li>
<li>disable schedule on worker node</li>
<li>upgrade worker node</li>
</ul>
<blockquote>
<p>upgrade master node</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@node1 ~]<span class="hljs-comment"># kubectl get node</span><br>NAME    STATUS   ROLES                  AGE   VERSION<br>node1   Ready    control-plane,master   13d   v1.20.7<br>node2   Ready    worker                 13d   v1.20.7<br>node3   Ready    worker                 13d   v1.20.7<br></code></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@node1 ~]<span class="hljs-comment"># yum install kubectl-1.20.15 kubelet-1.20.15 kubeadm-1.20.15</span><br>[root@node1 ~]<span class="hljs-comment"># kubeadm upgrade plan</span><br>[root@node1 ~]<span class="hljs-comment"># kubeadm upgrade apply v1.20.15</span><br>[root@node1 ~]<span class="hljs-comment"># kubectl get node</span><br>NAME    STATUS   ROLES                  AGE   VERSION<br>node1   Ready    control-plane,master   13d   v1.20.15<br>node2   Ready    worker                 13d   v1.20.7<br>node3   Ready    worker                 13d   v1.20.7<br></code></pre></td></tr></table></figure>
<blockquote>
<p>disable schedule on worker node</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@node1 ~]<span class="hljs-comment"># kubectl drain node2 --ignore-daemonsets --delete-emptydir-data</span><br>[root@node1 ~]<span class="hljs-comment"># kubectl get node</span><br>NAME    STATUS                     ROLES                  AGE   VERSION<br>node1   Ready                      control-plane,master   13d   v1.20.15<br>node2   Ready,SchedulingDisabled   worker                 13d   v1.20.7<br>node3   Ready                      worker                 13d   v1.20.7<br></code></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Worker Node2</span><br>[root@node2 ~]<span class="hljs-comment"># yum install kubectl-1.20.15 kubelet-1.20.15 kubeadm-1.20.15</span><br>[root@node2 ~]<span class="hljs-comment"># systemctl daemon-reload</span><br>[root@node2 ~]<span class="hljs-comment"># systemctl restart kubelet</span><br>[root@node1 ~]<span class="hljs-comment"># kubectl get node</span><br>NAME    STATUS                     ROLES                  AGE   VERSION<br>node1   Ready                      control-plane,master   13d   v1.20.15<br>node2   Ready,SchedulingDisabled   worker                 13d   v1.20.15<br>node3   Ready                      worker                 13d   v1.20.7<br>[root@node1 ~]<span class="hljs-comment"># kubectl uncordon node2</span><br>node/node2 uncordoned<br>[root@node1 ~]<span class="hljs-comment"># kubectl get node</span><br>NAME    STATUS                     ROLES                  AGE   VERSION<br>node1   Ready                      control-plane,master   13d   v1.20.15<br>node2   Ready                      worker                 13d   v1.20.15<br>node3   Ready                      worker                 13d   v1.20.7<br></code></pre></td></tr></table></figure>
<p>Same step on worker <code>node3</code> as on worker <code>node2</code>, after upgrade complete:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@node1 ~]<span class="hljs-comment"># kubectl get node</span><br>NAME    STATUS   ROLES                  AGE   VERSION<br>node1   Ready    control-plane,master   13d   v1.20.15<br>node2   Ready    worker                 13d   v1.20.15<br>node3   Ready    worker                 13d   v1.20.15<br></code></pre></td></tr></table></figure>
<p>set k8s node role:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[root@node1 ~]<span class="hljs-comment"># kubectl label node node1 node-role.kubernetes.io/worker=worker</span><br></code></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>windows deployment service pxe install windows</title>
    <url>/2022/12/29-windows-deployment-service-pxe-install-windows/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><style>.embed-container {
    position: relative;
    padding-bottom: 56.25%;
    height: 0;
    overflow: hidden;
    max-width: 100%;
  }
  .embed-container iframe, .embed-container object, .embed-container embed {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  </style>

<div class="embed-container"><iframe src="https://www.youtube.com/embed/ARDjb2UV3Nw" allowfullscreen frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe></div>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>pxe</tag>
        <tag>WDS</tag>
      </tags>
  </entry>
  <entry>
    <title>zabbix Tutorial</title>
    <url>/2022/12/23-zabbix-Tutorial/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Zabbix 手册：<a href="https://www.zabbix.com/documentation/3.4/zh/manual">https://www.zabbix.com/documentation/3.4/zh/manual</a></p>
<p>Zabbix 3.0 从入门到精通(zabbix使用详解)：<a href="https://www.cnblogs.com/clsn/p/7885990.html">https://www.cnblogs.com/clsn/p/7885990.html</a></p>
<h3 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h3><p>Zabbix能监控各种网络参数，以及服务器健康性和完整性。提供了灵活的通知机制，以快速反馈服务器的问题。提供了Web的前端页面，以访问报告、统计信息和配置参数。</p>
<h4 id="1、组成结构"><a href="#1、组成结构" class="headerlink" title="1、组成结构"></a>1、组成结构</h4><p>zabbix由Zabbix server、Zabbix proxy和Zabbix agent组成</p>
<h5 id="Zabbix-server"><a href="#Zabbix-server" class="headerlink" title="Zabbix server"></a>Zabbix server</h5><p>核心程序，通过主动轮询和被动捕获数据，计算是否满足触发器条件，向用户发送通知。<br>分三个不同组件：Zabbix服务器、Web前端和数据库存储。</p>
<h5 id="Zabbix-proxy"><a href="#Zabbix-proxy" class="headerlink" title="Zabbix proxy"></a>Zabbix proxy</h5><p>可选部署，替Zabbix Server收集数据，分担负载压力。<br>所有收集的数据都在本地进行缓存，然后传送到proxy所属的Zabbix sever。需要使用独立的数据库。</p>
<h5 id="Zabbix-agent"><a href="#Zabbix-agent" class="headerlink" title="Zabbix agent"></a>Zabbix agent</h5><p>部署在监控目标，调用本地系统监控性能，收集数据，报告给Zabbix Server。<br>可以执行被动和主动两种检查方式。</p>
<h4 id="2、工作原理"><a href="#2、工作原理" class="headerlink" title="2、工作原理"></a>2、工作原理</h4><p>zabbix agent需要安装到被监控的主机上，它负责定期收集各项数据，并发送到zabbix server端，zabbix server将数据存储到数据库中，zabbix web 根据数据在前端进行展现和绘图。</p>
<p>agent收集数据分为两种模式：</p>
<h5 id="被动模式"><a href="#被动模式" class="headerlink" title="被动模式"></a>被动模式</h5><p>server&#x2F;proxy向agent请求获取监控项的数据，agent应答数据请求，回送结果。<br>默认采用，客户端量大之后，pull任务会出现积压，出现延迟和卡顿。<br>被动模式端口不可用时，也可选用主动模式</p>
<h5 id="主动模式"><a href="#主动模式" class="headerlink" title="主动模式"></a>主动模式</h5><p>agent先请求server获取主动的监控项列表，再主动将收集数据周期性提交给server&#x2F;proxy。<br>更改为主动模式后，监控项也要选择主动模式。</p>
<h4 id="3、常用架构"><a href="#3、常用架构" class="headerlink" title="3、常用架构"></a>3、常用架构</h4><p>在实际监控架构中，zabbix根据网络环境、监控规模等分了三种架构：</p>
<h5 id="server-client架构"><a href="#server-client架构" class="headerlink" title="server-client架构"></a>server-client架构</h5><p>最简单的架构，监控机和被监控机之间不经过任何代理，直接由zabbix server和zabbix agentd之间进行数据交互。 适用于网络比较简单，设备比较少的监控环境。</p>
<h5 id="server-proxy-client架构"><a href="#server-proxy-client架构" class="headerlink" title="server-proxy-client架构"></a>server-proxy-client架构</h5><p>proxy沟通server、client，分担负载压力，没有前端，缓存agentd数据，再提交给server。 适用于跨机房、跨网络的中型网络架构的监控。</p>
<h5 id="master-node-client架构"><a href="#master-node-client架构" class="headerlink" title="master-node-client架构"></a>master-node-client架构</h5><p>每个node同时也是一个server端，node下面可以接proxy，也可以直接接client 。node有自已的配置文件和数据库，其要做的是将配置信息和监控数据向master同步，master的故障或损坏对node其下架构的完整性。 适用于跨网络、跨机房、设备较多的大型环境。</p>
<p><a href="https://cdn.jsdelivr.net/gh/wujun234/images@master/1545712504937.jpg"><img src="/../images/1545712504937.jpg" alt="img"></a></p>
<h3 id="二、安装"><a href="#二、安装" class="headerlink" title="二、安装"></a>二、安装</h3><h4 id="Zabbix-server-1"><a href="#Zabbix-server-1" class="headerlink" title="Zabbix server"></a>Zabbix server</h4><h5 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h5><p>依赖Apache、MySQL、PHP，需事先装好LAMP环境。</p>
<h5 id="从部署包安装"><a href="#从部署包安装" class="headerlink" title="从部署包安装"></a>从部署包安装</h5><p>以CentOS 7 、zabbix3.2为例</p>
<ol>
<li>安装源码库配置部署包。</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">rpm -ivh http://repo.zabbix.com/zabbix/3.2/rhel/7/x86_64/zabbix-release-3.2-1.el7.noarch.rpm<br></code></pre></td></tr></table></figure>

<ol>
<li>安装Zabbix部署包。</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">yum install zabbix-server-mysql zabbix-web-mysql<br></code></pre></td></tr></table></figure>

<ol>
<li>安装初始化数据库</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">shell<span class="hljs-operator">&gt;</span> mysql <span class="hljs-operator">-</span>uroot <span class="hljs-operator">-</span>p<span class="hljs-operator">&lt;</span>password<span class="hljs-operator">&gt;</span><br>mysql<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">create</span> database zabbix <span class="hljs-type">character</span> <span class="hljs-keyword">set</span> utf8 <span class="hljs-keyword">collate</span> utf8_bin;<br>mysql<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">grant</span> <span class="hljs-keyword">all</span> privileges <span class="hljs-keyword">on</span> zabbix.<span class="hljs-operator">*</span> <span class="hljs-keyword">to</span> zabbix<span class="hljs-variable">@localhost</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;&lt;password&gt;&#x27;</span>;<br>mysql<span class="hljs-operator">&gt;</span> quit;<br></code></pre></td></tr></table></figure>

<ol>
<li>导入初始架构和数据。</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /usr/share/doc/zabbix-server-mysql-3.2.11<br>zcat create.sql.gz | mysql -uroot zabbix<br></code></pre></td></tr></table></figure>

<ol>
<li>修改Zabbix前端的Apache配置文件</li>
</ol>
<p>更改时区</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">vi /etc/httpd/conf.d/zabbix.conf<br>php_value date.timezone Asia/Shanghai<br></code></pre></td></tr></table></figure>

<ol>
<li>启动Zabbix Server进程</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">systemctl start zabbix-server<br></code></pre></td></tr></table></figure>

<ol>
<li>重启Apache Web服务器</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">systemctl start httpd<br></code></pre></td></tr></table></figure>

<ol>
<li>访问&#x2F;setup.php初始化</li>
</ol>
<p>访问<a href="http://zabbix-frontend-hostname/zabbix/setup.php%EF%BC%8C%E9%85%8D%E7%BD%AE%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AD%89%E4%BF%A1%E6%81%AF%E3%80%82">http://zabbix-frontend-hostname/zabbix/setup.php，配置数据库等信息。</a></p>
<p>默认的用户名／密码为 <code>Admin/zabbix</code>。</p>
<h5 id="配置通知脚本"><a href="#配置通知脚本" class="headerlink" title="配置通知脚本"></a>配置通知脚本</h5><ol>
<li>将通知脚本放入默认路径：<code>/usr/lib/zabbix/alertscripts</code>。</li>
<li>在“报警媒介类型”添加通知脚本。</li>
</ol>
<h4 id="Zabbix-Agent"><a href="#Zabbix-Agent" class="headerlink" title="Zabbix Agent"></a>Zabbix Agent</h4><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">yum install zabbix-agent<br></code></pre></td></tr></table></figure>

<h5 id="被动模式配置"><a href="#被动模式配置" class="headerlink" title="被动模式配置"></a>被动模式配置</h5><p>1、agent端</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">StartAgents=3//被动模式，启动客户端数不为0<br>Server=x.x.x.x//允许获取数据的地址，可配置0.0.0.0/0允许任意ip获取数据<br>Hostname=zabbix_client//与服务端设置的名字相同<br></code></pre></td></tr></table></figure>

<p>2、zabbix-server端<br>zabbix监控模板默认使用的就是被动模式，直接添加就好</p>
<h5 id="主动模式配置"><a href="#主动模式配置" class="headerlink" title="主动模式配置"></a>主动模式配置</h5><p>1、agent端</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">StartAgents=0//主动模式，不启动客户端<br>ServerActive=x.x.x.x//配置服务器地址，可配置域名，域名如用nginx需要tcp转发10051端口<br>Hostname=zabbix_master//与服务端设置的名字相同<br></code></pre></td></tr></table></figure>

<p>2、zabbix-server端<br>克隆默认的模板，将配置项和自动发现改为主动模式，主机连接主动模式模板</p>
<h3 id="三、迁移"><a href="#三、迁移" class="headerlink" title="三、迁移"></a>三、迁移</h3><p>在新服务器上安装好相同版本Zabbix server。</p>
<h5 id="不保留历史数据"><a href="#不保留历史数据" class="headerlink" title="不保留历史数据"></a>不保留历史数据</h5><p>只需迁移配置文件。</p>
<blockquote>
<p>Zabbix server配置文件：&#x2F;etc&#x2F;zabbix&#x2F;zabbix_server.conf<br>Zabbix web配置文件：&#x2F;etc&#x2F;httpd&#x2F;conf.d&#x2F;zabbix.conf<br>通知脚本：&#x2F;usr&#x2F;lib&#x2F;zabbix&#x2F;alertscripts</p>
</blockquote>
<h5 id="保留历史数据"><a href="#保留历史数据" class="headerlink" title="保留历史数据"></a>保留历史数据</h5><p>还需迁移数据库。</p>
<p>1.导出zabbix数据库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">mysqldump -uroot -p --opt  zabbix &gt; zabbix.sql<br></code></pre></td></tr></table></figure>

<p>2.传送sql文件到新的服务器上（新服务器上基本环境应搭建好）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">scp zabbix.sql root@x.x.x.x:/tmp<br></code></pre></td></tr></table></figure>

<p>3.在新服务器上导入sql文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">mysql -uroot -p zabbix &lt; zabbix.sql<br></code></pre></td></tr></table></figure>

<h3 id="四、使用"><a href="#四、使用" class="headerlink" title="四、使用"></a>四、使用</h3><p>为了创建一个监控项(item)用于采集数据，必须先创建一个主机（host）。告警方面，在监控项里创建触发器（trigger），通过触发器（trigger）来触发告警动作（action）。</p>
<p>或者对主机使用模板。</p>
<h5 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h5><ol>
<li>以具有“超级管理员”权限的用户登陆。</li>
<li>在“管理”→“用户”页面下，点击“创建用户”以增加用户。</li>
<li>填写基本信息，选择用户组，</li>
<li>在“报警媒介”标签下，添加邮箱和微信报警</li>
<li>在“权限”标签下，选择用户类型</li>
</ol>
<h5 id="添加主机"><a href="#添加主机" class="headerlink" title="添加主机"></a>添加主机</h5><ol>
<li>以具有“超级管理员”权限的用户登陆。</li>
<li>在“配置”→“主机”页面下，点击“创建主机”以新增主机。</li>
<li>主机名称和IP地址都填写IP地址，选择主机组。</li>
</ol>
<h5 id="添加监控项"><a href="#添加监控项" class="headerlink" title="添加监控项"></a>添加监控项</h5><ol>
<li>在“主机”→“监控项”页面下，点击“创建监控项”以新增监控项。</li>
<li>类型根据客户端选择“Zabbix客户端”或“Zabbix客户端（主动式）”</li>
<li>键值填写 Zabbix Agent<a href="https://www.zabbix.com/documentation/3.4/manual/config/items/itemtypes/zabbix_agent">预定义值</a> 中的一种。</li>
<li>“历史数据保留时长”填写7天。</li>
</ol>
<h5 id="添加触发器"><a href="#添加触发器" class="headerlink" title="添加触发器"></a>添加触发器</h5><ol>
<li>在“主机”→“触发器”页面下，点击“创建触发器”以新增触发器。</li>
<li>填写名称、选择表达式</li>
</ol>
<h5 id="添加报警媒介"><a href="#添加报警媒介" class="headerlink" title="添加报警媒介"></a>添加报警媒介</h5><ol>
<li>在“管理”→“报警媒介类型”页面下，点击“创建报警媒介”以新增报警媒介。</li>
<li>添加类型为脚本，名称为&#x2F;usr&#x2F;lib&#x2F;zabbix&#x2F;alertscripts下通知脚本的报警媒介</li>
<li>在“配置”→“动作”页面下，点击“创建动作”以新增报警媒介的动作。</li>
</ol>
<h5 id="添加模版"><a href="#添加模版" class="headerlink" title="添加模版"></a>添加模版</h5><ol>
<li>在“配置”→“模版”页面下，点击“创建模版”以新增模版。</li>
<li>为模板添加监控项，之后就可给主机链接模板，复用监控项</li>
</ol>
<h3 id="五-、-配置问题"><a href="#五-、-配置问题" class="headerlink" title="五 、 配置问题"></a>五 、 配置问题</h3><p>Zabbix中文界面下，图形页面会有乱码，是因为字体格式不一致导致</p>
<p><a href="https://cdn.jsdelivr.net/gh/wujun234/images@master/1545712505256.jpg"><img src="/../images/1545712505256.jpg" alt="img"></a></p>
<ol>
<li>从C:\Windows\Fonts找到 中文字体上传至zabbix的fonts目录&#x2F;usr&#x2F;share&#x2F;zabbix&#x2F;fonts</li>
<li>修改include下的defines.inc.php中字体的配置，将里面关于字体设置从graphfont替换成simkai，使用<code>%s/graphfont/simhei/g</code>命令对graphfont进行全局替换</li>
<li>刷新页面</li>
</ol>
<h3 id="六、zabbix主动模式、被动模式"><a href="#六、zabbix主动模式、被动模式" class="headerlink" title="六、zabbix主动模式、被动模式"></a>六、zabbix主动模式、被动模式</h3><p>zabbix agent检测分为主动（agent active）和被动（agent）两种形式，主动与被动的说法均是相对于agent来讨论的。</p>
<ul>
<li>主动：agent请求server获取主动的监控项列表，并主动将监控项内需要检测的数据提交给server&#x2F;proxy</li>
<li>被动：server向agent请求获取监控项的数据，agent返回数据。</li>
</ul>
<p>默认采用被动模式，但当被监控端数量过多时，被动模式会出现严重的性能问题：</p>
<ol>
<li>Web操作很卡，容易出现502</li>
<li>图层断裂</li>
<li>开启的进程（Pollar）太多，即使减少item数量，以后加入一定量的机器也会有问题</li>
</ol>
<p>优化主要有两个方向：</p>
<ol>
<li>添加Proxy节点或者Node模式做分布式监控</li>
<li>调整Agentd为主动模式</li>
</ol>
<h3 id="被动模式-1"><a href="#被动模式-1" class="headerlink" title="被动模式"></a>被动模式</h3><p>客户端默认端口10050</p>
<h4 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h4><p>Server打开一个TCP连接<br>Server发送一个key为agent.ping<br>Agent接受这个请求，然后响应&lt; HEADER &gt;&lt; DATALEN &gt;<br>Server对接受到的数据进行处理<br>TCP连接关闭</p>
<h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>1、agent端重点</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">StartAgents=3//被动模式，启动客户端数不为0<br>Server=x.x.x.x//允许获取数据的地址，可配置0.0.0.0/0允许任意ip获取数据<br>Hostname=zabbix_client//与服务端设置的名字相同<br></code></pre></td></tr></table></figure>

<p>2、zabbix-server端<br>zabbix监控模板默认使用的就是被动模式，直接添加就好</p>
<h3 id="主动模式-1"><a href="#主动模式-1" class="headerlink" title="主动模式"></a>主动模式</h3><h4 id="流程-1"><a href="#流程-1" class="headerlink" title="流程"></a>流程</h4><p>1.获取列表</p>
<p>Agent向Server建立一个TCP连接<br>Agent请求需要检测的items数据列表<br>Server响应Agent，发送一个Items列表<br>Agent处理响应<br>TCP连接完成本次会话关闭<br>Agent开始周期性地收集数据</p>
<p>2.主动检测提交数据</p>
<p>Agent建立TCP连接 Agent提交items列表收集的数据 Server处理数据，并返回响应状态 关闭TCP连接</p>
<h4 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h4><p>1、agent配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">StartAgents=0//主动模式，不启动客户端<br>ServerActive=x.x.x.x//配置服务器地址，可配置域名，域名如用nginx需要tcp转发10051端口<br>Hostname=zabbix_master//与服务端设置的名字相同<br></code></pre></td></tr></table></figure>

<p>2、zabbix-server端 克隆默认的模板，将配置项和自动发现改为主动模式，主机连接主动模式模板</p>
<h3 id="七、Zabbix迁移"><a href="#七、Zabbix迁移" class="headerlink" title="七、Zabbix迁移"></a>七、Zabbix迁移</h3><p>zabbix的前端所有的操作都存在zabbix数据库里。<br>如果迁移要求历史数据不丢失，对zabbix库中相应的表进行导出导入即可。<br>若是对历史数据不要求，那么只迁移配置信息即可。</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ul>
<li>根据zabbix手册新安装zabbix服务端，如果需要保留历史数据，务必使用相同版本。</li>
<li>安装好后访问&#x2F;setup.php初始化。</li>
<li>同步数据库。</li>
<li>若想升级，先按相同版本迁移，再执行升级流程，否则版本不同数据库差异很大，错误连连。</li>
<li>配置邮件发送，使用smtp，不要自己配置sendmail等，坑多。</li>
</ul>
<h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><p>1.导出zabbix数据库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">mysqldump -uroot -p --opt  zabbix &gt; zabbix.sql<br></code></pre></td></tr></table></figure>

<p>2.传送sql文件到新的服务器上（新服务器上基本环境应搭建好）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">scp zabbix.sql root@x.x.x.x:/tmp<br></code></pre></td></tr></table></figure>

<p>3.在新服务器上导入sql文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">mysql -uroot -p zabbix &lt; zabbix.sql<br></code></pre></td></tr></table></figure>

<p>#zabbix库可以是一个新建的库，也可以是已经存在的库，因为sql文件再导入时，会先看表是否存在，假如表存在会先删除再导入</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>zabbix</tag>
      </tags>
  </entry>
  <entry>
    <title>zerossl request free ssl certificate with acme.sh</title>
    <url>/2023/01/03-zerossl-request-free-ssl-certificate-with-acme-sh/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="install-acme-sh"><a href="#install-acme-sh" class="headerlink" title="install acme.sh"></a>install acme.sh</h3><p><a href="https://github.com/acmesh-official/acme.sh">https://github.com/acmesh-official/acme.sh</a></p>
<p><a href="https://blog.freessl.cn/acme-quick-start/">https://blog.freessl.cn/acme-quick-start/</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">root@nas:~<span class="hljs-comment">#  yum install -y curl socat   </span><br>root@nas:~<span class="hljs-comment">#  wget -qO- get.acme.sh | bash</span><br>root@nas:~<span class="hljs-comment">#  alias acme.sh=~/.acme.sh/acme.sh</span><br>root@nas:~<span class="hljs-comment">#  crontab -l</span><br>* * * * * [ -f /etc/krb5.keytab ] &amp;&amp; [ \( ! -f /etc/opt/omi/creds/omi.keytab \) -o \( /etc/krb5.keytab -nt /etc/opt/omi/creds/omi.keytab \) ] &amp;&amp; <span class="hljs-built_in">sleep</span> 5 &amp;&amp; /opt/omi/bin/support/ktstrip /etc/krb5.keytab /etc/opt/omi/creds/omi.keytab &gt;/dev/null 2&gt;&amp;1 || <span class="hljs-literal">true</span><br>7 0 * * * <span class="hljs-string">&quot;/root/.acme.sh&quot;</span>/acme.sh --cron --home <span class="hljs-string">&quot;/root/.acme.sh&quot;</span> &gt; /dev/null<br></code></pre></td></tr></table></figure>

<h3 id="request-ssl"><a href="#request-ssl" class="headerlink" title="request ssl"></a>request ssl</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># make sure you have registered real account xxxx@outlook.com on https://zerossl.com</span><br>root@nas:~<span class="hljs-comment"># acme.sh --register-account -m xxxx@outlook.com</span><br><span class="hljs-comment"># if you don&#x27;t have websrv on http port 80</span><br>root@nas:~<span class="hljs-comment"># ~/.acme.sh/acme.sh  --issue -d mydomain.com   --standalone</span><br><span class="hljs-comment"># if you already have a websrv nginx runing on local host</span><br>root@nas:~<span class="hljs-comment"># ~/.acme.sh/acme.sh --issue  -d &lt;mydomain.com&gt;  --nginx</span><br><span class="hljs-comment"># install ssl certificate to the path</span><br>root@nas:~<span class="hljs-comment"># ~/.acme.sh/acme.sh --installcert -d &lt;mydomain.com&gt; --key-file /etc/pki/tls/private/key.pem --fullchain-file /etc/pki/tls/certs/cert.pem --reloadcmd  &quot;systemctl reload nginx&quot;</span><br></code></pre></td></tr></table></figure>

<h3 id="Nginx-configure"><a href="#Nginx-configure" class="headerlink" title="Nginx configure"></a>Nginx configure</h3><figure class="highlight nginx"><table><tr><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">listen</span> <span class="hljs-number">80</span>; <span class="hljs-comment"># redirect to 443</span><br>    <span class="hljs-attribute">server_name</span> AAA.example.cn www.AAA.example.cn;<br>    <span class="hljs-attribute">rewrite</span><span class="hljs-regexp"> ^(.*)$</span>  https://<span class="hljs-variable">$host</span><span class="hljs-variable">$1</span> <span class="hljs-literal">permanent</span>; <br>    <span class="hljs-comment"># return 301 https://$server_name$request_uri;</span><br>&#125;<br><br><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">listen</span> <span class="hljs-number">443</span> ssl; <span class="hljs-comment"># redirect to https</span><br>    <span class="hljs-attribute">server_name</span> AAA.example.cn www.AAA.example.cn;<br>    <span class="hljs-attribute">ssl_certificate</span> <span class="hljs-string">&quot;/etc/pki/tls/certs/ca.crt&quot;</span>;<br>  <span class="hljs-comment"># ssl_certificate &quot;/etc/pki/tls/certs/cert.pem&quot;;</span><br>    <span class="hljs-attribute">ssl_certificate_key</span> <span class="hljs-string">&quot;/etc/pki/tls/private/ca.key&quot;</span>;<br>  <span class="hljs-comment"># ssl_certificate_key &quot;/etc/pki/tls/private/key.pem&quot;;</span><br>    <span class="hljs-section">location</span> / &#123;<br>        <span class="hljs-attribute">proxy_pass</span> http://127.0.0.1:8090;<br>        <span class="hljs-attribute">proxy_set_header</span> X-Real-IP <span class="hljs-variable">$remote_addr</span>;<br>        <span class="hljs-attribute">proxy_set_header</span> X-Forwarded-For <span class="hljs-variable">$proxy_add_x_forwarded_for</span>;<br>        <span class="hljs-attribute">proxy_set_header</span> Host <span class="hljs-variable">$http_host</span>;<br>        <span class="hljs-attribute">proxy_set_header</span> X-NginX-Proxy <span class="hljs-literal">true</span>;<br>        <span class="hljs-attribute">proxy_redirect</span> default;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">root@nas:~<span class="hljs-comment"># nginx -s reload </span><br></code></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>zerossl</tag>
        <tag>ssl</tag>
      </tags>
  </entry>
</search>
